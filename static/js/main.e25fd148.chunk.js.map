{"version":3,"sources":["FourierCoefficients.module.css","FrequencyDomain.module.css","App.module.css","FourierCoefficients.js","FrequencyDomain.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Dials","props","className","styles","signal_container","signal_info","signal","id","onClick","i","onRemove","signal_props","amplitude","phase","signal_dials","signal_id","input_type","type","min","max","value","step","onChange","Controls","event","signalList","this","signals","length","push","key","renderDial","dials","align-content","onAdd","React","Component","FourierCirclesMagPos","cx","cy","transform","r","fill","stroke","strokeWidth","onMouseDown","onMouseUp","onMouseOut","onMouseMove","FourierCirclesMagNeg","FourierCirclesPhasePos","FourierCirclesPhaseNeg","FourierMagPlot","FourierMagSvg","d3","circleList","renderCirclePos","renderCircleNeg","document","getElementById","xscale_freq","domain","range","yscale_freq","xAxisTicks","ticks","filter","tick","Number","isInteger","x_axis_freq","tickValues","tickFormat","y_axis_freq","append","attr","style","text","call","FourierPhasePlot","FourierPhaseSvg","SinePlot","current","svgID","pathID","concat","toString","pathData","curve","lineGenerator","values","xscale","yscale","x_axis","scale","y_axis","svgSinePlot","SumPlot","sumSignals","k","j","n","svgSumPlot","FourierCoefficients","state","circles","handleMouseDown","bind","handleMouseUp","handleMouseMove","handleMouseMoveFourierMag","handleMouseMoveFourierPhase","setState","frequency","generateSignal","dragging","console","log","splice","remove","points","Ts","Math","PI","sin","inputType","target","getAttribute","signalID","parseFloat","isNaN","generateDC","e","preventDefault","clientX","clientY","rect","parentNode","getBoundingClientRect","left","top","parseInt","container","sinePlots","otherPlots","fourierPhasePlots","width","height","position","border","fourierMagPlots","sumPlots","controls","handleChange","addSignal","removeSignal","Circles","FrequencyPlot","freqSvg","renderCircle","FrequencyDomain","freqPlots","App","navbar","tab","to","exact","path","About","Home","ReactDOM","render","Boolean","window","location","hostname","match","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e25fd148.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"FourierCoefficients_home__GMx67\",\"container\":\"FourierCoefficients_container__1Frgp\",\"navbar\":\"FourierCoefficients_navbar__3tlI4\",\"tab\":\"FourierCoefficients_tab__3xNg1\",\"controls\":\"FourierCoefficients_controls__1UsjP\",\"dials\":\"FourierCoefficients_dials__DZqWq\",\"signal_container\":\"FourierCoefficients_signal_container__2i3Xu\",\"signal_info\":\"FourierCoefficients_signal_info__vyYdI\",\"signal_props\":\"FourierCoefficients_signal_props__2GDl0\",\"signal_dials\":\"FourierCoefficients_signal_dials__9Y6X0\",\"sinePlots\":\"FourierCoefficients_sinePlots__3LfB9\",\"otherPlots\":\"FourierCoefficients_otherPlots__36PLJ\",\"fourierMagPlots\":\"FourierCoefficients_fourierMagPlots__2Stl0\",\"fourierPhasePlots\":\"FourierCoefficients_fourierPhasePlots__2gtLC\",\"sumPlots\":\"FourierCoefficients_sumPlots__1RLyr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"FrequencyDomain_home__2q48T\",\"container\":\"FrequencyDomain_container__2HkGw\",\"navbar\":\"FrequencyDomain_navbar__2IL4h\",\"tab\":\"FrequencyDomain_tab__2B9tf\",\"controls\":\"FrequencyDomain_controls__3SPxr\",\"dials\":\"FrequencyDomain_dials__3IGry\",\"signal_container\":\"FrequencyDomain_signal_container__2aVS5\",\"signal_info\":\"FrequencyDomain_signal_info__1ajb5\",\"signal_props\":\"FrequencyDomain_signal_props__LwiuE\",\"signal_dials\":\"FrequencyDomain_signal_dials__3w0TI\",\"sinePlots\":\"FrequencyDomain_sinePlots__2XeHT\",\"otherPlots\":\"FrequencyDomain_otherPlots__3N6T2\",\"freqPlots\":\"FrequencyDomain_freqPlots__1dZNf\",\"sumPlots\":\"FrequencyDomain_sumPlots__1ELsv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"App_home__1BqOv\",\"container\":\"App_container__1WoZZ\",\"navbar\":\"App_navbar__1cL1h\",\"tab\":\"App_tab__1gEhD\"};","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport styles from './FourierCoefficients.module.css'; \r\nimport * as d3 from \"d3\";\r\n\r\nconst svgContainerWidth = 800;\r\nconst svgContainerHeight = 800;\r\n\r\nfunction Dials(props) {\r\n    return(\r\n        <div className={styles.signal_container}>\r\n            <div className={styles.signal_info}>\r\n                <div>ID: {props.signal.id}</div>\r\n                <button id = \"remove-signal\" onClick={(i) => props.onRemove(props.signal.id)}> Remove Signal </button>\r\n            </div>\r\n            <div className={styles.signal_props}>\r\n                <div>Amplitude: {props.signal.amplitude}</div>\r\n                <div>Phase: {props.signal.phase}</div>\r\n            </div>\r\n            <div className = {styles.signal_dials}>\r\n                <div>\r\n                    <input \r\n                    id = {\"signal\" + props.signal.id + \"_AmpDial\" }\r\n                    signal_id = {props.signal.id}\r\n                    input_type = {\"AmpDial\"}\r\n                    type =\"range\" \r\n                    min={-5} \r\n                    max ={5} \r\n                    value = {props.signal.amplitude} \r\n                    step={0.1}\r\n                    onChange={props.onChange}\r\n                    /> \r\n                    <input\r\n                    id = {\"signal\" + props.signal.id + \"_AmpText\" }\r\n                    signal_id = {props.signal.id}\r\n                    input_type = {\"AmpText\"}\r\n                    type = \"number\"  \r\n                    min = {-5}\r\n                    max = {5}\r\n                    onChange={props.onChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <input \r\n                        id = {\"signal\" + props.signal.id + \"_PhaseDial\" }\r\n                        signal_id = {props.signal.id}\r\n                        input_type = {\"PhaseDial\"}\r\n                        type =\"range\" \r\n                        min={-180} \r\n                        max ={180} \r\n                        value = {props.signal.phase} \r\n                        step={1}\r\n                        onChange={props.onChange}\r\n                    /> \r\n                    <input\r\n                        id = {\"signal\" + props.signal.id + \"_PhaseText\" }\r\n                        signal_id = {props.signal.id}\r\n                        input_type = {\"PhaseText\"}\r\n                        type = \"number\"  \r\n                        min = {-180}\r\n                        max = {180}\r\n                        onChange={props.onChange}\r\n                    />\r\n                </div>        \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nclass Controls extends React.Component {\r\n\r\n    renderDial(signal){\r\n        return(\r\n            <Dials\r\n                signal = {signal}\r\n                onChange = {(event) => this.props.onChange(event)}\r\n                onRemove = {(i) => this.props.onRemove(i)}\r\n            />\r\n        );\r\n    }\r\n\r\n    render(){\r\n        const signalList = []; \r\n        for (let i=0; i < this.props.signals.length; i++){\r\n            signalList.push(\r\n                <div key={\"signal\" + this.props.signals[i].id}> \r\n                    {this.renderDial(this.props.signals[i])} \r\n                </div>\r\n            )\r\n        }\r\n        return(\r\n            <div className = {styles.dials} >\r\n                {signalList}\r\n                <button id = \"add-signal\" align-content = \"center\" onClick={() => this.props.onAdd()}> Add New Signal </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction FourierCirclesMagPos(props) {\r\n    return(\r\n        <circle\r\n            id = {\"circle_\"+props.signal.id}\r\n            signal_id = {props.signal.id}\r\n            cx = {(props.signal.id)*(800/8)}\r\n            cy = {(props.signal.amplitude)*(800/8)}\r\n            transform=\"translate(400,400) scale(1,-1)\"\r\n            r = {20}\r\n            fill = \"black\"\r\n            stroke = \"black\"\r\n            strokeWidth=\"1\"\r\n            onMouseDown={props.onMouseDown}\r\n            onMouseUp={props.onMouseUp}\r\n            onMouseOut={props.onMouseUp}\r\n            onMouseMove={props.onMouseMove}\r\n        />\r\n    );\r\n}\r\n\r\nfunction FourierCirclesMagNeg(props) {\r\n    return(\r\n        <circle\r\n            id = {\"circle_-\"+props.signal.id}\r\n            signal_id = {props.signal.id}\r\n            cx = {(props.signal.id)*-(800/8)}\r\n            cy = {(props.signal.amplitude)*(800/8)}\r\n            transform=\"translate(400,400) scale(1,-1)\"\r\n            r = {20}\r\n            fill = \"black\"\r\n            stroke = \"black\"\r\n            strokeWidth=\"1\"\r\n            onMouseDown={props.onMouseDown}\r\n            onMouseUp={props.onMouseUp}\r\n            onMouseOut={props.onMouseUp}\r\n            onMouseMove={props.onMouseMove}\r\n        />\r\n    );\r\n}\r\n\r\nfunction FourierCirclesPhasePos(props) {\r\n    return(\r\n        <circle\r\n            id = {\"circle_\"+props.signal.id}\r\n            signal_id = {props.signal.id}\r\n            cx = {(props.signal.id)*(800/8)}\r\n            cy = {(props.signal.phase)*(700/360)}\r\n            transform=\"translate(400,400) scale(1,-1)\"\r\n            r = {20}\r\n            fill = \"black\"\r\n            stroke = \"black\"\r\n            strokeWidth=\"1\"\r\n            onMouseDown={props.onMouseDown}\r\n            onMouseUp={props.onMouseUp}\r\n            onMouseOut={props.onMouseUp}\r\n            onMouseMove={props.onMouseMove}\r\n        />\r\n    );\r\n}\r\n\r\nfunction FourierCirclesPhaseNeg(props) {\r\n    return(\r\n        <circle\r\n            id = {\"circle_-\"+props.signal.id}\r\n            signal_id = {props.signal.id}\r\n            cx = {(props.signal.id)*-(800/8)}\r\n            cy = {(props.signal.phase)*-(700/360)}\r\n            transform=\"translate(400,400) scale(1,-1)\"\r\n            r = {20}\r\n            fill = \"black\"\r\n            stroke = \"black\"\r\n            strokeWidth=\"1\"\r\n            onMouseDown={props.onMouseDown}\r\n            onMouseUp={props.onMouseUp}\r\n            onMouseOut={props.onMouseUp}\r\n            onMouseMove={props.onMouseMove}\r\n        />\r\n    );\r\n}\r\n\r\nclass FourierMagPlot extends React.Component {\r\n\r\n    renderCirclePos(signal){\r\n        return(\r\n            <FourierCirclesMagPos\r\n                signal = {signal}\r\n                onMouseDown = {(event) => this.props.onMouseDown(event)}\r\n                onMouseUp = {(event) => this.props.onMouseUp(event)}\r\n                onMouseOut = {(event) => this.props.onMouseUp(event)}\r\n                onMouseMove = {(event) => this.props.onMouseMove(event)}\r\n            />\r\n        );\r\n    }\r\n\r\n    renderCircleNeg(signal){\r\n        return(\r\n            <FourierCirclesMagNeg\r\n                signal = {signal}\r\n                onMouseDown = {(event) => this.props.onMouseDown(event)}\r\n                onMouseUp = {(event) => this.props.onMouseUp(event)}\r\n                onMouseOut = {(event) => this.props.onMouseUp(event)}\r\n                onMouseMove = {(event) => this.props.onMouseMove(event)}\r\n            />\r\n        );\r\n    }\r\n\r\n    render(){\r\n\r\n        const signals = this.props.signals;\r\n        \r\n           let FourierMagSvg = d3.select(\"#svgFourierMagPlot\")\r\n           let radius = 10;  \r\n   \r\n           const circleList = []; \r\n   \r\n          \r\n           for (let i=0; i < this.props.signals.length; i++){\r\n                if(i ==0){\r\n                    circleList.push(\r\n                        this.renderCirclePos(this.props.signals[i]) \r\n                    )\r\n                }\r\n                else{\r\n                    circleList.push(\r\n                        this.renderCirclePos(this.props.signals[i]),\r\n                        this.renderCircleNeg(this.props.signals[i])\r\n                    )\r\n                }\r\n           }\r\n           \r\n           // Should probably check both axis if they exist before appending\r\n           if(!document.getElementById(\"x_axis_fourierMagPlot\")){\r\n   \r\n               // Create Axis for Frequency Plot\r\n               let xscale_freq = d3.scaleLinear()\r\n                       .domain([-3.5, 3.5]) // This needs to be dynamic\r\n                       .range([50, 750])\r\n   \r\n               let yscale_freq = d3.scaleLinear()\r\n                       .domain([3.5,-3.5]) // This needs to be dynamic\r\n                       .range([50, 750]);\r\n   \r\n               // Add scales to axis\r\n               const xAxisTicks = xscale_freq.ticks()\r\n                                        .filter(tick => Number.isInteger(tick));\r\n    \r\n               let x_axis_freq = d3.axisBottom(xscale_freq)\r\n                .tickValues(xAxisTicks)\r\n                .tickFormat(d3.format(\"d\"));\r\n   \r\n               let y_axis_freq = d3.axisLeft(yscale_freq);\r\n\r\n               FourierMagSvg.append(\"text\")\r\n                            .attr(\"text-anchor\", \"middle\")  \r\n                            .attr(\"x\",400)\r\n                            .attr(\"y\",30)\r\n                            .style(\"font-size\", \"16px\") \r\n                            .style(\"text-decoration\", \"underline\")  \r\n                            .text(\"Fourier Magnitude Plot\");\r\n\r\n               FourierMagSvg.append('g')\r\n                            .attr(\"id\",\"x_axis_fourierMagPlot\")\r\n                            .attr(\"transform\",\"translate(0,400)\")\r\n                            .call(x_axis_freq)\r\n   \r\n               FourierMagSvg.append('g')\r\n                            .attr(\"id\",\"y_axis_fourierMagPlot\")\r\n                            .attr(\"transform\",\"translate(400,0)\")\r\n                            .call(y_axis_freq); \r\n           }\r\n   \r\n           return( \r\n               <svg>\r\n                  {circleList}\r\n               </svg>\r\n           );\r\n       }\r\n}\r\n\r\nclass FourierPhasePlot extends React.Component {\r\n\r\n    renderCirclePos(signal){\r\n        return(\r\n            <FourierCirclesPhasePos\r\n                signal = {signal}\r\n                onMouseDown = {(event) => this.props.onMouseDown(event)}\r\n                onMouseUp = {(event) => this.props.onMouseUp(event)}\r\n                onMouseOut = {(event) => this.props.onMouseUp(event)}\r\n                onMouseMove = {(event) => this.props.onMouseMove(event)}\r\n            />\r\n        );\r\n    }\r\n\r\n    renderCircleNeg(signal){\r\n        return(\r\n            <FourierCirclesPhaseNeg\r\n                signal = {signal}\r\n                onMouseDown = {(event) => this.props.onMouseDown(event)}\r\n                onMouseUp = {(event) => this.props.onMouseUp(event)}\r\n                onMouseOut = {(event) => this.props.onMouseUp(event)}\r\n                onMouseMove = {(event) => this.props.onMouseMove(event)}\r\n            />\r\n        );\r\n    }\r\n\r\n    render(){\r\n\r\n        const signals = this.props.signals;\r\n        \r\n           let FourierPhaseSvg = d3.select(\"#svgFourierPhasePlot\")\r\n           let radius = 10;  \r\n   \r\n           const circleList = []; \r\n   \r\n          \r\n           \r\n           for (let i=0; i < this.props.signals.length; i++){\r\n\r\n                if(i ==0){\r\n                    circleList.push(\r\n                        this.renderCirclePos(this.props.signals[i]) \r\n                    )\r\n                }\r\n                else{\r\n                    circleList.push(\r\n                        this.renderCirclePos(this.props.signals[i]),\r\n                        this.renderCircleNeg(this.props.signals[i])\r\n                    )\r\n                }\r\n               \r\n           }\r\n           \r\n           // Should probably check both axis if they exist before appending\r\n           if(!document.getElementById(\"x_axis_fourierPhasePlot\")){\r\n   \r\n               // Create Axis for Frequency Plot\r\n               let xscale_freq = d3.scaleLinear()\r\n                       .domain([-3.5, 3.5]) // This needs to be dynamic\r\n                       .range([50, 750])\r\n   \r\n               let yscale_freq = d3.scaleLinear()\r\n                       .domain([180,-180]) // This needs to be dynamic\r\n                       .range([50, 750]);\r\n   \r\n               // Add scales to axis\r\n               const xAxisTicks = xscale_freq.ticks()\r\n                                        .filter(tick => Number.isInteger(tick));\r\n    \r\n               let x_axis_freq = d3.axisBottom(xscale_freq)\r\n                .tickValues(xAxisTicks)\r\n                .tickFormat(d3.format(\"d\"));\r\n   \r\n               let y_axis_freq = d3.axisLeft(yscale_freq);\r\n               \r\n               FourierPhaseSvg.append(\"text\")\r\n                            .attr(\"text-anchor\", \"middle\")  \r\n                            .attr(\"x\",400)\r\n                            .attr(\"y\",30)\r\n                            .style(\"font-size\", \"16px\") \r\n                            .style(\"text-decoration\", \"underline\")  \r\n                            .text(\"Fourier Phase Plot\"); \r\n\r\n               FourierPhaseSvg.append('g')\r\n                            .attr(\"id\",\"x_axis_fourierPhasePlot\")\r\n                            .attr(\"transform\",\"translate(0,400)\")\r\n                            .call(x_axis_freq)\r\n   \r\n               FourierPhaseSvg.append('g')\r\n                            .attr(\"id\",\"y_axis_fourierPhasePlot\")\r\n                            .attr(\"transform\",\"translate(400,0)\")\r\n                            .call(y_axis_freq); \r\n           }\r\n   \r\n           return( \r\n               <svg>\r\n                  {circleList}\r\n               </svg>\r\n           );\r\n       }\r\n}\r\n\r\n\r\nclass SinePlot extends React.Component {\r\n    render(){\r\n        const current = this.props.signals;\r\n    \r\n        // Appending svg\r\n        // Check if the element 'svg_id' exists. If not, create new svg, append and draw it\r\n        // Not sure if this scales well\r\n        for(let i = 0; i < current.length; i++){\r\n\r\n            let svgID  = 'svg_'\r\n            let pathID = 'path_'\r\n            svgID = svgID.concat(i.toString(10))\r\n            pathID = pathID.concat(i.toString(10))\r\n\r\n            let lineGenerator = d3.line()\r\n                                  .curve(d3.curveNatural);\r\n\r\n            let pathData = lineGenerator(current[i].values);\r\n\r\n             // Create scale\r\n            let xscale = d3.scaleLinear()\r\n                        .domain([0, 2]) // This needs to be dynamic\r\n                        .range([50, 750]);\r\n\r\n            let yscale = d3.scaleLinear()\r\n                        .domain([3.5,-3.5]) // This needs to be dynamic\r\n                        .range([50, 750]);\r\n\r\n            // Add scales to axis\r\n            let x_axis = d3.axisBottom()\r\n                .scale(xscale);\r\n\r\n            let y_axis = d3.axisLeft()\r\n                .scale(yscale);\r\n\r\n            // For now, if svgID exists, then just redraw\r\n            if(document.getElementById(svgID)){\r\n                d3.select(\"#\"+pathID).attr(\"d\", pathData)  \r\n            }\r\n            \r\n            // If svgID doesn't exist, then add it to the DOM\r\n\r\n            if(!document.getElementById(svgID)){\r\n                //The SVG Container\r\n                const svgSinePlot = d3.select(\"#sinePlotsID\").append(\"svg\")\r\n                .attr(\"id\",svgID)\r\n                .attr(\"width\", svgContainerWidth)\r\n                .attr(\"height\", svgContainerHeight)\r\n                .attr(\"transform\",\"translate(10)\")\r\n                .attr(\"style\",\"position: absolute\")\r\n                .attr(\"style\", \"border: 1px solid black\")\r\n                .attr(\"top\",\"100px\")\r\n                .attr(\"left\",\"50px\")\r\n\r\n                svgSinePlot.append(\"text\")\r\n                .attr(\"text-anchor\", \"middle\")  \r\n                .attr(\"x\",400)\r\n                .attr(\"y\",30)\r\n                .style(\"font-size\", \"16px\") \r\n                .style(\"text-decoration\", \"underline\")  \r\n                .text(\"Sine Plot \" + i);\r\n\r\n                //The line SVG Path we draw\r\n                svgSinePlot.append(\"path\")\r\n                .attr(\"id\",pathID)\r\n                .attr(\"transform\",\"translate(50)\")\r\n                .attr(\"d\", pathData)\r\n                .attr(\"stroke\", \"blue\")\r\n                .attr(\"stroke-width\", 2)\r\n                .attr(\"fill\", \"none\")\r\n\r\n                svgSinePlot.append('g')\r\n                .attr(\"transform\",\"translate(0,400)\")\r\n                .call(x_axis);\r\n                \r\n                svgSinePlot.append('g')\r\n                .attr(\"transform\",\"translate(50,0)\")\r\n                .call(y_axis);\r\n            }          \r\n        }\r\n\r\n        return(\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nclass SumPlot extends React.Component {\r\n\r\n    render(){\r\n\r\n        let sumSignals = []; \r\n        let svgContainerHeight = 800;\r\n        let plotWidth = 700;\r\n\r\n        // This will break if we change plotWidth elsewhere \r\n        for(let k = 0; k < plotWidth; k++){\r\n            sumSignals.push([0,0]);\r\n        }\r\n\r\n        // Looping through all the signals\r\n        for (let i=0; i < this.props.signals.length; i++){\r\n\r\n            // Looping through the signal values\r\n            for(let j=0; j < this.props.signals[i].values.length; j++){\r\n\r\n                //sumSignals[j] = this.props.signals[i].values[j];\r\n                sumSignals[j][0] = this.props.signals[i].values[j][0];\r\n                sumSignals[j][1] += this.props.signals[i].values[j][1];\r\n            }\r\n            \r\n        }\r\n\r\n        // Should scale this to the svg dimenesions rather than hardcoding it with svgContainerHeight\r\n        for (let n =0; n < sumSignals.length; n++){\r\n            sumSignals[n][1] = sumSignals[n][1] - (this.props.signals.length-1)*(svgContainerHeight/2)\r\n        }\r\n\r\n        let lineGenerator = d3.line()\r\n          .curve(d3.curveNatural);\r\n\r\n        let pathData = lineGenerator(sumSignals);\r\n\r\n        // Create scale\r\n        let xscale = d3.scaleLinear()\r\n        .domain([0, 2]) // This needs to be dynamic\r\n        .range([50, 750]);\r\n\r\n        let yscale = d3.scaleLinear()\r\n        .domain([3.5,-3.5]) // This needs to be dynamic\r\n        .range([50, 750]);\r\n\r\n        // Add scales to axis\r\n        let x_axis = d3.axisBottom()\r\n        .scale(xscale);\r\n\r\n        let y_axis = d3.axisLeft()\r\n        .scale(yscale);\r\n\r\n        //The svg line Path we draw\r\n\r\n        // If exists, update\r\n        if(document.getElementById(\"path_Sum\")){\r\n            d3.select(\"#\"+\"path_Sum\").attr(\"d\", pathData)  \r\n               \r\n        }\r\n        \r\n        // Draws path if it doesn't exist\r\n        if(!document.getElementById(\"path_Sum\")){\r\n             d3.select(\"#svgSumPlot\").append(\"path\")\r\n                .attr(\"id\",\"path_Sum\")\r\n                .attr(\"d\", pathData)\r\n                .attr(\"transform\",\"translate(50)\")\r\n                .attr(\"stroke\", \"blue\")\r\n                .attr(\"stroke-width\", 2)\r\n                .attr(\"fill\", \"none\")\r\n\r\n            const svgSumPlot = d3.select(\"#svgSumPlot\")\r\n\r\n                svgSumPlot.append(\"text\")\r\n                .attr(\"text-anchor\", \"middle\")  \r\n                .attr(\"x\",400)\r\n                .attr(\"y\",30)\r\n                .style(\"font-size\", \"16px\") \r\n                .style(\"text-decoration\", \"underline\")  \r\n                .text(\"Sum of Signals Plot\");\r\n\r\n                svgSumPlot.append('g')\r\n                .attr(\"transform\",\"translate(0,400)\")\r\n                .call(x_axis);\r\n\r\n                svgSumPlot.append('g')\r\n                .attr(\"transform\",\"translate(20,0)\")\r\n                .call(y_axis)\r\n                .attr(\"transform\",\"translate(50,0)\");\r\n                \r\n        }\r\n\r\n        return(\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport class FourierCoefficients extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            signals: [\r\n                /* Example signal object \r\n                {\r\n                    id: 0,\r\n                    amplitude: 1,\r\n                    frequency: 1,\r\n                    values: this.generateSignal(1,1),\r\n                    dragging: false,    \r\n                },\r\n                */\r\n            ],\r\n            circles:[\r\n            ],\r\n        };\r\n        // This binding is necessary to make `this.` work in the callback   \r\n        this.handleMouseDown = this.handleMouseDown.bind(this);\r\n        this.handleMouseUp = this.handleMouseUp.bind(this);\r\n        this.handleMouseMove = this.handleMouseMove.bind(this);\r\n        this.handleMouseMoveFourierMag = this.handleMouseMoveFourierMag.bind(this);\r\n        this.handleMouseMoveFourierPhase = this.handleMouseMoveFourierPhase.bind(this);\r\n    }\r\n    \r\n    addSignal(){\r\n        const signals = this.state.signals;\r\n\r\n        // Once this.setState has been called, it'll call render() to render straight away\r\n        this.setState({\r\n            signals: signals.concat([{       // Just concatenating array of JSON\r\n                id: signals.length,\r\n                amplitude: 0,                // Should be user input\r\n                frequency: signals.length,   // Should be user input\r\n                phase: 0,\r\n                values: this.generateSignal(0,signals.length,0),\r\n                dragging: false,    \r\n            },]),\r\n        });        \r\n\r\n\r\n    }\r\n\r\n    removeSignal(i){\r\n        // Need to find signal id from the array and delete, then re-update id's\r\n        const signals = this.state.signals;\r\n\r\n\r\n        console.log(\"Hi from removeSignal\");    \r\n        console.log(i)\r\n        console.log(\"Before: \", signals);\r\n        signals.splice(i,1)\r\n        console.log(\"After:\", signals);\r\n\r\n        for(let n = 0; n< this.state.signals.length; n++){\r\n            signals[n].id = n;\r\n        }        \r\n\r\n        // Find the svgId and pathID and delete from DOM\r\n\r\n        let svgID  = 'svg_'\r\n        let pathID = 'path_'\r\n        svgID = svgID.concat(i.toString(10))\r\n        pathID = pathID.concat(i.toString(10))\r\n\r\n        d3.select(\"#\"+svgID).remove();\r\n\r\n        this.setState({\r\n            signals: signals,\r\n        });\r\n        console.log(this.state.signals);\r\n\r\n    \r\n    }\r\n\r\n    generateSignal(amplitude, frequency, phase){\r\n        // Generating path data\r\n        let points = [];\r\n        const plotHeight = 700;\r\n        const plotWidth = 700;\r\n        let scale = -100;\r\n        let x_offset = 0;\r\n        let y_offset = 50;\r\n\r\n        let Fs = 80;\r\n        let Ts = Math.PI / 200;\r\n\r\n        /* Calculation Reference\r\n        // 1 period = 1 second\r\n        // 1 period = 400 pixels => Ts = 400 samples per second\r\n        // 1 Hz = 2pi radians\r\n\r\n        // Sampling frequency = samples/second\r\n        // 1 sample per 1/400 second (Ts = 1/400)\r\n        // Fs = 2pi * (1/400)\r\n        // Fs = pi / 200\r\n\r\n        // Frequency is in Hz\r\n        // This is bascially an inverse FFT \r\n        // i is basically our t (1 unit of time)\r\n        */\r\n        for(let i = x_offset; i< plotWidth; i++)\r\n        {\r\n            points[i] = [i, scale*amplitude*Math.sin(Ts*frequency*i + (phase * (Math.PI / 180) )) + (plotHeight/2 + y_offset)];\r\n        }\r\n        return points;\r\n    }\r\n\r\n    generateDC(amplitude){\r\n        let points = [];\r\n        const plotHeight = 700;\r\n        const plotWidth = 700;\r\n        let scale = -100;\r\n        let x_offset = 0;\r\n        let y_offset = 50;\r\n\r\n        for(let i = x_offset; i< plotWidth; i++)\r\n        {\r\n            points[i] = [i, scale*amplitude + (plotHeight/2 + y_offset)];\r\n        }\r\n\r\n        return points\r\n    }\r\n\r\n    updateDials(){\r\n        const signals = this.state.signals;\r\n\r\n        for(let i = 0; i< signals.length; i++){\r\n            document.getElementById(\"signal\" + signals[i].id + \"_AmpText\").value = signals[i].amplitude;\r\n            document.getElementById(\"signal\" + signals[i].id + \"_FreqText\").value = signals[i].frequency;\r\n        }\r\n    }\r\n\r\n    handleChange(event){\r\n\r\n\r\n        const signals = this.state.signals;\r\n        const inputType = event.target.getAttribute('input_type');\r\n        const signalID = event.target.getAttribute('signal_id'); // Signal ID Number\r\n        let value = parseFloat(event.target.value);   \r\n\r\n        // Text Form can currently exceed the maximum limit of 10, should limit?\r\n\r\n        if((inputType === \"AmpDial\") || (inputType === \"AmpText\")){\r\n            if(isNaN(value)){\r\n                value = 0;\r\n            }\r\n            else{\r\n                // DC Case\r\n                if(signalID == 0){\r\n                    signals[signalID].amplitude = value; \r\n                    signals[signalID].values = this.generateDC(signals[signalID].amplitude);\r\n                    document.getElementById(\"signal\" + signalID + \"_AmpText\").value = value;\r\n                }\r\n                // All Other cases\r\n                else{\r\n                    signals[signalID].amplitude = value;                 \r\n                    signals[signalID].values = this.generateSignal(signals[signalID].amplitude, signals[signalID].frequency, signals[signalID].phase);\r\n                    document.getElementById(\"signal\" + signalID + \"_AmpText\").value = value;\r\n                }     \r\n            }\r\n        }\r\n        else if ((inputType === \"PhaseDial\") || (inputType === \"PhaseText\")){\r\n            console.log(\"HELLO\")\r\n            console.log(signals[signalID].amplitude)\r\n            console.log(signals[signalID].phase)\r\n\r\n            if(isNaN(value)){\r\n                value = 0;\r\n            }\r\n            else{\r\n                // DC Case\r\n                if(signalID == 0){\r\n                    signals[signalID].phase = value; \r\n                    signals[signalID].values = this.generateDC(signals[signalID].amplitude);\r\n                    document.getElementById(\"signal\" + signalID + \"_PhaseText\").value = value;\r\n                }\r\n                 // All Other cases\r\n                else{\r\n                    signals[signalID].phase = value; \r\n                    signals[signalID].values = this.generateSignal(signals[signalID].amplitude, signals[signalID].frequency, signals[signalID].phase);\r\n                    document.getElementById(\"signal\" + signalID + \"_PhaseText\").value = value;\r\n                }\r\n            }\r\n        }     \r\n\r\n        this.setState({\r\n                signals: signals,   \r\n            }   \r\n        );\r\n\r\n    }\r\n\r\n    \r\n    handleMouseDown(e){\r\n        console.log(\"clicked\")\r\n\r\n        e.preventDefault();\r\n        const signals = this.state.signals;\r\n        const signalID = e.target.getAttribute('signal_id'); // Signal ID Number\r\n\r\n        signals[signalID].dragging = true;\r\n\r\n        this.setState({\r\n            signals: signals,   \r\n            }\r\n        );   \r\n    }\r\n\r\n    handleMouseUp(e){\r\n        console.log(\"click released\")\r\n\r\n        const signals = this.state.signals;\r\n        const signalID = e.target.getAttribute('signal_id'); // Signal ID Number\r\n        console.log(e.type)\r\n        if(e.type == 'mouseout' && signals[signalID].dragging) {\r\n            console.log(\"mouse went out\")\r\n            return;\r\n        }\r\n\r\n        signals[signalID].dragging = false;\r\n        \r\n        this.setState({\r\n            signals: signals,   \r\n            }\r\n        );\r\n        \r\n    }\r\n\r\n    // Base Mouse move function. Used in Frequency Domain. Not currently in use in this .js file\r\n    handleMouseMove(e) {\r\n\r\n        const signals = this.state.signals;\r\n        const signalID = e.target.getAttribute('signal_id'); // Signal ID Number\r\n\r\n        //If we are dragging\r\n          if (signals[signalID].dragging) {\r\n              e.preventDefault();\r\n\r\n              console.log(e)\r\n              console.log(e.target)\r\n              console.log(\"clientX:\",e.clientX)\r\n              console.log(\"clientY:\",e.clientY)\r\n              // console.log(e.target.parentNode.parentNode)\r\n            let  rect = e.target.parentNode.parentNode.getBoundingClientRect();  \r\n\r\n            console.log(rect.left);\r\n            console.log(rect.top);\r\n\r\n\r\n            // Maybe should seperate coordinates and freq/amp values\r\n             signals[signalID].frequency = (e.clientX - rect.left - 400) / 100;\r\n             signals[signalID].amplitude = - (e.clientY - rect.top - 400) / 100;\r\n             signals[signalID].values = this.generateSignal(signals[signalID].amplitude, signals[signalID].frequency, signals[signalID].phase);\r\n\r\n\r\n            // We should set position limits\r\n\r\n            console.log(signals[signalID].frequency)\r\n            console.log(signals[signalID].amplitude)\r\n\r\n            console.log(this)\r\n\r\n            this.setState({\r\n                signals: signals,   \r\n                }\r\n            );  \r\n        }\r\n    }\r\n\r\n    handleMouseMoveFourierMag(e) {\r\n\r\n        const signals = this.state.signals;\r\n        const signalID = e.target.getAttribute('signal_id'); // Signal ID Number\r\n\r\n        //If we are dragging\r\n          if (signals[signalID].dragging) {\r\n              e.preventDefault();\r\n\r\n\r\n            console.log(e.target)\r\n            let  rect = e.target.parentNode.parentNode.getBoundingClientRect();  \r\n\r\n            // Maybe should seperate coordinates and freq/amp values\r\n             signals[signalID].frequency = signals[signalID].id;\r\n             signals[signalID].amplitude = - (e.clientY - rect.top - 400) / (800/8);    // 800: svg height, 8: max axis size (-4 to 4)\r\n             signals[signalID].values = this.generateSignal(signals[signalID].amplitude, signals[signalID].frequency, signals[signalID].phase);\r\n\r\n            // We should set position limits\r\n\r\n            // Checking if signal is the DC value\r\n            if(signalID == 0){\r\n                signals[signalID].values = this.generateDC(signals[signalID].amplitude);\r\n            }\r\n\r\n            this.setState({\r\n                signals: signals,   \r\n                }\r\n            );  \r\n        }\r\n    }\r\n    \r\n    handleMouseMoveFourierPhase(e) {\r\n\r\n        const signals = this.state.signals;\r\n        const signalID = e.target.getAttribute('signal_id'); // Signal ID Number\r\n        console.log(\"signalID: \",signalID)\r\n\r\n        //If we are dragging\r\n          if (signals[signalID].dragging) {\r\n              e.preventDefault();\r\n\r\n\r\n            console.log(e.target)\r\n            let  rect = e.target.parentNode.parentNode.getBoundingClientRect();  \r\n\r\n            // Maybe should seperate coordinates and freq/amp values\r\n             signals[signalID].frequency = signals[signalID].id;\r\n             signals[signalID].phase = parseInt( - (e.clientY - rect.top - 400) / (700/360) );\r\n             signals[signalID].values = this.generateSignal(signals[signalID].amplitude, signals[signalID].frequency, signals[signalID].phase);\r\n\r\n            // We should set position limits\r\n\r\n            // Checking if signal is the DC value\r\n            if(signalID == 0){\r\n                signals[signalID].values = this.generateDC(signals[signalID].amplitude);\r\n            }\r\n\r\n            this.setState({\r\n                signals: signals,   \r\n                }\r\n            );  \r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n    const current = this.state.signals;\r\n\r\n    return (\r\n            <div className = {styles.container}>\r\n\r\n                <div className = {styles.sinePlots} id =\"sinePlotsID\">\r\n                    <SinePlot\r\n                        signals = {current}\r\n                    />\r\n                </div>\r\n                <div className = {styles.otherPlots}>\r\n                    <div className = {styles.fourierPhasePlots} id =\"fourierPhasePlotsID\">\r\n                        <svg id=\"svgFourierPhasePlot\" width=\"800\" height=\"800\"  \r\n                            style = {{\r\n                                position: \"relative\", \r\n                                top: \"0%\",\r\n                                left: \"0%\",\r\n                                transform: \"translate(0%, 0%)\",\r\n                                border: '1px solid black',\r\n                                \r\n                                }}> \r\n                        \r\n                            <FourierPhasePlot\r\n                                signals = {current}\r\n                                onMouseDown = {(event) => this.handleMouseDown(event)}\r\n                                onMouseUp = {(event) => this.handleMouseUp(event)}\r\n                                onMouseOut = {(event) => this.handleMouseUp(event)}\r\n                                onMouseMove = {(event) => this.handleMouseMoveFourierPhase(event)}\r\n                            />\r\n                        </svg>\r\n                    </div>\r\n\r\n                    <div className = {styles.fourierMagPlots} id =\"fourierMagPlotsID\">\r\n                        <svg id=\"svgFourierMagPlot\" width=\"800\" height=\"800\"  \r\n                            style = {{\r\n                                position: \"relative\", \r\n                                top: \"0%\",\r\n                                left: \"0%\",\r\n                                transform: \"translate(0%, 0%)\",\r\n                                border: '1px solid black',\r\n                                \r\n                                }}> \r\n                        \r\n                            <FourierMagPlot\r\n                                signals = {current}\r\n                                onMouseDown = {(event) => this.handleMouseDown(event)}\r\n                                onMouseUp = {(event) => this.handleMouseUp(event)}\r\n                                onMouseOut = {(event) => this.handleMouseUp(event)}\r\n                                onMouseMove = {(event) => this.handleMouseMoveFourierMag(event)}\r\n                            />\r\n                        </svg>\r\n                    </div>\r\n                    <div className = {styles.sumPlots} id =\"sumPlotsID\">\r\n                        <svg id=\"svgSumPlot\" width=\"800\" height=\"800\" \r\n                            style = {{\r\n                                position: \"relative\", \r\n                                top: \"0%\",\r\n                                left: \"0%\",\r\n                                transform: \"translate(0%, 0%)\",\r\n                                border: '1px solid black'\r\n                                }}> \r\n                            <SumPlot\r\n                                signals = {current}\r\n                            />\r\n                        </svg>\r\n                    </div>\r\n                </div>\r\n                <div className = {styles.controls}>\r\n                    \r\n                        <Controls\r\n                            signals = {current}\r\n                            onChange = {(event) => this.handleChange(event)}\r\n                            onAdd = {() => this.addSignal()}\r\n                            onRemove = {(i) => this.removeSignal(i)}\r\n                        />\r\n                    \r\n                </div>\r\n            </div>\r\n      );\r\n    }\r\n  }","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport styles from './FrequencyDomain.module.css';\r\nimport * as d3 from \"d3\";\r\n\r\nconst svgContainerWidth = 800;\r\nconst svgContainerHeight = 800;\r\n\r\nfunction Dials(props) {\r\n    return(\r\n        <div className={styles.signal_container}>\r\n            <div className={styles.signal_info}>\r\n                <div>ID: {props.signal.id}</div>\r\n                <button id = \"remove-signal\" onClick={(i) => props.onRemove(props.signal.id)}> Remove Signal </button>\r\n            </div>\r\n            <div className={styles.signal_props}>\r\n                <div>Amplitude: {props.signal.amplitude}</div>\r\n                <div>Frequency: {props.signal.frequency}</div>\r\n                <div>Phase: {props.signal.phase}</div>\r\n            </div>\r\n            <div className = {styles.signal_dials}>\r\n                <div>\r\n                    <input \r\n                    id = {\"signal\" + props.signal.id + \"_AmpDial\" }\r\n                    signal_id = {props.signal.id}\r\n                    input_type = {\"AmpDial\"}\r\n                    type =\"range\" \r\n                    min={-5} \r\n                    max ={5} \r\n                    value = {props.signal.amplitude} \r\n                    step={0.1}\r\n                    onChange={props.onChange}\r\n                    /> \r\n                    <input\r\n                    id = {\"signal\" + props.signal.id + \"_AmpText\" }\r\n                    signal_id = {props.signal.id}\r\n                    input_type = {\"AmpText\"}\r\n                    type = \"number\"  \r\n                    min = {-5}\r\n                    max = {5}\r\n                    onChange={props.onChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <input \r\n                        id = {\"signal\" + props.signal.id + \"_FreqDial\" }\r\n                        signal_id = {props.signal.id}\r\n                        input_type = {\"FreqDial\"}\r\n                        type =\"range\" \r\n                        min={-4} \r\n                        max ={4} \r\n                        value = {props.signal.frequency} \r\n                        step={0.1}\r\n                        onChange={props.onChange}\r\n                    /> \r\n                    <input\r\n                        id = {\"signal\" + props.signal.id + \"_FreqText\" }\r\n                        signal_id = {props.signal.id}\r\n                        input_type = {\"FreqText\"}\r\n                        type = \"number\"  \r\n                        min = {-4}\r\n                        max = {4}\r\n                        onChange={props.onChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <input \r\n                        id = {\"signal\" + props.signal.id + \"_PhaseDial\" }\r\n                        signal_id = {props.signal.id}\r\n                        input_type = {\"PhaseDial\"}\r\n                        type =\"range\" \r\n                        min={-180} \r\n                        max ={180} \r\n                        value = {props.signal.phase} \r\n                        step={1}\r\n                        onChange={props.onChange}\r\n                    /> \r\n                    <input\r\n                        id = {\"signal\" + props.signal.id + \"_PhaseText\" }\r\n                        signal_id = {props.signal.id}\r\n                        input_type = {\"PhaseText\"}\r\n                        type = \"number\"  \r\n                        min = {-180}\r\n                        max = {180}\r\n                        onChange={props.onChange}\r\n                    />\r\n                </div>        \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nclass Controls extends React.Component {\r\n\r\n    renderDial(signal){\r\n        return(\r\n            <Dials\r\n                signal = {signal}\r\n                onChange = {(event) => this.props.onChange(event)}\r\n                onRemove = {(i) => this.props.onRemove(i)}\r\n            />\r\n        );\r\n    }\r\n\r\n    render(){\r\n        const signalList = []; \r\n        for (let i=0; i < this.props.signals.length; i++){\r\n            signalList.push(\r\n                <div key={\"signal\" + this.props.signals[i].id}> \r\n                    {this.renderDial(this.props.signals[i])} \r\n                </div>\r\n            )\r\n        }\r\n        return(\r\n            <div className = {styles.dials} >\r\n                {signalList}\r\n                <button id = \"add-signal\" align-content = \"center\" onClick={() => this.props.onAdd()}> Add New Signal </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction Circles(props) {\r\n        return(\r\n            <circle\r\n                id = {\"circle_\"+props.signal.id}\r\n                signal_id = {props.signal.id}\r\n                cx = {(props.signal.frequency)* (800/8)}\r\n                cy = {(props.signal.amplitude)*(800/8)}\r\n                transform=\"translate(400,400) scale(1,-1)\"\r\n                r = {20}\r\n                fill = \"black\"\r\n                stroke = \"black\"\r\n                strokeWidth=\"1\"\r\n                onMouseDown={props.onMouseDown}\r\n                onMouseUp={props.onMouseUp}\r\n                onMouseOut={props.onMouseUp}\r\n                onMouseMove={props.onMouseMove}\r\n            />\r\n        );\r\n    \r\n}\r\n\r\n\r\nclass SinePlot extends React.Component {\r\n    render(){\r\n        const current = this.props.signals;\r\n    \r\n        // Appending svg\r\n        // Check if the element 'svg_id' exists. If not, create new svg, append and draw it\r\n        // Not sure if this scales well \r\n\r\n        for(let i = 0; i < current.length; i++){\r\n\r\n            let svgID  = 'svg_'\r\n            let pathID = 'path_'\r\n            svgID = svgID.concat(i.toString(10))\r\n            pathID = pathID.concat(i.toString(10))\r\n\r\n            let lineGenerator = d3.line()\r\n                                  .curve(d3.curveNatural);\r\n\r\n            let pathData = lineGenerator(current[i].values);\r\n\r\n             // Create scale\r\n            let xscale = d3.scaleLinear()\r\n                        .domain([0, 2]) // This needs to be dynamic\r\n                        .range([50, 750]);\r\n\r\n            let yscale = d3.scaleLinear()\r\n                        .domain([3.5,-3.5]) // This needs to be dynamic\r\n                        .range([50, 750]);\r\n\r\n            // Add scales to axis\r\n            let x_axis = d3.axisBottom()\r\n                .scale(xscale);\r\n\r\n            let y_axis = d3.axisLeft()\r\n                .scale(yscale);\r\n\r\n            // For now, if svgID exists, then just redraw\r\n            if(document.getElementById(svgID)){\r\n                d3.select(\"#\"+pathID).attr(\"d\", pathData)  \r\n            }\r\n            \r\n            // If svgID doesn't exist, then add it to the DOM\r\n\r\n            if(!document.getElementById(svgID)){\r\n                //The SVG Container\r\n                const svgSinePlot = d3.select(\"#sinePlotsID\").append(\"svg\")\r\n                .attr(\"id\",svgID)\r\n                .attr(\"width\", svgContainerWidth)\r\n                .attr(\"height\", svgContainerHeight)\r\n                .attr(\"transform\",\"translate(10)\")\r\n                .attr(\"style\",\"position: absolute\")\r\n                .attr(\"style\", \"border: 1px solid black\")\r\n                .attr(\"top\",\"100px\")\r\n                .attr(\"left\",\"50px\")\r\n\r\n                svgSinePlot.append(\"text\")\r\n                .attr(\"text-anchor\", \"middle\")  \r\n                .attr(\"x\",400)\r\n                .attr(\"y\",30)\r\n                .style(\"font-size\", \"16px\") \r\n                .style(\"text-decoration\", \"underline\")  \r\n                .text(\"Sine Plot \" + i);\r\n\r\n                //The line SVG Path we draw\r\n                svgSinePlot.append(\"path\")\r\n                .attr(\"id\",pathID)\r\n                .attr(\"transform\",\"translate(50)\")\r\n                .attr(\"d\", pathData)\r\n                .attr(\"stroke\", \"blue\")\r\n                .attr(\"stroke-width\", 2)\r\n                .attr(\"fill\", \"none\")\r\n\r\n                svgSinePlot.append('g')\r\n                .attr(\"transform\",\"translate(0,400)\")\r\n                .call(x_axis);\r\n                \r\n                svgSinePlot.append('g')\r\n                .attr(\"transform\",\"translate(50,0)\")\r\n                .call(y_axis);\r\n            }          \r\n        }\r\n\r\n        return(\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport class FrequencyPlot extends React.Component {\r\n\r\n    renderCircle(signal){\r\n        return(\r\n            <Circles\r\n                signal = {signal}\r\n                onMouseDown = {(event) => this.props.onMouseDown(event)}\r\n                onMouseUp = {(event) => this.props.onMouseUp(event)}\r\n                onMouseOut = {(event) => this.props.onMouseUp(event)}\r\n                onMouseMove = {(event) => this.props.onMouseMove(event)}\r\n            />\r\n        );\r\n    }\r\n\r\n    render(){\r\n\r\n    const signals = this.props.signals;\r\n     \r\n        let freqSvg = d3.select(\"#svgFreqPlot\")\r\n\r\n        const circleList = []; \r\n       \r\n        for (let i=0; i < this.props.signals.length; i++){\r\n            circleList.push(\r\n                    this.renderCircle(this.props.signals[i])\r\n            )\r\n        }\r\n        \r\n        // Should probably check both axis if they exist before appending\r\n        if(!document.getElementById(\"x_axis_freqPlot\")){\r\n\r\n            // Create Axis for Frequency Plot\r\n            let xscale_freq = d3.scaleLinear()\r\n                                .domain([-3.5, 3.5]) // This needs to be dynamic\r\n                                .range([50, 750]);\r\n\r\n            let yscale_freq = d3.scaleLinear()\r\n                                .domain([3.5,-3.5]) // This needs to be dynamic\r\n                                .range([50, 750]);\r\n\r\n            // Add scales to axis\r\n            let x_axis_freq = d3.axisBottom()\r\n                                .scale(xscale_freq);\r\n\r\n            let y_axis_freq = d3.axisLeft()\r\n                                .scale(yscale_freq);\r\n            \r\n            freqSvg.append(\"text\")\r\n                    .attr(\"text-anchor\", \"middle\")  \r\n                    .attr(\"x\",400)\r\n                    .attr(\"y\",30)\r\n                    .style(\"font-size\", \"16px\") \r\n                    .style(\"text-decoration\", \"underline\")  \r\n                    .text(\"Frequency Domain Plot\");\r\n                    \r\n            freqSvg.append('g')\r\n                    .attr(\"id\",\"x_axis_freqPlot\")\r\n                    .attr(\"transform\",\"translate(0,400)\")\r\n                    .call(x_axis_freq);\r\n\r\n            freqSvg.append('g')\r\n                    .attr(\"id\",\"y_axis_freqPlot\")\r\n                    .attr(\"transform\",\"translate(400,0)\")\r\n                    .call(y_axis_freq); \r\n        }\r\n\r\n        return( \r\n            <svg>\r\n               {circleList}\r\n            </svg>\r\n        );\r\n    }\r\n}\r\n\r\nclass SumPlot extends React.Component {\r\n\r\n    render(){\r\n\r\n        let sumSignals = []; \r\n        let svgContainerHeight = 800;\r\n        let plotWidth = 700;\r\n\r\n        // This will break if we change plotWidth elsewhere \r\n        for(let k = 0; k < plotWidth; k++){\r\n            sumSignals.push([0,0]);\r\n        }\r\n\r\n        // Looping through all the signals\r\n        for (let i=0; i < this.props.signals.length; i++){\r\n\r\n            // Looping through the signal values\r\n            for(let j=0; j < this.props.signals[i].values.length; j++){\r\n\r\n                //sumSignals[j] = this.props.signals[i].values[j];\r\n                sumSignals[j][0] = this.props.signals[i].values[j][0];\r\n                sumSignals[j][1] += this.props.signals[i].values[j][1];\r\n            }\r\n            \r\n        }\r\n\r\n        // There is a way to scale this to the svg dimenesions rather than hardcoding it\r\n        for (let n =0; n < sumSignals.length; n++){\r\n            sumSignals[n][1] = sumSignals[n][1] - (this.props.signals.length-1)*(svgContainerHeight/2)\r\n        }\r\n\r\n        let lineGenerator = d3.line()\r\n          .curve(d3.curveNatural);\r\n\r\n        let pathData = lineGenerator(sumSignals);\r\n\r\n        // Create scale\r\n        let xscale = d3.scaleLinear()\r\n        .domain([0, 2]) // This needs to be dynamic\r\n        .range([50, 750]);\r\n\r\n        let yscale = d3.scaleLinear()\r\n        .domain([3.5,-3.5]) // This needs to be dynamic\r\n        .range([50, 750]);\r\n\r\n        // Add scales to axis\r\n        let x_axis = d3.axisBottom()\r\n        .scale(xscale);\r\n\r\n        let y_axis = d3.axisLeft()\r\n        .scale(yscale);\r\n\r\n        //The line SVG Path we draw\r\n\r\n        // If exists, update\r\n        if(document.getElementById(\"path_Sum\")){\r\n            d3.select(\"#\"+\"path_Sum\").attr(\"d\", pathData)  \r\n               \r\n        }\r\n        \r\n        // Draws path if it doesn't exist\r\n        if(!document.getElementById(\"path_Sum\")){\r\n             d3.select(\"#svgSumPlot\").append(\"path\")\r\n                .attr(\"id\",\"path_Sum\")\r\n                .attr(\"d\", pathData)\r\n                .attr(\"transform\",\"translate(50)\")\r\n                .attr(\"stroke\", \"blue\")\r\n                .attr(\"stroke-width\", 2)\r\n                .attr(\"fill\", \"none\")\r\n\r\n            const svgSumPlot = d3.select(\"#svgSumPlot\")\r\n\r\n                svgSumPlot.append(\"text\")\r\n                .attr(\"text-anchor\", \"middle\")  \r\n                .attr(\"x\",400)\r\n                .attr(\"y\",30)\r\n                .style(\"font-size\", \"16px\") \r\n                .style(\"text-decoration\", \"underline\")  \r\n                .text(\"Sum of Signals Plot\");\r\n\r\n                svgSumPlot.append('g')\r\n                .attr(\"transform\",\"translate(0,400)\")\r\n                .call(x_axis);\r\n\r\n                svgSumPlot.append('g')\r\n                .attr(\"transform\",\"translate(20,0)\")\r\n                .call(y_axis)\r\n                .attr(\"transform\",\"translate(50,0)\");\r\n                \r\n        }\r\n\r\n        return(\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport class FrequencyDomain extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            signals: [\r\n                /* Example signal object \r\n                    {\r\n                    id: 0,\r\n                    amplitude: 1,\r\n                    frequency: 1,\r\n                    values: this.generateSignal(1,1),\r\n                    dragging: false,    \r\n                    },\r\n                */\r\n            ],\r\n            circles:[\r\n            ],\r\n        };\r\n        // This binding is necessary to make `this.` work in the callback   \r\n        this.handleMouseDown = this.handleMouseDown.bind(this);\r\n        this.handleMouseUp = this.handleMouseUp.bind(this);\r\n        this.handleMouseMove = this.handleMouseMove.bind(this);\r\n    }\r\n    \r\n    addSignal(){\r\n        const signals = this.state.signals;\r\n\r\n        // Once this.setState has been called, it'll call render() to render straight away\r\n        this.setState({\r\n            signals: signals.concat([{  // Just concatenating array of JSON\r\n                id: signals.length,\r\n                amplitude: 0,           // Should be user input\r\n                frequency: 0,           // Should be user input\r\n                phase: 0,\r\n                values: this.generateSignal(0,0,0),\r\n                dragging: false,    \r\n            },]),\r\n        });        \r\n\r\n\r\n    }\r\n\r\n    removeSignal(i){\r\n        // Need to find signal id from the array and delete, then re-update id's\r\n        const signals = this.state.signals;\r\n\r\n\r\n        console.log(\"Hi from removeSignal\");    \r\n        console.log(i)\r\n        console.log(\"Before: \", signals);\r\n        signals.splice(i,1)\r\n        console.log(\"After:\", signals);\r\n\r\n        for(let n = 0; n< this.state.signals.length; n++){\r\n            signals[n].id = n;\r\n        }        \r\n\r\n        // Find the svgId and pathID and delete from DOM\r\n\r\n        let svgID  = 'svg_'\r\n        let pathID = 'path_'\r\n        svgID = svgID.concat(i.toString(10))\r\n        pathID = pathID.concat(i.toString(10))\r\n\r\n        d3.select(\"#\"+svgID).remove();\r\n\r\n        this.setState({\r\n            signals: signals,\r\n        });\r\n        console.log(this.state.signals);\r\n\r\n    \r\n    }\r\n\r\n    generateSignal(amplitude, frequency, phase){\r\n        // Generating path data\r\n        let points = [];\r\n        const plotHeight = 700;\r\n        const plotWidth = 700;\r\n        let scale = -100;\r\n        let x_offset = 0;\r\n        let y_offset = 50;\r\n\r\n        let Fs = 80;\r\n        let Ts = Math.PI / 200;\r\n\r\n        /* Calculation Reference\r\n        // 1 period = 1 second\r\n        // 1 period = 400 pixels => Ts = 400 samples per second\r\n        // 1 Hz = 2pi radians\r\n\r\n        // Sampling frequency = samples/second\r\n        // 1 sample per 1/400 second (Ts = 1/400)\r\n        // Fs = 2pi * (1/400)\r\n        // Fs = pi / 200\r\n\r\n        // Frequency is in Hz\r\n        // This is bascially an inverse FFT \r\n        // i is basically our t (1 unit of time)\r\n        */\r\n        for(let i = x_offset; i< plotWidth; i++)\r\n        {\r\n            points[i] = [i, scale*amplitude*Math.sin(Ts*frequency*i + (phase * (Math.PI / 180) )) + (plotHeight/2 + y_offset)];\r\n        }\r\n        return points;\r\n    }\r\n\r\n    updateDials(){\r\n        const signals = this.state.signals;\r\n\r\n        for(let i = 0; i< signals.length; i++){\r\n            document.getElementById(\"signal\" + signals[i].id + \"_AmpText\").value = signals[i].amplitude;\r\n            document.getElementById(\"signal\" + signals[i].id + \"_FreqText\").value = signals[i].frequency;\r\n        }\r\n    }\r\n\r\n    handleChange(event){\r\n\r\n\r\n        const signals = this.state.signals;\r\n        const inputType = event.target.getAttribute('input_type');\r\n        const signalID = event.target.getAttribute('signal_id'); // Signal ID Number\r\n        let value = parseFloat(event.target.value);   \r\n\r\n        // Text Form can currently exceed the maximum limit of 10, should limit?\r\n\r\n        if((inputType === \"AmpDial\") || (inputType === \"AmpText\")){\r\n            if(isNaN(value)){\r\n                value = 0;\r\n            }\r\n            else{\r\n                signals[signalID].amplitude = value;                 \r\n                signals[signalID].values = this.generateSignal(signals[signalID].amplitude, signals[signalID].frequency, signals[signalID].phase);\r\n                document.getElementById(\"signal\" + signalID + \"_AmpText\").value = value;\r\n            }\r\n        }\r\n        else if ((inputType === \"FreqDial\") || (inputType === \"FreqText\")){\r\n            if(isNaN(value)){\r\n                value = 0;\r\n            }\r\n            else{\r\n                signals[signalID].frequency = value; \r\n                signals[signalID].values = this.generateSignal(signals[signalID].amplitude, signals[signalID].frequency, signals[signalID].phase);\r\n                document.getElementById(\"signal\" + signalID + \"_FreqText\").value = value;\r\n            }\r\n        } \r\n        else if ((inputType === \"PhaseDial\") || (inputType === \"PhaseText\")){\r\n            if(isNaN(value)){\r\n                value = 0;\r\n            }\r\n            else{\r\n                signals[signalID].phase = value; \r\n                signals[signalID].values = this.generateSignal(signals[signalID].amplitude, signals[signalID].frequency, signals[signalID].phase);\r\n                document.getElementById(\"signal\" + signalID + \"_PhaseText\").value = value;\r\n            }\r\n        }     \r\n\r\n        this.setState({\r\n                signals: signals,   \r\n            }   \r\n        );\r\n\r\n    }\r\n\r\n    \r\n    handleMouseDown(e){\r\n        console.log(\"clicked\")\r\n\r\n        e.preventDefault();\r\n        const signals = this.state.signals;\r\n        const signalID = e.target.getAttribute('signal_id'); // Signal ID Number\r\n\r\n        signals[signalID].dragging = true;\r\n\r\n        this.setState({\r\n            signals: signals,   \r\n            }\r\n        );   \r\n    }\r\n\r\n    handleMouseUp(e){\r\n        console.log(\"click released\")\r\n\r\n        const signals = this.state.signals;\r\n        const signalID = e.target.getAttribute('signal_id'); // Signal ID Number\r\n        console.log(e.type)\r\n        if(e.type == 'mouseout' && signals[signalID].dragging) {\r\n            console.log(\"mouse went out\")\r\n            return;\r\n        }\r\n\r\n        signals[signalID].dragging = false;\r\n        \r\n        this.setState({\r\n            signals: signals,   \r\n            }\r\n        );\r\n        \r\n    }\r\n\r\n    handleMouseMove(e) {\r\n\r\n        const signals = this.state.signals;\r\n        const signalID = e.target.getAttribute('signal_id'); // Signal ID Number\r\n\r\n        //If we are dragging\r\n          if (signals[signalID].dragging) {\r\n              e.preventDefault();\r\n\r\n              console.log(e)\r\n              console.log(e.target)\r\n              console.log(\"clientX:\",e.clientX)\r\n              console.log(\"clientY:\",e.clientY)\r\n              // console.log(e.target.parentNode.parentNode)\r\n            let  rect = e.target.parentNode.parentNode.getBoundingClientRect();  \r\n\r\n            console.log(rect.left);\r\n            console.log(rect.top);\r\n\r\n\r\n            // Maybe should seperate coordinates and freq/amp values\r\n             signals[signalID].frequency = (e.clientX - rect.left - 400) / 100;\r\n             signals[signalID].amplitude = - (e.clientY - rect.top - 400) / 100;\r\n             signals[signalID].values = this.generateSignal(signals[signalID].amplitude, signals[signalID].frequency, signals[signalID].phase);\r\n\r\n\r\n            // We should set position limits\r\n\r\n            console.log(signals[signalID].frequency)\r\n            console.log(signals[signalID].amplitude)\r\n\r\n            console.log(this)\r\n\r\n            this.setState({\r\n                signals: signals,   \r\n                }\r\n            );  \r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n    const current = this.state.signals;\r\n\r\n    return (\r\n            <div className = {styles.container}>\r\n\r\n                <div className = {styles.sinePlots} id =\"sinePlotsID\">\r\n                    <SinePlot\r\n                        signals = {current}\r\n                    />\r\n                </div>\r\n\r\n                <div className = {styles.otherPlots}>\r\n                    <div className = {styles.freqPlots} id =\"freqPlotsID\">\r\n                        <svg id=\"svgFreqPlot\" width=\"800\" height=\"800\"  \r\n                            style = {{\r\n                                position: \"relative\", \r\n                                top: \"0%\",\r\n                                left: \"0%\",\r\n                                transform: \"translate(0%, 0%)\",\r\n                                border: '1px solid black',\r\n                                \r\n                                }}> \r\n                        \r\n                            <FrequencyPlot\r\n                                signals = {current}\r\n                                onMouseDown = {(event) => this.handleMouseDown(event)}\r\n                                onMouseUp = {(event) => this.handleMouseUp(event)}\r\n                                onMouseOut = {(event) => this.handleMouseUp(event)}\r\n                                onMouseMove = {(event) => this.handleMouseMove(event)}\r\n                            />\r\n                        </svg>\r\n                    </div>\r\n\r\n                    <div className = {styles.sumPlots} id =\"sumPlotsID\">\r\n                        <svg id=\"svgSumPlot\" width=\"800\" height=\"800\" \r\n                            style = {{\r\n                                position: \"relative\", \r\n                                top: \"0%\",\r\n                                left: \"0%\",\r\n                                transform: \"translate(0%, 0%)\",\r\n                                border: '1px solid black'\r\n                                }}> \r\n                            <SumPlot\r\n                                signals = {current}\r\n                            />\r\n                        </svg>\r\n                    </div>\r\n                </div>\r\n                <div className = {styles.controls}>\r\n                    \r\n                        <Controls\r\n                            signals = {current}\r\n                            onChange = {(event) => this.handleChange(event)}\r\n                            onAdd = {() => this.addSignal()}\r\n                            onRemove = {(i) => this.removeSignal(i)}\r\n                        />\r\n                    \r\n                </div>\r\n            </div>\r\n      );\r\n    }\r\n  }","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n// import logo from './logo.svg';\nimport styles from './App.module.css';\nimport * as d3 from \"d3\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport {FourierCoefficients} from './FourierCoefficients.js'\nimport {FrequencyDomain} from './FrequencyDomain.js'\n\n/*\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n*/\n\n\n/* Known Bugs:\n- removeSignal() only works if you starting removing from the last signal\n- if you move/drag the mouse too fast the circle doesn't catch up\n- phase dial for DC signal updates amplitude when it's not meant to\n- negative phase circle is meant to move in opposite direction when dragged (cartersian coordinate problem)\n\n\n- Changing frequency does update the signal (when it's not meant to)\n^ But this is deliberate because we haven't updated FreqPlot functionality to fit with Fourier Plots\n*/\n\n\n\nfunction App() {\n    return (\n      <Router>\n        <div className = {styles.navbar}>\n                    <div className = {styles.tab} id=\"home\">  \n                      <Link to=\"/\">Home</Link>\n                    </div>\n                    <div className = {styles.tab}> \n                      <Link to=\"/about\">About</Link>\n                    </div>\n                    <div className = {styles.tab}>  \n                      <Link to=\"/FourierCoefficients\">Fourier Coefficients</Link>\n                    </div>\n                    <div className = {styles.tab}>  \n                      <Link to=\"/FrequencyDomain\">Frequency Domain</Link>\n                    </div>\n        </div>\n            <hr/>\n          {/*\n            A <Switch> looks through all its children <Route>\n            elements and renders the first one whose path\n            matches the current URL. Use a <Switch> any time\n            you have multiple routes, but you want only one\n            of them to render at a time\n          */}\n\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/about\">\n              <About />\n            </Route>\n            <Route path=\"/FourierCoefficients\">\n              <FourierCoefficients />\n            </Route>\n            <Route path=\"/FrequencyDomain\">\n              <FrequencyDomain />\n            </Route>\n          </Switch>\n \n      </Router>\n    );\n  }\n\n  function About() {\n    return (\n      <div>\n        <h2>About</h2>\n      </div>\n    );\n  }\n  \n  class Home extends React.Component{\n    render() {\n\n      return(\n      <div>\n        <h2>Home</h2>\n      </div>\n      )\n\n    };\n  }\n\n  // ========================================\n  \n  ReactDOM.render(\n    <App />,\n    document.getElementById('root')\n  );\n\n  export default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}