{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\contractor\\\\Desktop\\\\signals-web-app\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();\n\nfunction Dials(props) {\n  console.log(\"Hi from Dials!\", props);\n  return React.createElement(\"div\", {\n    className: \"signal-dials\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"id: \", props.signal.id), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"amp: \", props.signal.amplitude), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"freq: \", props.signal.frequency)), React.createElement(\"input\", {\n    type: \"range\",\n    min: 1,\n    max: 10,\n    value: props.signal.amplitude,\n    step: 1,\n    onChange: props.onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }));\n}\n\nclass Controls extends React.Component {\n  renderDial(signal) {\n    console.log(\"Hi from renderDial\", this.props);\n    return React.createElement(Dials, {\n      signal: signal,\n      onChange: () => this.props.onChange(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    const signalList = [];\n\n    for (let i = 0; i < this.props.signals.length; i++) {\n      signalList.push(React.createElement(\"li\", {\n        key: this.props.signals[i].id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, this.renderDial(this.props.signals[i])));\n    }\n\n    console.log(\"Hi from Controls render\", this.props);\n    return React.createElement(\"div\", {\n      className: \"dials\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"add-signal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \" Add New Signal \"), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, signalList));\n  }\n\n}\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      signals: [{\n        id: 0,\n        amplitude: 0,\n        frequency: 0\n      }, {\n        id: 1,\n        amplitude: 1,\n        frequency: 1\n      }]\n    };\n  } // https://stackoverflow.com/questions/47581967/reactjs-failed-to-compile-objects-is-not-defined-no-undef\n\n\n  addSignal() {\n    const signals = this.state.signals;\n    this.setState({\n      signals: signals.concat([{\n        // Just concatenating array of JSON\n        id: signals.length - 1,\n        amplitude: 1,\n        // Should be user input\n        frequency: 1 // Should be user input\n\n      }])\n    });\n  }\n\n  removeSignal() {// Need to find signal id from the list and delete, then re-update id's\n  }\n\n  handleChange(event) {\n    console.log(\"Hi from handleChange\", event);\n    this.setState({// signals: signal[],\n    });\n  }\n\n  render() {\n    const current = this.state.signals;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"canvas\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"sidebar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tab\",\n      id: \"home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \" Home \"), React.createElement(\"div\", {\n      className: \"tab\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \" Topic 1 \"), React.createElement(\"div\", {\n      className: \"tab\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \" Topic 2 \"), React.createElement(\"div\", {\n      className: \"tab\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \" Topic 3 \")), React.createElement(\"div\", {\n      className: \"controls\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Controls, {\n      signals: current,\n      onChange: event => this.handleChange(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    })));\n  }\n\n} // ========================================\n\n\nReactDOM.render(React.createElement(Home, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 144\n  },\n  __self: this\n}), document.getElementById('root'));\n/*\r\n\r\nhttps://stackoverflow.com/questions/36122034/jsx-react-html5-input-slider-doesnt-work\r\n\r\n*/","map":{"version":3,"sources":["C:/Users/contractor/Desktop/signals-web-app/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","render","document","getElementById","unregister","Dials","props","console","log","signal","id","amplitude","frequency","onChange","Controls","Component","renderDial","event","signalList","i","signals","length","push","Home","constructor","state","addSignal","setState","concat","removeSignal","handleChange","current"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\nfunction Dials(props) {\r\n    console.log(\"Hi from Dials!\",props);\r\n    return(\r\n        <div className=\"signal-dials\">\r\n            <div>\r\n                <div>id: {props.signal.id}</div>\r\n                <div>amp: {props.signal.amplitude}</div>\r\n                <div>freq: {props.signal.frequency}</div>\r\n            </div>\r\n            <input \r\n                type=\"range\" \r\n                min={1} \r\n                max ={10} \r\n                value = {props.signal.amplitude} \r\n                step={1}\r\n                onChange={props.onChange}/> \r\n        </div>\r\n    );\r\n}\r\n\r\nclass Controls extends React.Component {\r\n\r\n    renderDial(signal){\r\n        console.log(\"Hi from renderDial\",this.props);\r\n        return(\r\n            <Dials\r\n                signal = {signal}\r\n                onChange = {() => this.props.onChange(event)}\r\n            />\r\n        );\r\n    }\r\n\r\n    render(){\r\n        const signalList = []\r\n        for (let i=0; i < this.props.signals.length; i++){\r\n            signalList.push(\r\n            <li key={this.props.signals[i].id}> \r\n                {this.renderDial(this.props.signals[i])} \r\n            </li>\r\n            )\r\n        }\r\n\r\n        console.log(\"Hi from Controls render\",this.props);\r\n        return(\r\n            <div className = \"dials\" >\r\n                <div id=\"add-signal\"> Add New Signal </div>\r\n                <ol>\r\n                    {signalList}\r\n                </ol>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Home extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            signals: [{\r\n                id: 0,\r\n                amplitude: 0,\r\n                frequency: 0,\r\n            },{\r\n                id: 1,\r\n                amplitude: 1,\r\n                frequency: 1,\r\n            }],\r\n        };\r\n\r\n    }\r\n\r\n    // https://stackoverflow.com/questions/47581967/reactjs-failed-to-compile-objects-is-not-defined-no-undef\r\n    \r\n    addSignal(){\r\n        const signals = this.state.signals;\r\n\r\n        this.setState({\r\n            signals: signals.concat([{  // Just concatenating array of JSON\r\n                id: signals.length - 1,\r\n                amplitude: 1,   // Should be user input\r\n                frequency: 1,   // Should be user input\r\n            }]),\r\n        });\r\n    }\r\n    \r\n\r\n    removeSignal(){\r\n        // Need to find signal id from the list and delete, then re-update id's\r\n    }\r\n\r\n    handleChange(event){\r\n        console.log(\"Hi from handleChange\", event);\r\n        this.setState({\r\n                // signals: signal[],\r\n            }   \r\n        );\r\n    }\r\n\r\n    render() {\r\n    \r\n    const current = this.state.signals;\r\n\r\n    return (\r\n            <div className = \"container\">\r\n                <div className = \"canvas\"></div>\r\n\r\n                <div className = \"sidebar\">\r\n                    <div className = \"tab\" id=\"home\"> Home </div>\r\n                    <div className = \"tab\"> Topic 1 </div>\r\n                    <div className = \"tab\"> Topic 2 </div>\r\n                    <div className = \"tab\"> Topic 3 </div> \t\t\t\r\n                </div>\r\n\r\n                <div className = \"controls\">\r\n                    \r\n                        <Controls\r\n                            signals = {current}\r\n                            onChange = {(event) => this.handleChange(event)}\r\n                        />\r\n                    \r\n                </div>\r\n            </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  \r\n  // ========================================\r\n  \r\n  ReactDOM.render(\r\n    <Home />,\r\n    document.getElementById('root')\r\n  );\r\n  \r\n/*\r\n\r\nhttps://stackoverflow.com/questions/36122034/jsx-react-html5-input-slider-doesnt-work\r\n\r\n*/"]},"metadata":{},"sourceType":"module"}