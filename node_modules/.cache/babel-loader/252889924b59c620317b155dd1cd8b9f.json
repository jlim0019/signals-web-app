{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\contractor\\\\Desktop\\\\signals-web-app\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();\n\nfunction Dials(props) {\n  console.log(\"Hi from Dials!\", props);\n  return React.createElement(\"div\", {\n    className: \"signal-dials\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"ID: \", props.signal.id), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Amplitude: \", props.signal.amplitude), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Frequency: \", props.signal.frequency)), React.createElement(\"input\", {\n    id: \"signal\" + props.signal.id + \"_AmpDial\",\n    signal_id: props.signal.id,\n    input_type: \"AmpDial\",\n    type: \"range\",\n    min: -10,\n    max: 10,\n    value: props.signal.amplitude,\n    step: 1,\n    onChange: props.onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    id: \"signal\" + props.signal.id + \"_AmpText\",\n    signal_id: props.signal.id,\n    input_type: \"AmpText\",\n    type: \"number\",\n    min: -10,\n    max: 10,\n    onChange: props.onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    id: \"signal\" + props.signal.id + \"_FreqDial\",\n    signal_id: props.signal.id,\n    input_type: \"FreqDial\",\n    type: \"range\",\n    min: -10,\n    max: 10,\n    value: props.signal.frequency,\n    step: 1,\n    onChange: props.onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    id: \"signal\" + props.signal.id + \"_FreqText\",\n    signal_id: props.signal.id,\n    input_type: \"FreqText\",\n    type: \"number\",\n    min: -10,\n    max: 10,\n    onChange: props.onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }));\n}\n\nclass Controls extends React.Component {\n  renderDial(signal) {\n    console.log(\"Hi from renderDial\", this.props);\n    return React.createElement(Dials, {\n      signal: signal,\n      onChange: event => this.props.onChange(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    const signalList = [];\n\n    for (let i = 0; i < this.props.signals.length; i++) {\n      signalList.push(React.createElement(\"li\", {\n        key: \"signal\" + this.props.signals[i].id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, this.renderDial(this.props.signals[i])));\n    }\n\n    console.log(\"Hi from Controls render\", this.props);\n    console.log(signalList);\n    return React.createElement(\"div\", {\n      className: \"dials\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"add-signal\",\n      onClick: () => this.props.onAdd(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \" Add New Signal \"), React.createElement(\"button\", {\n      id: \"remove-signal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \" Remove Latest Signal \"), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, signalList));\n  }\n\n}\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      signals: [{\n        id: 0,\n        amplitude: 0,\n        frequency: 0\n      }, {\n        id: 1,\n        amplitude: 1,\n        frequency: 1\n      }]\n    };\n  } // https://stackoverflow.com/questions/47581967/reactjs-failed-to-compile-objects-is-not-defined-no-undef\n\n\n  addSignal() {\n    const signals = this.state.signals;\n    this.setState({\n      signals: signals.concat([{\n        // Just concatenating array of JSON\n        id: signals.length,\n        amplitude: 1,\n        // Should be user input\n        frequency: 1 // Should be user input\n\n      }])\n    }); // console.log(this.state.signals);\n  }\n\n  removeSignal() {\n    // Need to find signal id from the list and delete, then re-update id's\n    const signals = this.state.signals;\n    this.setState({\n      signals: signals.slice(0, [{\n        // Just concatenating array of JSON\n        id: signals.length,\n        amplitude: 1,\n        // Should be user input\n        frequency: 1 // Should be user input\n\n      }])\n    }); // console.log(this.state.signals);\n  }\n\n  handleChange(event) {\n    console.log(\"Hi from handleChange\", event);\n    console.log(event.target);\n    console.log(event.target.id);\n    console.log(event.target.value);\n    console.log(\"State:\", this.state);\n    const signals = this.state.signals;\n    const inputType = event.target.getAttribute('input_type');\n    const signalID = event.target.getAttribute('signal_id');\n    let value = parseInt(event.target.value); // Text Form can exceed the maximum limit of 10?\n\n    if (inputType === \"AmpDial\" || inputType === \"AmpText\") {\n      if (isNaN(value)) {\n        value = 0;\n      } else {\n        signals[signalID].amplitude = value;\n        document.getElementById(\"signal\" + signalID + \"_AmpText\").value = value;\n      }\n    } else if (inputType === \"FreqDial\" || inputType === \"FreqText\") {\n      if (isNaN(value)) {\n        value = 0;\n      } else {\n        signals[signalID].frequency = value;\n        document.getElementById(\"signal\" + signalID + \"_FreqText\").value = value;\n      }\n    }\n\n    console.log(signals);\n    this.setState({\n      signals: signals // Rewriting the whole array of object may be expensive but it works lol\n      // Could just access the key and change it's value rather than doing a whole update\n      // This is actually using a lot of memory though? F12 -> Memory tab\n\n    });\n  }\n\n  render() {\n    const current = this.state.signals;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"canvas\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"sidebar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tab\",\n      id: \"home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \" Home \"), React.createElement(\"div\", {\n      className: \"tab\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \" Topic 1 \"), React.createElement(\"div\", {\n      className: \"tab\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \" Topic 2 \"), React.createElement(\"div\", {\n      className: \"tab\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \" Topic 3 \")), React.createElement(\"div\", {\n      className: \"controls\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(Controls, {\n      signals: current,\n      onChange: event => this.handleChange(event),\n      onAdd: () => this.addSignal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    })));\n  }\n\n} // ========================================\n\n\nReactDOM.render(React.createElement(Home, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 225\n  },\n  __self: this\n}), document.getElementById('root'));\n/*\r\n\r\nhttps://stackoverflow.com/questions/36122034/jsx-react-html5-input-slider-doesnt-work\r\nhttps://www.reddit.com/r/Android/comments/ey42xq/android_authority_a_guy_wheeled_around_99_phones/\r\n// Intel moving from a cpu company to a data company\r\n\r\n*/","map":{"version":3,"sources":["C:/Users/contractor/Desktop/signals-web-app/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","render","document","getElementById","unregister","Dials","props","console","log","signal","id","amplitude","frequency","onChange","Controls","Component","renderDial","event","signalList","i","signals","length","push","onAdd","Home","constructor","state","addSignal","setState","concat","removeSignal","slice","handleChange","target","value","inputType","getAttribute","signalID","parseInt","isNaN","current"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\nfunction Dials(props) {\r\n    console.log(\"Hi from Dials!\",props);\r\n    return(\r\n        <div className=\"signal-dials\">\r\n            <div>\r\n                <div>ID: {props.signal.id}</div>\r\n                <div>Amplitude: {props.signal.amplitude}</div>\r\n                <div>Frequency: {props.signal.frequency}</div>\r\n            </div>\r\n            <input \r\n                id = {\"signal\" + props.signal.id + \"_AmpDial\" }\r\n                signal_id = {props.signal.id}\r\n                input_type = {\"AmpDial\"}\r\n                type =\"range\" \r\n                min={-10} \r\n                max ={10} \r\n                value = {props.signal.amplitude} \r\n                step={1}\r\n                onChange={props.onChange}\r\n            /> \r\n            <input\r\n                id = {\"signal\" + props.signal.id + \"_AmpText\" }\r\n                signal_id = {props.signal.id}\r\n                input_type = {\"AmpText\"}\r\n                type = \"number\"  \r\n                min = {-10}\r\n                max = {10}\r\n\r\n                onChange={props.onChange}\r\n            />\r\n            <input \r\n                id = {\"signal\" + props.signal.id + \"_FreqDial\" }\r\n                signal_id = {props.signal.id}\r\n                input_type = {\"FreqDial\"}\r\n                type =\"range\" \r\n                min={-10} \r\n                max ={10} \r\n                value = {props.signal.frequency} \r\n                step={1}\r\n                onChange={props.onChange}\r\n            /> \r\n             <input\r\n                id = {\"signal\" + props.signal.id + \"_FreqText\" }\r\n                signal_id = {props.signal.id}\r\n                input_type = {\"FreqText\"}\r\n                type = \"number\"  \r\n                min = {-10}\r\n                max = {10}\r\n                onChange={props.onChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nclass Controls extends React.Component {\r\n\r\n    renderDial(signal){\r\n        console.log(\"Hi from renderDial\",this.props);\r\n        return(\r\n            <Dials\r\n                signal = {signal}\r\n                onChange = {(event) => this.props.onChange(event)}\r\n            />\r\n        );\r\n    }\r\n\r\n    render(){\r\n        const signalList = []; \r\n        for (let i=0; i < this.props.signals.length; i++){\r\n            signalList.push(\r\n            <li key={\"signal\" + this.props.signals[i].id}> \r\n                {this.renderDial(this.props.signals[i])} \r\n            </li>\r\n            )\r\n        }\r\n        console.log(\"Hi from Controls render\",this.props);\r\n        console.log(signalList);\r\n        return(\r\n            <div className = \"dials\" >\r\n                <button id = \"add-signal\" onClick={() => this.props.onAdd()}> Add New Signal </button>\r\n                <button id = \"remove-signal\"> Remove Latest Signal </button>\r\n                <ol>\r\n                    {signalList}\r\n                </ol>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Home extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            signals: [{\r\n                id: 0,\r\n                amplitude: 0,\r\n                frequency: 0,\r\n            },{\r\n                id: 1,\r\n                amplitude: 1,\r\n                frequency: 1,\r\n            },],\r\n        };\r\n    }\r\n\r\n    // https://stackoverflow.com/questions/47581967/reactjs-failed-to-compile-objects-is-not-defined-no-undef\r\n    \r\n    addSignal(){\r\n        const signals = this.state.signals;\r\n\r\n        this.setState({\r\n            signals: signals.concat([{  // Just concatenating array of JSON\r\n                id: signals.length,\r\n                amplitude: 1,   // Should be user input\r\n                frequency: 1,   // Should be user input\r\n            },]),\r\n        });\r\n        // console.log(this.state.signals);\r\n    }\r\n    \r\n\r\n    removeSignal(){\r\n        // Need to find signal id from the list and delete, then re-update id's\r\n        const signals = this.state.signals;\r\n\r\n        this.setState({\r\n            signals: signals.slice(0,[{  // Just concatenating array of JSON\r\n                id: signals.length,\r\n                amplitude: 1,   // Should be user input\r\n                frequency: 1,   // Should be user input\r\n            },]),\r\n        });\r\n        // console.log(this.state.signals);\r\n    }\r\n\r\n    handleChange(event){\r\n        console.log(\"Hi from handleChange\", event);\r\n        console.log(event.target);\r\n        console.log(event.target.id);\r\n        console.log(event.target.value);\r\n        console.log(\"State:\", this.state);\r\n\r\n        const signals = this.state.signals;\r\n        const inputType = event.target.getAttribute('input_type');\r\n        const signalID = event.target.getAttribute('signal_id');\r\n        let value = parseInt(event.target.value);\r\n\r\n        // Text Form can exceed the maximum limit of 10?\r\n\r\n        if((inputType === \"AmpDial\") || (inputType === \"AmpText\")){\r\n            if(isNaN(value)){\r\n                value = 0;\r\n            }\r\n            else{\r\n                signals[signalID].amplitude = value; \r\n                document.getElementById(\"signal\" + signalID + \"_AmpText\").value = value;\r\n            }\r\n        }\r\n        else if ((inputType === \"FreqDial\") || (inputType === \"FreqText\")){\r\n            if(isNaN(value)){\r\n                value = 0;\r\n            }\r\n            else{\r\n                signals[signalID].frequency = value; \r\n                document.getElementById(\"signal\" + signalID + \"_FreqText\").value = value;\r\n            }\r\n        }\r\n\r\n        console.log(signals);\r\n        this.setState({\r\n                signals: signals,   \r\n                // Rewriting the whole array of object may be expensive but it works lol\r\n                // Could just access the key and change it's value rather than doing a whole update\r\n                // This is actually using a lot of memory though? F12 -> Memory tab\r\n            }   \r\n        );\r\n    }\r\n\r\n    render() {\r\n    \r\n    const current = this.state.signals;\r\n\r\n    return (\r\n            <div className = \"container\">\r\n                <div className = \"canvas\"></div>\r\n\r\n                <div className = \"sidebar\">\r\n                    <div className = \"tab\" id=\"home\"> Home </div>\r\n                    <div className = \"tab\"> Topic 1 </div>\r\n                    <div className = \"tab\"> Topic 2 </div>\r\n                    <div className = \"tab\"> Topic 3 </div> \t\t\t\r\n                </div>\r\n\r\n                <div className = \"controls\">\r\n                    \r\n                        <Controls\r\n                            signals = {current}\r\n                            onChange = {(event) => this.handleChange(event)}\r\n                            onAdd = {() => this.addSignal()}\r\n                        />\r\n                    \r\n                </div>\r\n            </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  \r\n  // ========================================\r\n  \r\n  ReactDOM.render(\r\n    <Home />,\r\n    document.getElementById('root')\r\n  );\r\n  \r\n/*\r\n\r\nhttps://stackoverflow.com/questions/36122034/jsx-react-html5-input-slider-doesnt-work\r\nhttps://www.reddit.com/r/Android/comments/ey42xq/android_authority_a_guy_wheeled_around_99_phones/\r\n// Intel moving from a cpu company to a data company\r\n\r\n*/"]},"metadata":{},"sourceType":"module"}