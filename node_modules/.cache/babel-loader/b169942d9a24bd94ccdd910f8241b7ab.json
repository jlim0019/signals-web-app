{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\contractor\\\\Desktop\\\\signals-web-app\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();\n\nfunction Dials(props) {\n  // console.log(\"Hi from Dials!\",props);\n  return React.createElement(\"div\", {\n    className: \"signal-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"signal-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"ID: \", props.signal.id), React.createElement(\"button\", {\n    id: \"remove-signal\",\n    onClick: i => props.onRemove(props.signal.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \" Remove Signal \")), React.createElement(\"div\", {\n    className: \"signal-props\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Amplitude: \", props.signal.amplitude), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Frequency: \", props.signal.frequency)), React.createElement(\"div\", {\n    className: \"signal-dials\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"signal\" + props.signal.id + \"_AmpDial\",\n    signal_id: props.signal.id,\n    input_type: \"AmpDial\",\n    type: \"range\",\n    min: -10,\n    max: 10,\n    value: props.signal.amplitude,\n    step: 1,\n    onChange: props.onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    id: \"signal\" + props.signal.id + \"_AmpText\",\n    signal_id: props.signal.id,\n    input_type: \"AmpText\",\n    type: \"number\",\n    min: -10,\n    max: 10,\n    onChange: props.onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    id: \"signal\" + props.signal.id + \"_FreqDial\",\n    signal_id: props.signal.id,\n    input_type: \"FreqDial\",\n    type: \"range\",\n    min: -10,\n    max: 10,\n    value: props.signal.frequency,\n    step: 1,\n    onChange: props.onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    id: \"signal\" + props.signal.id + \"_FreqText\",\n    signal_id: props.signal.id,\n    input_type: \"FreqText\",\n    type: \"number\",\n    min: -10,\n    max: 10,\n    onChange: props.onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })));\n}\n\nclass Controls extends React.Component {\n  renderDial(signal) {\n    // console.log(\"Hi from renderDial\",this.props);\n    return React.createElement(Dials, {\n      signal: signal,\n      onChange: event => this.props.onChange(event),\n      onRemove: i => this.props.onRemove(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    const signalList = [];\n\n    for (let i = 0; i < this.props.signals.length; i++) {\n      signalList.push(React.createElement(\"div\", {\n        key: \"signal\" + this.props.signals[i].id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, this.renderDial(this.props.signals[i])));\n    } // console.log(\"Hi from Controls render\",this.props);\n    // console.log(signalList);\n\n\n    return React.createElement(\"div\", {\n      className: \"dials\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, signalList, React.createElement(\"button\", {\n      id: \"add-signal\",\n      \"align-content\": \"center\",\n      onClick: () => this.props.onAdd(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \" Add New Signal \"));\n  }\n\n}\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      signals: [{\n        id: 0,\n        amplitude: 0,\n        frequency: 0\n      }, {\n        id: 1,\n        amplitude: 1,\n        frequency: 1\n      }]\n    };\n  } // https://stackoverflow.com/questions/47581967/reactjs-failed-to-compile-objects-is-not-defined-no-undef\n\n\n  addSignal() {\n    const signals = this.state.signals;\n    this.setState({\n      signals: signals.concat([{\n        // Just concatenating array of JSON\n        id: signals.length,\n        amplitude: 1,\n        // Should be user input\n        frequency: 1 // Should be user input\n\n      }])\n    }); // console.log(this.state.signals);\n  }\n\n  removeSignal(i) {\n    // Need to find signal id from the array and delete, then re-update id's\n    const signals = this.state.signals;\n    signals.splice(i, 1);\n\n    for (let i = 0; i < this.state.signals.length; i++) {\n      signals[i].id = i;\n    }\n\n    console.log(\"Hi from removeSignal\", this.state.signals);\n    this.setState({\n      signals: signals\n    });\n    console.log(this.state.signals);\n  }\n\n  handleChange(event) {\n    /*\r\n    console.log(\"Hi from handleChange\", event);\r\n    console.log(event.target);\r\n    console.log(event.target.id);\r\n    console.log(event.target.value);\r\n    console.log(\"State:\", this.state);\r\n    */\n    const signals = this.state.signals;\n    const inputType = event.target.getAttribute('input_type');\n    const signalID = event.target.getAttribute('signal_id');\n    let value = parseInt(event.target.value); // Text Form can exceed the maximum limit of 10?\n\n    if (inputType === \"AmpDial\" || inputType === \"AmpText\") {\n      if (isNaN(value)) {\n        value = 0;\n      } else {\n        signals[signalID].amplitude = value;\n        document.getElementById(\"signal\" + signalID + \"_AmpText\").value = value;\n      }\n    } else if (inputType === \"FreqDial\" || inputType === \"FreqText\") {\n      if (isNaN(value)) {\n        value = 0;\n      } else {\n        signals[signalID].frequency = value;\n        document.getElementById(\"signal\" + signalID + \"_FreqText\").value = value;\n      }\n    } // console.log(signals);\n\n\n    this.setState({\n      signals: signals // Rewriting the whole array of object may be expensive but it works lol\n      // Could just access the key and change it's value rather than doing a whole update\n      // This is actually using a lot of memory though? F12 -> Memory tab\n\n    });\n  }\n\n  render() {\n    const current = this.state.signals;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"canvas\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"sidebar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tab\",\n      id: \"home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \" Home \"), React.createElement(\"div\", {\n      className: \"tab\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \" Topic 1 \"), React.createElement(\"div\", {\n      className: \"tab\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \" Topic 2 \"), React.createElement(\"div\", {\n      className: \"tab\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \" Topic 3 \")), React.createElement(\"div\", {\n      className: \"controls\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(Controls, {\n      signals: current,\n      onChange: event => this.handleChange(event),\n      onAdd: () => this.addSignal(),\n      onRemove: i => this.removeSignal(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    })));\n  }\n\n} // ========================================\n\n\nReactDOM.render(React.createElement(Home, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 233\n  },\n  __self: this\n}), document.getElementById('root'));\n/*\r\n\r\nhttps://stackoverflow.com/questions/36122034/jsx-react-html5-input-slider-doesnt-work\r\nhttps://www.reddit.com/r/Android/comments/ey42xq/android_authority_a_guy_wheeled_around_99_phones/\r\n// Intel moving from a cpu company to a data company\r\n\r\n*/","map":{"version":3,"sources":["C:/Users/contractor/Desktop/signals-web-app/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","render","document","getElementById","unregister","Dials","props","signal","id","i","onRemove","amplitude","frequency","onChange","Controls","Component","renderDial","event","signalList","signals","length","push","onAdd","Home","constructor","state","addSignal","setState","concat","removeSignal","splice","console","log","handleChange","inputType","target","getAttribute","signalID","value","parseInt","isNaN","current"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\nfunction Dials(props) {\r\n    // console.log(\"Hi from Dials!\",props);\r\n    return(\r\n        <div className=\"signal-container\">\r\n            <div className=\"signal-info\">\r\n                <div>ID: {props.signal.id}</div>\r\n                <button id = \"remove-signal\" onClick={(i) => props.onRemove(props.signal.id)}> Remove Signal </button>\r\n            </div>\r\n            <div className=\"signal-props\">\r\n                <div>Amplitude: {props.signal.amplitude}</div>\r\n                <div>Frequency: {props.signal.frequency}</div>\r\n            </div>\r\n            <div className = \"signal-dials\">\r\n            <input \r\n                id = {\"signal\" + props.signal.id + \"_AmpDial\" }\r\n                signal_id = {props.signal.id}\r\n                input_type = {\"AmpDial\"}\r\n                type =\"range\" \r\n                min={-10} \r\n                max ={10} \r\n                value = {props.signal.amplitude} \r\n                step={1}\r\n                onChange={props.onChange}\r\n            /> \r\n            <input\r\n                id = {\"signal\" + props.signal.id + \"_AmpText\" }\r\n                signal_id = {props.signal.id}\r\n                input_type = {\"AmpText\"}\r\n                type = \"number\"  \r\n                min = {-10}\r\n                max = {10}\r\n\r\n                onChange={props.onChange}\r\n            />\r\n            <input \r\n                id = {\"signal\" + props.signal.id + \"_FreqDial\" }\r\n                signal_id = {props.signal.id}\r\n                input_type = {\"FreqDial\"}\r\n                type =\"range\" \r\n                min={-10} \r\n                max ={10} \r\n                value = {props.signal.frequency} \r\n                step={1}\r\n                onChange={props.onChange}\r\n            /> \r\n             <input\r\n                id = {\"signal\" + props.signal.id + \"_FreqText\" }\r\n                signal_id = {props.signal.id}\r\n                input_type = {\"FreqText\"}\r\n                type = \"number\"  \r\n                min = {-10}\r\n                max = {10}\r\n                onChange={props.onChange}\r\n            />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nclass Controls extends React.Component {\r\n\r\n    renderDial(signal){\r\n        // console.log(\"Hi from renderDial\",this.props);\r\n        return(\r\n            <Dials\r\n                signal = {signal}\r\n                onChange = {(event) => this.props.onChange(event)}\r\n                onRemove = {(i) => this.props.onRemove(i)}\r\n            />\r\n        );\r\n    }\r\n\r\n    render(){\r\n        const signalList = []; \r\n        for (let i=0; i < this.props.signals.length; i++){\r\n            signalList.push(\r\n                <div key={\"signal\" + this.props.signals[i].id}> \r\n                    {this.renderDial(this.props.signals[i])} \r\n                </div>\r\n            )\r\n        }\r\n        // console.log(\"Hi from Controls render\",this.props);\r\n        // console.log(signalList);\r\n        return(\r\n            <div className = \"dials\" >\r\n                {signalList}\r\n                <button id = \"add-signal\" align-content = \"center\" onClick={() => this.props.onAdd()}> Add New Signal </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Home extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            signals: [{\r\n                id: 0,\r\n                amplitude: 0,\r\n                frequency: 0,\r\n            },{\r\n                id: 1,\r\n                amplitude: 1,\r\n                frequency: 1,\r\n            },],\r\n        };\r\n    }\r\n\r\n    // https://stackoverflow.com/questions/47581967/reactjs-failed-to-compile-objects-is-not-defined-no-undef\r\n    \r\n    addSignal(){\r\n        const signals = this.state.signals;\r\n\r\n        this.setState({\r\n            signals: signals.concat([{  // Just concatenating array of JSON\r\n                id: signals.length,\r\n                amplitude: 1,   // Should be user input\r\n                frequency: 1,   // Should be user input\r\n            },]),\r\n        });\r\n        // console.log(this.state.signals);\r\n    }\r\n\r\n    removeSignal(i){\r\n        // Need to find signal id from the array and delete, then re-update id's\r\n        const signals = this.state.signals;\r\n    \r\n        signals.splice(i,1)\r\n\r\n        for(let i = 0; i< this.state.signals.length; i++){\r\n            signals[i].id = i;\r\n        }\r\n\r\n        console.log(\"Hi from removeSignal\",this.state.signals);\r\n        this.setState({\r\n            signals: signals,\r\n        });\r\n        console.log(this.state.signals);\r\n    }\r\n\r\n    handleChange(event){\r\n        /*\r\n        console.log(\"Hi from handleChange\", event);\r\n        console.log(event.target);\r\n        console.log(event.target.id);\r\n        console.log(event.target.value);\r\n        console.log(\"State:\", this.state);\r\n        */\r\n\r\n        const signals = this.state.signals;\r\n        const inputType = event.target.getAttribute('input_type');\r\n        const signalID = event.target.getAttribute('signal_id');\r\n        let value = parseInt(event.target.value);\r\n\r\n        // Text Form can exceed the maximum limit of 10?\r\n\r\n        if((inputType === \"AmpDial\") || (inputType === \"AmpText\")){\r\n            if(isNaN(value)){\r\n                value = 0;\r\n            }\r\n            else{\r\n                signals[signalID].amplitude = value; \r\n                document.getElementById(\"signal\" + signalID + \"_AmpText\").value = value;\r\n            }\r\n        }\r\n        else if ((inputType === \"FreqDial\") || (inputType === \"FreqText\")){\r\n            if(isNaN(value)){\r\n                value = 0;\r\n            }\r\n            else{\r\n                signals[signalID].frequency = value; \r\n                document.getElementById(\"signal\" + signalID + \"_FreqText\").value = value;\r\n            }\r\n        }\r\n\r\n        // console.log(signals);\r\n        this.setState({\r\n                signals: signals,   \r\n                // Rewriting the whole array of object may be expensive but it works lol\r\n                // Could just access the key and change it's value rather than doing a whole update\r\n                // This is actually using a lot of memory though? F12 -> Memory tab\r\n            }   \r\n        );\r\n    }\r\n\r\n    render() {\r\n    \r\n    const current = this.state.signals;\r\n\r\n    return (\r\n            <div className = \"container\">\r\n                <div className = \"canvas\"></div>\r\n\r\n                <div className = \"sidebar\">\r\n                    <div className = \"tab\" id=\"home\"> Home </div>\r\n                    <div className = \"tab\"> Topic 1 </div>\r\n                    <div className = \"tab\"> Topic 2 </div>\r\n                    <div className = \"tab\"> Topic 3 </div> \t\t\t\r\n                </div>\r\n\r\n                <div className = \"controls\">\r\n                    \r\n                        <Controls\r\n                            signals = {current}\r\n                            onChange = {(event) => this.handleChange(event)}\r\n                            onAdd = {() => this.addSignal()}\r\n                            onRemove = {(i) => this.removeSignal(i)}\r\n                        />\r\n                    \r\n                </div>\r\n            </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  \r\n  // ========================================\r\n  \r\n  ReactDOM.render(\r\n    <Home />,\r\n    document.getElementById('root')\r\n  );\r\n  \r\n/*\r\n\r\nhttps://stackoverflow.com/questions/36122034/jsx-react-html5-input-slider-doesnt-work\r\nhttps://www.reddit.com/r/Android/comments/ey42xq/android_authority_a_guy_wheeled_around_99_phones/\r\n// Intel moving from a cpu company to a data company\r\n\r\n*/"]},"metadata":{},"sourceType":"module"}