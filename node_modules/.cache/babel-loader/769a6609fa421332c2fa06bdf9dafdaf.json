{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bunny\\\\Documents\\\\GitHub\\\\signals-web-app\\\\src\\\\FourierCoefficients.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport styles from './FourierCoefficients.module.css';\nimport * as d3 from \"d3\";\n\nfunction Dials(props) {\n  return React.createElement(\"div\", {\n    className: styles.signal_container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.signal_info,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"ID: \", props.signal.id), React.createElement(\"button\", {\n    id: \"remove-signal\",\n    onClick: i => props.onRemove(props.signal.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \" Remove Signal \")), React.createElement(\"div\", {\n    className: styles.signal_props,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Amplitude: \", props.signal.amplitude)), React.createElement(\"div\", {\n    className: styles.signal_props,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"signal\" + props.signal.id + \"_AmpDial\",\n    signal_id: props.signal.id,\n    input_type: \"AmpDial\",\n    type: \"range\",\n    min: -5,\n    max: 5,\n    value: props.signal.amplitude,\n    step: 0.1,\n    onChange: props.onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    id: \"signal\" + props.signal.id + \"_AmpText\",\n    signal_id: props.signal.id,\n    input_type: \"AmpText\",\n    type: \"number\",\n    min: -5,\n    max: 5,\n    onChange: props.onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: styles.signal_props,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Phase: \", props.signal.phase)), React.createElement(\"div\", {\n    className: styles.signal_props,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"signal\" + props.signal.id + \"_PhaseDial\",\n    signal_id: props.signal.id,\n    input_type: \"PhaseDial\",\n    type: \"range\",\n    min: -180,\n    max: 180,\n    value: props.signal.phase,\n    step: 1,\n    onChange: props.onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    id: \"signal\" + props.signal.id + \"_PhaseText\",\n    signal_id: props.signal.id,\n    input_type: \"PhaseText\",\n    type: \"number\",\n    min: -180,\n    max: 180,\n    onChange: props.onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }))));\n}\n\nclass Controls extends React.Component {\n  renderDial(signal) {\n    return React.createElement(Dials, {\n      signal: signal,\n      onChange: event => this.props.onChange(event),\n      onRemove: i => this.props.onRemove(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    const signalList = [];\n\n    for (let i = 0; i < this.props.signals.length; i++) {\n      signalList.push(React.createElement(\"div\", {\n        key: \"signal\" + this.props.signals[i].id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, this.renderDial(this.props.signals[i])));\n    }\n\n    return React.createElement(\"div\", {\n      className: styles.dials,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"add-signal\",\n      \"align-content\": \"center\",\n      onClick: () => this.props.onAdd(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \" Add New Signal \"), signalList);\n  }\n\n}\n\nfunction FourierCirclesMagPos(props) {\n  let divHeight = document.getElementById(\"fourierMagPlotsID\").getBoundingClientRect().height;\n  let divWidth = document.getElementById(\"fourierMagPlotsID\").getBoundingClientRect().width;\n  let plotHeight = 0.8 * divHeight;\n  let plotWidth = 0.8 * divWidth;\n  return React.createElement(\"circle\", {\n    id: \"circle_\" + props.signal.id,\n    signal_id: props.signal.id,\n    cx: props.signal.id * (plotWidth / 8),\n    cy: props.signal.amplitude * (divHeight / 8),\n    transform: \"translate(\" + divWidth / 2 + \",\" + divHeight / 2 + \") scale(1,-1)\",\n    r: 10,\n    fill: \"black\",\n    stroke: \"black\",\n    strokeWidth: \"1\",\n    onMouseDown: props.onMouseDown,\n    onMouseUp: props.onMouseUp,\n    onMouseOut: props.onMouseUp,\n    onMouseMove: props.onMouseMove,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  });\n}\n\nfunction FourierCirclesMagNeg(props) {\n  let divHeight = document.getElementById(\"fourierMagPlotsID\").getBoundingClientRect().height;\n  let divWidth = document.getElementById(\"fourierMagPlotsID\").getBoundingClientRect().width;\n  let plotWidth = 0.8 * divWidth;\n  return React.createElement(\"circle\", {\n    id: \"circle_-\" + props.signal.id,\n    signal_id: props.signal.id,\n    cx: props.signal.id * -(plotWidth / 8) // 8 is because our x-axis is divided into 8 sections \n    ,\n    cy: props.signal.amplitude * (divHeight / 8),\n    transform: \"translate(\" + divWidth / 2 + \",\" + divHeight / 2 + \") scale(1,-1)\",\n    r: 10,\n    fill: \"black\",\n    stroke: \"black\",\n    strokeWidth: \"1\",\n    onMouseDown: props.onMouseDown,\n    onMouseUp: props.onMouseUp,\n    onMouseOut: props.onMouseUp,\n    onMouseMove: props.onMouseMove,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  });\n}\n\nfunction FourierCirclesPhasePos(props) {\n  let divHeight = document.getElementById(\"fourierPhasePlotsID\").getBoundingClientRect().height;\n  let divWidth = document.getElementById(\"fourierPhasePlotsID\").getBoundingClientRect().width;\n  let plotHeight = 0.8 * divHeight;\n  let plotWidth = 0.8 * divWidth;\n  return React.createElement(\"circle\", {\n    id: \"circle_\" + props.signal.id,\n    signal_id: props.signal.id,\n    cx: props.signal.id * (plotWidth / 8) // 8 is because our x-axis is divided into 8 sections \n    ,\n    cy: props.signal.phase * (plotHeight / 360),\n    transform: \"translate(\" + divWidth / 2 + \",\" + divHeight / 2 + \") scale(1,-1)\",\n    r: 10,\n    fill: \"black\",\n    stroke: \"black\",\n    strokeWidth: \"1\",\n    onMouseDown: props.onMouseDown,\n    onMouseUp: props.onMouseUp,\n    onMouseOut: props.onMouseUp,\n    onMouseMove: props.onMouseMove,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  });\n}\n\nfunction FourierCirclesPhaseNeg(props) {\n  let divHeight = document.getElementById(\"fourierPhasePlotsID\").getBoundingClientRect().height;\n  let divWidth = document.getElementById(\"fourierPhasePlotsID\").getBoundingClientRect().width;\n  let plotHeight = 0.8 * divHeight;\n  let plotWidth = 0.8 * divWidth;\n  return React.createElement(\"circle\", {\n    id: \"circle_-\" + props.signal.id,\n    signal_id: props.signal.id,\n    cx: props.signal.id * -(plotWidth / 8) // 8 is because our x-axis is divided into 8 sections \n    ,\n    cy: props.signal.phase * (plotHeight / 360),\n    transform: \"translate(\" + divWidth / 2 + \",\" + divHeight / 2 + \") scale(1,-1)\",\n    r: 10,\n    fill: \"black\",\n    stroke: \"black\",\n    strokeWidth: \"1\",\n    onMouseDown: props.onMouseDown,\n    onMouseUp: props.onMouseUp,\n    onMouseOut: props.onMouseUp,\n    onMouseMove: props.onMouseMove,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  });\n}\n\nclass FourierMagPlot extends React.Component {\n  constructor(props) {\n    super(props);\n    this.height = 0;\n    this.width = 0;\n  }\n\n  componentDidMount() {\n    // Only get dimensions when DOM is loaded\n    this.height = document.getElementById(\"fourierMagPlotsID\").getBoundingClientRect().height;\n    this.width = document.getElementById(\"fourierMagPlotsID\").getBoundingClientRect().width;\n  }\n\n  renderCirclePos(signal) {\n    return React.createElement(FourierCirclesMagPos, {\n      signal: signal,\n      onMouseDown: event => this.props.onMouseDown(event),\n      onMouseUp: event => this.props.onMouseUp(event),\n      onMouseOut: event => this.props.onMouseUp(event),\n      onMouseMove: event => this.props.onMouseMove(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    });\n  }\n\n  renderCircleNeg(signal) {\n    return React.createElement(FourierCirclesMagNeg, {\n      signal: signal,\n      onMouseDown: event => this.props.onMouseDown(event),\n      onMouseUp: event => this.props.onMouseUp(event),\n      onMouseOut: event => this.props.onMouseUp(event),\n      onMouseMove: event => this.props.onMouseMove(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    const signals = this.props.signals;\n    let FourierMagSvg = d3.select(\"#svgFourierMagPlot\");\n    let radius = 10;\n    const circleList = [];\n\n    for (let i = 0; i < this.props.signals.length; i++) {\n      if (i == 0) {\n        circleList.push(this.renderCirclePos(this.props.signals[i]));\n      } else {\n        circleList.push(this.renderCirclePos(this.props.signals[i]), this.renderCircleNeg(this.props.signals[i]));\n      }\n    } // Should probably check both axis if they exist before appending\n\n\n    if (!document.getElementById(\"x_axis_fourierMagPlot\")) {\n      // Create Axis for Frequency Plot\n      let xscale_freq = d3.scaleLinear().domain([-4, 4]) // This needs to be dynamic\n      .range([1 / 10 * this.width, 9 / 10 * this.width]);\n      let yscale_freq = d3.scaleLinear().domain([4, -4]) // This needs to be dynamic\n      .range([1 / 10 * this.height, 9 / 10 * this.height]); // Add scales to axis\n\n      const xAxisTicks = xscale_freq.ticks().filter(tick => Number.isInteger(tick));\n      let x_axis_freq = d3.axisBottom(xscale_freq).tickValues(xAxisTicks).tickFormat(d3.format(\"d\"));\n      let y_axis_freq = d3.axisLeft(yscale_freq);\n      FourierMagSvg.append(\"text\").attr(\"text-anchor\", \"middle\").attr(\"x\", this.width / 2).attr(\"y\", this.height / 20).style(\"font-size\", \"16px\").style(\"text-decoration\", \"underline\").text(\"Fourier Magnitude Plot\");\n      FourierMagSvg.append('g').attr(\"id\", \"x_axis_fourierMagPlot\").attr(\"transform\", \"translate(0,\" + this.height / 2 + \")\").call(x_axis_freq);\n      FourierMagSvg.append('g').attr(\"id\", \"y_axis_fourierMagPlot\").attr(\"transform\", \"translate(\" + this.width / 2 + \",0)\").call(y_axis_freq);\n    }\n\n    return React.createElement(\"svg\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, circleList);\n  }\n\n}\n\nclass FourierPhasePlot extends React.Component {\n  constructor(props) {\n    super(props);\n    this.height = 0;\n    this.width = 0;\n  }\n\n  componentDidMount() {\n    // Only get dimensions when DOM is loaded\n    this.height = document.getElementById(\"fourierPhasePlotsID\").getBoundingClientRect().height;\n    this.width = document.getElementById(\"fourierPhasePlotsID\").getBoundingClientRect().width;\n  }\n\n  renderCirclePos(signal) {\n    return React.createElement(FourierCirclesPhasePos, {\n      signal: signal,\n      onMouseDown: event => this.props.onMouseDown(event),\n      onMouseUp: event => this.props.onMouseUp(event),\n      onMouseOut: event => this.props.onMouseUp(event),\n      onMouseMove: event => this.props.onMouseMove(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    });\n  }\n\n  renderCircleNeg(signal) {\n    return React.createElement(FourierCirclesPhaseNeg, {\n      signal: signal,\n      onMouseDown: event => this.props.onMouseDown(event),\n      onMouseUp: event => this.props.onMouseUp(event),\n      onMouseOut: event => this.props.onMouseUp(event),\n      onMouseMove: event => this.props.onMouseMove(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    const signals = this.props.signals;\n    let FourierPhaseSvg = d3.select(\"#svgFourierPhasePlot\");\n    let radius = 10;\n    const circleList = [];\n\n    for (let i = 0; i < this.props.signals.length; i++) {\n      if (i == 0) {\n        circleList.push(this.renderCirclePos(this.props.signals[i]));\n      } else {\n        circleList.push(this.renderCirclePos(this.props.signals[i]), this.renderCircleNeg(this.props.signals[i]));\n      }\n    } // Should probably check both axis if they exist before appending\n\n\n    if (!document.getElementById(\"x_axis_fourierPhasePlot\")) {\n      // Create Axis for Frequency Plot\n      let xscale_freq = d3.scaleLinear().domain([-4, 4]) // This needs to be dynamic\n      .range([1 / 10 * this.width, 9 / 10 * this.width]);\n      let yscale_freq = d3.scaleLinear().domain([180, -180]) // This needs to be dynamic\n      .range([1 / 10 * this.height, 9 / 10 * this.height]); // Add scales to axis\n\n      const xAxisTicks = xscale_freq.ticks().filter(tick => Number.isInteger(tick));\n      let x_axis_freq = d3.axisBottom(xscale_freq).tickValues(xAxisTicks).tickFormat(d3.format(\"d\"));\n      let y_axis_freq = d3.axisLeft(yscale_freq);\n      FourierPhaseSvg.append(\"text\").attr(\"text-anchor\", \"middle\").attr(\"x\", this.width / 2).attr(\"y\", this.height / 20).style(\"font-size\", \"16px\").style(\"text-decoration\", \"underline\").text(\"Fourier Phase Plot\");\n      FourierPhaseSvg.append('g').attr(\"id\", \"x_axis_fourierPhasePlot\").attr(\"transform\", \"translate(0,\" + this.height / 2 + \")\").call(x_axis_freq);\n      FourierPhaseSvg.append('g').attr(\"id\", \"y_axis_fourierPhasePlot\").attr(\"transform\", \"translate(\" + this.width / 2 + \",0)\").call(y_axis_freq);\n    }\n\n    return React.createElement(\"svg\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }, circleList);\n  }\n\n}\n\nclass SinePlot extends React.Component {\n  constructor(props) {\n    super(props);\n    this.height = 0;\n    this.width = 0;\n  }\n\n  componentDidMount() {\n    // Only get dimensions when DOM is loaded\n    this.height = document.getElementById(\"sinePlotsID\").getBoundingClientRect().height;\n    this.width = document.getElementById(\"sinePlotsID\").getBoundingClientRect().width;\n  }\n\n  render() {\n    const current = this.props.signals; // Appending svg\n    // Check if the element 'svg_id' exists. If not, create new svg, append and draw it\n    // Not sure if this scales well\n\n    for (let i = 0; i < current.length; i++) {\n      let svgID = 'svg_';\n      let pathID = 'path_';\n      svgID = svgID.concat(i.toString(10));\n      pathID = pathID.concat(i.toString(10));\n      let lineGenerator = d3.line().curve(d3.curveNatural);\n      let pathData = lineGenerator(current[i].values); // Create scale\n\n      let xscale = d3.scaleLinear().domain([0, 2]) // This needs to be dynamic\n      .range([1 / 10 * this.width, 9 / 10 * this.width]);\n      let yscale = d3.scaleLinear().domain([4, -4]) // This needs to be dynamic\n      .range([1 / 10 * this.height, 9 / 10 * this.height]); // Add scales to axis\n\n      let x_axis = d3.axisBottom().scale(xscale);\n      let y_axis = d3.axisLeft().scale(yscale); // For now, if svgID exists, then just redraw\n\n      if (document.getElementById(svgID)) {\n        d3.select(\"#\" + pathID).attr(\"d\", pathData);\n      } // If svgID doesn't exist, then add it to the DOM\n\n\n      if (!document.getElementById(svgID)) {\n        //The SVG Container\n        const svgSinePlot = d3.select(\"#sinePlotsID\").append(\"svg\").attr(\"id\", svgID).attr(\"width\", \"40vw\").attr(\"height\", \"45vh\").attr(\"transform\", \"translate(10)\").attr(\"style\", \"position: absolute\").attr(\"style\", \"border: 1px solid black\").attr(\"top\", \"100px\").attr(\"left\", \"50px\");\n        svgSinePlot.append(\"text\").attr(\"text-anchor\", \"middle\").attr(\"x\", this.width / 2).attr(\"y\", this.height / 20).style(\"font-size\", \"16px\").style(\"text-decoration\", \"underline\").text(\"Sine Plot \" + i); //The line SVG Path we draw\n\n        svgSinePlot.append(\"path\").attr(\"id\", pathID).attr(\"transform\", \"translate(\" + 1 / 10 * this.width + \",0)\").attr(\"d\", pathData).attr(\"stroke\", \"blue\").attr(\"stroke-width\", 2).attr(\"fill\", \"none\");\n        svgSinePlot.append('g').attr(\"transform\", \"translate(0,\" + this.height / 2 + \")\").call(x_axis);\n        svgSinePlot.append('g').attr(\"transform\", \"translate(\" + 1 / 10 * this.width + \",0)\").call(y_axis);\n      }\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520\n      },\n      __self: this\n    });\n  }\n\n}\n\nclass SumPlot extends React.Component {\n  constructor(props) {\n    super(props);\n    this.height = 0;\n    this.width = 0;\n  }\n\n  componentDidMount() {\n    // Only get dimensions when DOM is loaded\n    this.height = document.getElementById(\"svgSumPlot\").getBoundingClientRect().height;\n    this.width = document.getElementById(\"svgSumPlot\").getBoundingClientRect().width;\n  }\n\n  render() {\n    let sumSignals = [];\n    let plotWidth = 0.8 * this.width;\n    console.log(this.height);\n    console.log(this.width); // This will break if we change plotWidth elsewhere \n\n    for (let k = 0; k < plotWidth; k++) {\n      sumSignals.push([0, 0]);\n    } // Looping through all the signals\n\n\n    for (let i = 0; i < this.props.signals.length; i++) {\n      // Looping through the signal values\n      for (let j = 0; j < this.props.signals[i].values.length; j++) {\n        //sumSignals[j] = this.props.signals[i].values[j];\n        sumSignals[j][0] = this.props.signals[i].values[j][0];\n        sumSignals[j][1] += this.props.signals[i].values[j][1];\n      }\n    } // Should scale this to the svg dimenesions rather than hardcoding it with svgContainerHeight\n\n\n    for (let n = 0; n < sumSignals.length; n++) {\n      sumSignals[n][1] = sumSignals[n][1] - (this.props.signals.length - 1) * (this.height / 2);\n    }\n\n    let lineGenerator = d3.line().curve(d3.curveNatural);\n    let pathData = lineGenerator(sumSignals); // Create scale\n\n    let xscale = d3.scaleLinear().domain([0, 2]) // This needs to be dynamic\n    .range([1 / 10 * this.width, 9 / 10 * this.width]);\n    let yscale = d3.scaleLinear().domain([4, -4]) // This needs to be dynamic\n    .range([1 / 10 * this.height, 9 / 10 * this.height]); // Add scales to axis\n\n    let x_axis = d3.axisBottom().scale(xscale);\n    let y_axis = d3.axisLeft().scale(yscale); //The svg line Path we draw\n    // If exists, update\n\n    if (document.getElementById(\"path_Sum\")) {\n      d3.select(\"#\" + \"path_Sum\").attr(\"d\", pathData);\n    } // Draws path if it doesn't exist\n\n\n    if (!document.getElementById(\"path_Sum\")) {\n      d3.select(\"#svgSumPlot\").append(\"path\").attr(\"id\", \"path_Sum\").attr(\"d\", pathData).attr(\"transform\", \"translate(\" + 1 / 10 * this.width + \")\").attr(\"stroke\", \"blue\").attr(\"stroke-width\", 2).attr(\"fill\", \"none\");\n      const svgSumPlot = d3.select(\"#svgSumPlot\");\n      svgSumPlot.append(\"text\").attr(\"text-anchor\", \"middle\").attr(\"x\", this.width / 2).attr(\"y\", this.height / 20).style(\"font-size\", \"16px\").style(\"text-decoration\", \"underline\").text(\"Sum of Signals Plot\");\n      svgSumPlot.append('g').attr(\"transform\", \"translate(0,\" + this.height / 2 + \")\").call(x_axis);\n      svgSumPlot.append('g').attr(\"transform\", \"translate(\" + 1 / 10 * this.width + \",0)\").call(y_axis);\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport class FourierCoefficients extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      signals: [\n        /* Example signal object \r\n        {\r\n            id: 0,\r\n            amplitude: 1,\r\n            frequency: 1,\r\n            values: this.generateSignal(1,1),\r\n            dragging: false,    \r\n        },\r\n        */\n      ],\n      circles: []\n    }; // This binding is necessary to make `this.` work in the callback   \n\n    this.handleMouseDown = this.handleMouseDown.bind(this);\n    this.handleMouseUp = this.handleMouseUp.bind(this);\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n    this.handleMouseMoveFourierMag = this.handleMouseMoveFourierMag.bind(this);\n    this.handleMouseMoveFourierPhase = this.handleMouseMoveFourierPhase.bind(this);\n  }\n\n  addSignal() {\n    const signals = this.state.signals; // Once this.setState has been called, it'll call render() to render straight away\n\n    this.setState({\n      signals: signals.concat([{\n        // Just concatenating array of JSON\n        id: signals.length,\n        amplitude: 0,\n        // Should be user input\n        frequency: signals.length,\n        // Should be user input\n        phase: 0,\n        values: this.generateSignal(0, signals.length, 0),\n        dragging: false\n      }])\n    });\n  }\n\n  removeSignal(i) {\n    // Need to find signal id from the array and delete, then re-update id's\n    const signals = this.state.signals;\n    console.log(\"Hi from removeSignal\");\n    console.log(i);\n    console.log(\"Before: \", signals);\n    signals.splice(i, 1);\n    console.log(\"After:\", signals);\n\n    for (let n = 0; n < this.state.signals.length; n++) {\n      signals[n].id = n;\n    } // Find the svgId and pathID and delete from DOM\n\n\n    let svgID = 'svg_';\n    let pathID = 'path_';\n    svgID = svgID.concat(i.toString(10));\n    pathID = pathID.concat(i.toString(10));\n    d3.select(\"#\" + svgID).remove();\n    this.setState({\n      signals: signals\n    });\n    console.log(this.state.signals);\n  }\n\n  generateSignal(amplitude, frequency, phase) {\n    // Generating path data\n    let points = []; // This assumes that sumPlot and sinePlots have the same dimensions\n\n    const divHeight = document.getElementById(\"svgSumPlot\").getBoundingClientRect().height;\n    const plotWidth = 0.8 * document.getElementById(\"svgSumPlot\").getBoundingClientRect().width;\n    console.log(\"Plot Width\", plotWidth);\n    let scale = -100;\n    let x_offset = 0;\n    let y_offset = 0; // let Fs = 80;\n\n    let Ts = Math.PI / (plotWidth / 4);\n    /* Calculation Reference\r\n    // Assuming the plot is 800x800\r\n    // 1 period = 1 second\r\n    // 1 period = 400 pixels => Ts = 400 samples per second\r\n    // 1 Hz = 2pi radians\r\n      // Sampling frequency = samples/second\r\n    // 1 sample per 1/400 second (Ts = 1/400)\r\n    // Fs = 2pi * (1/400)\r\n    // Fs = pi / 200\r\n      // Frequency is in Hz\r\n    // This is bascially an inverse FFT \r\n    // i is basically our t (1 unit of time)\r\n    */\n\n    for (let i = x_offset; i < plotWidth; i++) {\n      points[i] = [i, scale * amplitude * Math.sin(Ts * frequency * i + phase * (Math.PI / 180)) + (divHeight / 2 + y_offset)];\n    }\n\n    console.log(\"Plot Length\", points.length);\n    return points;\n  }\n\n  generateDC(amplitude) {\n    let points = [];\n    const divHeight = document.getElementById(\"svgSumPlot\").getBoundingClientRect().height;\n    const plotWidth = 0.8 * document.getElementById(\"svgSumPlot\").getBoundingClientRect().width;\n    let scale = -100;\n    let x_offset = 0;\n    let y_offset = 0;\n\n    for (let i = x_offset; i < plotWidth; i++) {\n      points[i] = [i, scale * amplitude + (divHeight / 2 + y_offset)];\n    }\n\n    return points;\n  }\n\n  updateDials() {\n    const signals = this.state.signals;\n\n    for (let i = 0; i < signals.length; i++) {\n      document.getElementById(\"signal\" + signals[i].id + \"_AmpText\").value = signals[i].amplitude;\n      document.getElementById(\"signal\" + signals[i].id + \"_FreqText\").value = signals[i].frequency;\n    }\n  }\n\n  handleChange(event) {\n    const signals = this.state.signals;\n    const inputType = event.target.getAttribute('input_type');\n    const signalID = event.target.getAttribute('signal_id'); // Signal ID Number\n\n    let value = parseFloat(event.target.value); // Text Form can currently exceed the maximum limit of 10, should limit?\n\n    if (inputType === \"AmpDial\" || inputType === \"AmpText\") {\n      if (isNaN(value)) {\n        value = 0;\n      } else {\n        // DC Case\n        if (signalID == 0) {\n          signals[signalID].amplitude = value;\n          signals[signalID].values = this.generateDC(signals[signalID].amplitude);\n          document.getElementById(\"signal\" + signalID + \"_AmpText\").value = value;\n        } // All Other cases\n        else {\n            signals[signalID].amplitude = value;\n            signals[signalID].values = this.generateSignal(signals[signalID].amplitude, signals[signalID].frequency, signals[signalID].phase);\n            document.getElementById(\"signal\" + signalID + \"_AmpText\").value = value;\n          }\n      }\n    } else if (inputType === \"PhaseDial\" || inputType === \"PhaseText\") {\n      console.log(\"HELLO\");\n      console.log(signals[signalID].amplitude);\n      console.log(signals[signalID].phase);\n\n      if (isNaN(value)) {\n        value = 0;\n      } else {\n        // DC Case\n        if (signalID == 0) {\n          signals[signalID].phase = value;\n          signals[signalID].values = this.generateDC(signals[signalID].amplitude);\n          document.getElementById(\"signal\" + signalID + \"_PhaseText\").value = value;\n        } // All Other cases\n        else {\n            signals[signalID].phase = value;\n            signals[signalID].values = this.generateSignal(signals[signalID].amplitude, signals[signalID].frequency, signals[signalID].phase);\n            document.getElementById(\"signal\" + signalID + \"_PhaseText\").value = value;\n          }\n      }\n    }\n\n    this.setState({\n      signals: signals\n    });\n  }\n\n  handleMouseDown(e) {\n    console.log(\"clicked\");\n    e.preventDefault();\n    const signals = this.state.signals;\n    const signalID = e.target.getAttribute('signal_id'); // Signal ID Number\n\n    signals[signalID].dragging = true;\n    this.setState({\n      signals: signals\n    });\n  }\n\n  handleMouseUp(e) {\n    console.log(\"click released\");\n    const signals = this.state.signals;\n    const signalID = e.target.getAttribute('signal_id'); // Signal ID Number\n\n    console.log(e.type);\n\n    if (e.type == 'mouseout' && signals[signalID].dragging) {\n      console.log(\"mouse went out\");\n      return;\n    }\n\n    signals[signalID].dragging = false;\n    this.setState({\n      signals: signals\n    });\n  } // Base Mouse move function. Used in Frequency Domain. Not currently in use in this .js file\n\n\n  handleMouseMove(e) {\n    const signals = this.state.signals;\n    const signalID = e.target.getAttribute('signal_id'); // Signal ID Number\n    //If we are dragging\n\n    if (signals[signalID].dragging) {\n      e.preventDefault();\n      console.log(e);\n      console.log(e.target);\n      console.log(\"clientX:\", e.clientX);\n      console.log(\"clientY:\", e.clientY); // console.log(e.target.parentNode.parentNode)\n\n      let rect = e.target.parentNode.parentNode.getBoundingClientRect();\n      console.log(rect.left);\n      console.log(rect.top); // Maybe should seperate coordinates and freq/amp values\n\n      signals[signalID].frequency = (e.clientX - rect.left - 400) / 100;\n      signals[signalID].amplitude = -(e.clientY - rect.top - 400) / 100;\n      signals[signalID].values = this.generateSignal(signals[signalID].amplitude, signals[signalID].frequency, signals[signalID].phase); // We should set position limits\n\n      console.log(signals[signalID].frequency);\n      console.log(signals[signalID].amplitude);\n      console.log(this);\n      this.setState({\n        signals: signals\n      });\n    }\n  }\n\n  handleMouseMoveFourierMag(e) {\n    const signals = this.state.signals;\n    const signalID = e.target.getAttribute('signal_id'); // Signal ID Number\n    //If we are dragging\n\n    if (signals[signalID].dragging) {\n      e.preventDefault();\n      console.log(e.target);\n      let rect = e.target.parentNode.parentNode.getBoundingClientRect();\n      let divHeight = document.getElementById(\"fourierMagPlotsID\").getBoundingClientRect().height;\n      let divWidth = document.getElementById(\"fourierMagPlotsID\").getBoundingClientRect().width;\n      let plotHeight = 0.8 * divHeight;\n      let plotWidth = 0.8 * divWidth; // Maybe should seperate coordinates and freq/amp values\n\n      signals[signalID].frequency = signals[signalID].id;\n      signals[signalID].amplitude = -(e.clientY - rect.top - divHeight / 2) / (divHeight / 8); // 800: svg height, 8: max axis size (-4 to 4)\n\n      signals[signalID].values = this.generateSignal(signals[signalID].amplitude, signals[signalID].frequency, signals[signalID].phase); // We should set position limits\n      // Checking if signal is the DC value\n\n      if (signalID == 0) {\n        signals[signalID].values = this.generateDC(signals[signalID].amplitude);\n      }\n\n      this.setState({\n        signals: signals\n      });\n    }\n  }\n\n  handleMouseMoveFourierPhase(e) {\n    const signals = this.state.signals;\n    const signalID = e.target.getAttribute('signal_id'); // Signal ID Number\n\n    console.log(\"signalID: \", signalID); //If we are dragging\n\n    if (signals[signalID].dragging) {\n      e.preventDefault();\n      console.log(e.target);\n      let rect = e.target.parentNode.parentNode.getBoundingClientRect();\n      let divHeight = document.getElementById(\"fourierPhasePlotsID\").getBoundingClientRect().height;\n      let divWidth = document.getElementById(\"fourierPhasePlotsID\").getBoundingClientRect().width;\n      let plotHeight = 0.8 * divHeight;\n      let plotWidth = 0.8 * divWidth; // Maybe should seperate coordinates and freq/amp values\n\n      signals[signalID].frequency = signals[signalID].id;\n      signals[signalID].phase = parseInt(-(e.clientY - rect.top - divHeight / 2) / (plotHeight / 360));\n      signals[signalID].values = this.generateSignal(signals[signalID].amplitude, signals[signalID].frequency, signals[signalID].phase); // We should set position limits\n      // Checking if signal is the DC value\n\n      if (signalID == 0) {\n        signals[signalID].values = this.generateDC(signals[signalID].amplitude);\n      }\n\n      this.setState({\n        signals: signals\n      });\n    }\n  }\n\n  render() {\n    const current = this.state.signals;\n    return React.createElement(\"div\", {\n      className: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 990\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.timePlots,\n      id: \"timePlotsID\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 992\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.sinePlots,\n      id: \"sinePlotsID\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 993\n      },\n      __self: this\n    }, React.createElement(SinePlot, {\n      signals: current,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 994\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: styles.sumPlots,\n      id: \"sumPlotsID\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 998\n      },\n      __self: this\n    }, React.createElement(\"svg\", {\n      id: \"svgSumPlot\",\n      width: \"40vw\",\n      height: \"45vh\",\n      style: {\n        position: \"relative\",\n        top: \"0%\",\n        left: \"0%\",\n        transform: \"translate(0%, 0%)\",\n        border: '1px solid black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 999\n      },\n      __self: this\n    }, React.createElement(SumPlot, {\n      signals: current,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1007\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: styles.otherPlots,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1014\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.fourierPhasePlots,\n      id: \"fourierPhasePlotsID\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1015\n      },\n      __self: this\n    }, React.createElement(\"svg\", {\n      id: \"svgFourierPhasePlot\",\n      width: \"40vw\",\n      height: \"45vh\",\n      style: {\n        position: \"relative\",\n        top: \"0%\",\n        left: \"0%\",\n        transform: \"translate(0%, 0%)\",\n        border: '1px solid black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1016\n      },\n      __self: this\n    }, React.createElement(FourierPhasePlot, {\n      signals: current,\n      onMouseDown: event => this.handleMouseDown(event),\n      onMouseUp: event => this.handleMouseUp(event),\n      onMouseOut: event => this.handleMouseUp(event),\n      onMouseMove: event => this.handleMouseMoveFourierPhase(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1026\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: styles.fourierMagPlots,\n      id: \"fourierMagPlotsID\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1036\n      },\n      __self: this\n    }, React.createElement(\"svg\", {\n      id: \"svgFourierMagPlot\",\n      width: \"40vw\",\n      height: \"45vh\",\n      style: {\n        position: \"relative\",\n        top: \"0%\",\n        left: \"0%\",\n        transform: \"translate(0%, 0%)\",\n        border: '1px solid black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1037\n      },\n      __self: this\n    }, React.createElement(FourierMagPlot, {\n      signals: current,\n      onMouseDown: event => this.handleMouseDown(event),\n      onMouseUp: event => this.handleMouseUp(event),\n      onMouseOut: event => this.handleMouseUp(event),\n      onMouseMove: event => this.handleMouseMoveFourierMag(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1047\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: styles.controls,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1058\n      },\n      __self: this\n    }, React.createElement(Controls, {\n      signals: current,\n      onChange: event => this.handleChange(event),\n      onAdd: () => this.addSignal(),\n      onRemove: i => this.removeSignal(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1060\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/bunny/Documents/GitHub/signals-web-app/src/FourierCoefficients.js"],"names":["React","Component","ReactDOM","styles","d3","Dials","props","signal_container","signal_info","signal","id","i","onRemove","signal_props","amplitude","onChange","phase","Controls","renderDial","event","render","signalList","signals","length","push","dials","onAdd","FourierCirclesMagPos","divHeight","document","getElementById","getBoundingClientRect","height","divWidth","width","plotHeight","plotWidth","onMouseDown","onMouseUp","onMouseMove","FourierCirclesMagNeg","FourierCirclesPhasePos","FourierCirclesPhaseNeg","FourierMagPlot","constructor","componentDidMount","renderCirclePos","renderCircleNeg","FourierMagSvg","select","radius","circleList","xscale_freq","scaleLinear","domain","range","yscale_freq","xAxisTicks","ticks","filter","tick","Number","isInteger","x_axis_freq","axisBottom","tickValues","tickFormat","format","y_axis_freq","axisLeft","append","attr","style","text","call","FourierPhasePlot","FourierPhaseSvg","SinePlot","current","svgID","pathID","concat","toString","lineGenerator","line","curve","curveNatural","pathData","values","xscale","yscale","x_axis","scale","y_axis","svgSinePlot","SumPlot","sumSignals","console","log","k","j","n","svgSumPlot","FourierCoefficients","state","circles","handleMouseDown","bind","handleMouseUp","handleMouseMove","handleMouseMoveFourierMag","handleMouseMoveFourierPhase","addSignal","setState","frequency","generateSignal","dragging","removeSignal","splice","remove","points","x_offset","y_offset","Ts","Math","PI","sin","generateDC","updateDials","value","handleChange","inputType","target","getAttribute","signalID","parseFloat","isNaN","e","preventDefault","type","clientX","clientY","rect","parentNode","left","top","parseInt","container","timePlots","sinePlots","sumPlots","position","transform","border","otherPlots","fourierPhasePlots","fourierMagPlots","controls"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,MAAP,MAAmB,kCAAnB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAClB,SACI;AAAK,IAAA,SAAS,EAAEH,MAAM,CAACI,gBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAEJ,MAAM,CAACK,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAUF,KAAK,CAACG,MAAN,CAAaC,EAAvB,CADJ,EAEI;AAAQ,IAAA,EAAE,EAAG,eAAb;AAA6B,IAAA,OAAO,EAAGC,CAAD,IAAOL,KAAK,CAACM,QAAN,CAAeN,KAAK,CAACG,MAAN,CAAaC,EAA5B,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFJ,CADJ,EAKI;AAAK,IAAA,SAAS,EAAEP,MAAM,CAACU,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAiBP,KAAK,CAACG,MAAN,CAAaK,SAA9B,CADJ,CALJ,EAQI;AAAK,IAAA,SAAS,EAAIX,MAAM,CAACU,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACA,IAAA,EAAE,EAAI,WAAWP,KAAK,CAACG,MAAN,CAAaC,EAAxB,GAA6B,UADnC;AAEA,IAAA,SAAS,EAAIJ,KAAK,CAACG,MAAN,CAAaC,EAF1B;AAGA,IAAA,UAAU,EAAI,SAHd;AAIA,IAAA,IAAI,EAAE,OAJN;AAKA,IAAA,GAAG,EAAE,CAAC,CALN;AAMA,IAAA,GAAG,EAAG,CANN;AAOA,IAAA,KAAK,EAAIJ,KAAK,CAACG,MAAN,CAAaK,SAPtB;AAQA,IAAA,IAAI,EAAE,GARN;AASA,IAAA,QAAQ,EAAER,KAAK,CAACS,QAThB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAYI;AACA,IAAA,EAAE,EAAI,WAAWT,KAAK,CAACG,MAAN,CAAaC,EAAxB,GAA6B,UADnC;AAEA,IAAA,SAAS,EAAIJ,KAAK,CAACG,MAAN,CAAaC,EAF1B;AAGA,IAAA,UAAU,EAAI,SAHd;AAIA,IAAA,IAAI,EAAG,QAJP;AAKA,IAAA,GAAG,EAAI,CAAC,CALR;AAMA,IAAA,GAAG,EAAI,CANP;AAOA,IAAA,QAAQ,EAAEJ,KAAK,CAACS,QAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,CADJ,CARJ,EAkCI;AAAK,IAAA,SAAS,EAAEZ,MAAM,CAACU,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAaP,KAAK,CAACG,MAAN,CAAaO,KAA1B,CADJ,CAlCJ,EAqCI;AAAK,IAAA,SAAS,EAAEb,MAAM,CAACU,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,EAAE,EAAI,WAAWP,KAAK,CAACG,MAAN,CAAaC,EAAxB,GAA6B,YADvC;AAEI,IAAA,SAAS,EAAIJ,KAAK,CAACG,MAAN,CAAaC,EAF9B;AAGI,IAAA,UAAU,EAAI,WAHlB;AAII,IAAA,IAAI,EAAE,OAJV;AAKI,IAAA,GAAG,EAAE,CAAC,GALV;AAMI,IAAA,GAAG,EAAG,GANV;AAOI,IAAA,KAAK,EAAIJ,KAAK,CAACG,MAAN,CAAaO,KAP1B;AAQI,IAAA,IAAI,EAAE,CARV;AASI,IAAA,QAAQ,EAAEV,KAAK,CAACS,QATpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAYI;AACI,IAAA,EAAE,EAAI,WAAWT,KAAK,CAACG,MAAN,CAAaC,EAAxB,GAA6B,YADvC;AAEI,IAAA,SAAS,EAAIJ,KAAK,CAACG,MAAN,CAAaC,EAF9B;AAGI,IAAA,UAAU,EAAI,WAHlB;AAII,IAAA,IAAI,EAAG,QAJX;AAKI,IAAA,GAAG,EAAI,CAAC,GALZ;AAMI,IAAA,GAAG,EAAI,GANX;AAOI,IAAA,QAAQ,EAAEJ,KAAK,CAACS,QAPpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,CADJ,CArCJ,CADJ;AAgEH;;AAED,MAAME,QAAN,SAAuBjB,KAAK,CAACC,SAA7B,CAAuC;AAEnCiB,EAAAA,UAAU,CAACT,MAAD,EAAQ;AACd,WACI,oBAAC,KAAD;AACI,MAAA,MAAM,EAAIA,MADd;AAEI,MAAA,QAAQ,EAAKU,KAAD,IAAW,KAAKb,KAAL,CAAWS,QAAX,CAAoBI,KAApB,CAF3B;AAGI,MAAA,QAAQ,EAAKR,CAAD,IAAO,KAAKL,KAAL,CAAWM,QAAX,CAAoBD,CAApB,CAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAOH;;AAEDS,EAAAA,MAAM,GAAE;AACJ,UAAMC,UAAU,GAAG,EAAnB;;AACA,SAAK,IAAIV,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAG,KAAKL,KAAL,CAAWgB,OAAX,CAAmBC,MAArC,EAA6CZ,CAAC,EAA9C,EAAiD;AAC7CU,MAAAA,UAAU,CAACG,IAAX,CACI;AAAK,QAAA,GAAG,EAAE,WAAW,KAAKlB,KAAL,CAAWgB,OAAX,CAAmBX,CAAnB,EAAsBD,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKQ,UAAL,CAAgB,KAAKZ,KAAL,CAAWgB,OAAX,CAAmBX,CAAnB,CAAhB,CADL,CADJ;AAKH;;AACD,WACI;AAAK,MAAA,SAAS,EAAIR,MAAM,CAACsB,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,EAAE,EAAG,YAAb;AAA0B,uBAAgB,QAA1C;AAAmD,MAAA,OAAO,EAAE,MAAM,KAAKnB,KAAL,CAAWoB,KAAX,EAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEKL,UAFL,CADJ;AAMH;;AA3BkC;;AA8BvC,SAASM,oBAAT,CAA8BrB,KAA9B,EAAqC;AACjC,MAAIsB,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,mBAAxB,EAA6CC,qBAA7C,GAAqEC,MAArF;AACA,MAAIC,QAAQ,GAAGJ,QAAQ,CAACC,cAAT,CAAwB,mBAAxB,EAA6CC,qBAA7C,GAAqEG,KAApF;AACA,MAAIC,UAAU,GAAG,MAAIP,SAArB;AACA,MAAIQ,SAAS,GAAG,MAAIH,QAApB;AAEA,SACI;AACI,IAAA,EAAE,EAAI,YAAU3B,KAAK,CAACG,MAAN,CAAaC,EADjC;AAEI,IAAA,SAAS,EAAIJ,KAAK,CAACG,MAAN,CAAaC,EAF9B;AAGI,IAAA,EAAE,EAAKJ,KAAK,CAACG,MAAN,CAAaC,EAAd,IAAmB0B,SAAS,GAAC,CAA7B,CAHV;AAII,IAAA,EAAE,EAAK9B,KAAK,CAACG,MAAN,CAAaK,SAAd,IAA0Bc,SAAS,GAAC,CAApC,CAJV;AAKI,IAAA,SAAS,EAAE,eAAeK,QAAQ,GAAC,CAAxB,GAA2B,GAA3B,GAAiCL,SAAS,GAAC,CAA3C,GAA8C,eAL7D;AAMI,IAAA,CAAC,EAAI,EANT;AAOI,IAAA,IAAI,EAAG,OAPX;AAQI,IAAA,MAAM,EAAG,OARb;AASI,IAAA,WAAW,EAAC,GAThB;AAUI,IAAA,WAAW,EAAEtB,KAAK,CAAC+B,WAVvB;AAWI,IAAA,SAAS,EAAE/B,KAAK,CAACgC,SAXrB;AAYI,IAAA,UAAU,EAAEhC,KAAK,CAACgC,SAZtB;AAaI,IAAA,WAAW,EAAEhC,KAAK,CAACiC,WAbvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAiBH;;AAED,SAASC,oBAAT,CAA8BlC,KAA9B,EAAqC;AACjC,MAAIsB,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,mBAAxB,EAA6CC,qBAA7C,GAAqEC,MAArF;AACA,MAAIC,QAAQ,GAAGJ,QAAQ,CAACC,cAAT,CAAwB,mBAAxB,EAA6CC,qBAA7C,GAAqEG,KAApF;AACA,MAAIE,SAAS,GAAG,MAAIH,QAApB;AAEA,SACI;AACI,IAAA,EAAE,EAAI,aAAW3B,KAAK,CAACG,MAAN,CAAaC,EADlC;AAEI,IAAA,SAAS,EAAIJ,KAAK,CAACG,MAAN,CAAaC,EAF9B;AAGI,IAAA,EAAE,EAAKJ,KAAK,CAACG,MAAN,CAAaC,EAAd,GAAkB,EAAE0B,SAAS,GAAC,CAAZ,CAH5B,CAG4C;AAH5C;AAII,IAAA,EAAE,EAAK9B,KAAK,CAACG,MAAN,CAAaK,SAAd,IAA0Bc,SAAS,GAAC,CAApC,CAJV;AAKI,IAAA,SAAS,EAAE,eAAeK,QAAQ,GAAC,CAAxB,GAA2B,GAA3B,GAAiCL,SAAS,GAAC,CAA3C,GAA8C,eAL7D;AAMI,IAAA,CAAC,EAAI,EANT;AAOI,IAAA,IAAI,EAAG,OAPX;AAQI,IAAA,MAAM,EAAG,OARb;AASI,IAAA,WAAW,EAAC,GAThB;AAUI,IAAA,WAAW,EAAEtB,KAAK,CAAC+B,WAVvB;AAWI,IAAA,SAAS,EAAE/B,KAAK,CAACgC,SAXrB;AAYI,IAAA,UAAU,EAAEhC,KAAK,CAACgC,SAZtB;AAaI,IAAA,WAAW,EAAEhC,KAAK,CAACiC,WAbvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAiBH;;AAED,SAASE,sBAAT,CAAgCnC,KAAhC,EAAuC;AACnC,MAAIsB,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,qBAAxB,EAA+CC,qBAA/C,GAAuEC,MAAvF;AACA,MAAIC,QAAQ,GAAGJ,QAAQ,CAACC,cAAT,CAAwB,qBAAxB,EAA+CC,qBAA/C,GAAuEG,KAAtF;AACA,MAAIC,UAAU,GAAG,MAAIP,SAArB;AACA,MAAIQ,SAAS,GAAG,MAAIH,QAApB;AAEA,SACI;AACI,IAAA,EAAE,EAAI,YAAU3B,KAAK,CAACG,MAAN,CAAaC,EADjC;AAEI,IAAA,SAAS,EAAIJ,KAAK,CAACG,MAAN,CAAaC,EAF9B;AAGI,IAAA,EAAE,EAAKJ,KAAK,CAACG,MAAN,CAAaC,EAAd,IAAmB0B,SAAS,GAAC,CAA7B,CAHV,CAG2C;AAH3C;AAII,IAAA,EAAE,EAAK9B,KAAK,CAACG,MAAN,CAAaO,KAAd,IAAsBmB,UAAU,GAAC,GAAjC,CAJV;AAKI,IAAA,SAAS,EAAE,eAAeF,QAAQ,GAAC,CAAxB,GAA2B,GAA3B,GAAiCL,SAAS,GAAC,CAA3C,GAA8C,eAL7D;AAMI,IAAA,CAAC,EAAI,EANT;AAOI,IAAA,IAAI,EAAG,OAPX;AAQI,IAAA,MAAM,EAAG,OARb;AASI,IAAA,WAAW,EAAC,GAThB;AAUI,IAAA,WAAW,EAAEtB,KAAK,CAAC+B,WAVvB;AAWI,IAAA,SAAS,EAAE/B,KAAK,CAACgC,SAXrB;AAYI,IAAA,UAAU,EAAEhC,KAAK,CAACgC,SAZtB;AAaI,IAAA,WAAW,EAAEhC,KAAK,CAACiC,WAbvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAiBH;;AAED,SAASG,sBAAT,CAAgCpC,KAAhC,EAAuC;AACnC,MAAIsB,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,qBAAxB,EAA+CC,qBAA/C,GAAuEC,MAAvF;AACA,MAAIC,QAAQ,GAAGJ,QAAQ,CAACC,cAAT,CAAwB,qBAAxB,EAA+CC,qBAA/C,GAAuEG,KAAtF;AACA,MAAIC,UAAU,GAAG,MAAIP,SAArB;AACA,MAAIQ,SAAS,GAAG,MAAIH,QAApB;AAEA,SACI;AACI,IAAA,EAAE,EAAI,aAAW3B,KAAK,CAACG,MAAN,CAAaC,EADlC;AAEI,IAAA,SAAS,EAAIJ,KAAK,CAACG,MAAN,CAAaC,EAF9B;AAGI,IAAA,EAAE,EAAKJ,KAAK,CAACG,MAAN,CAAaC,EAAd,GAAkB,EAAE0B,SAAS,GAAC,CAAZ,CAH5B,CAG4C;AAH5C;AAII,IAAA,EAAE,EAAK9B,KAAK,CAACG,MAAN,CAAaO,KAAd,IAAsBmB,UAAU,GAAC,GAAjC,CAJV;AAKI,IAAA,SAAS,EAAE,eAAeF,QAAQ,GAAC,CAAxB,GAA2B,GAA3B,GAAiCL,SAAS,GAAC,CAA3C,GAA8C,eAL7D;AAMI,IAAA,CAAC,EAAI,EANT;AAOI,IAAA,IAAI,EAAG,OAPX;AAQI,IAAA,MAAM,EAAG,OARb;AASI,IAAA,WAAW,EAAC,GAThB;AAUI,IAAA,WAAW,EAAEtB,KAAK,CAAC+B,WAVvB;AAWI,IAAA,SAAS,EAAE/B,KAAK,CAACgC,SAXrB;AAYI,IAAA,UAAU,EAAEhC,KAAK,CAACgC,SAZtB;AAaI,IAAA,WAAW,EAAEhC,KAAK,CAACiC,WAbvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAiBH;;AAED,MAAMI,cAAN,SAA6B3C,KAAK,CAACC,SAAnC,CAA6C;AACzC2C,EAAAA,WAAW,CAACtC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAK0B,MAAL,GAAc,CAAd;AACA,SAAKE,KAAL,GAAa,CAAb;AACH;;AAEDW,EAAAA,iBAAiB,GAAE;AACf;AACA,SAAKb,MAAL,GAAcH,QAAQ,CAACC,cAAT,CAAwB,mBAAxB,EAA6CC,qBAA7C,GAAqEC,MAAnF;AACA,SAAKE,KAAL,GAAaL,QAAQ,CAACC,cAAT,CAAwB,mBAAxB,EAA6CC,qBAA7C,GAAqEG,KAAlF;AACH;;AAEDY,EAAAA,eAAe,CAACrC,MAAD,EAAQ;AACnB,WACI,oBAAC,oBAAD;AACI,MAAA,MAAM,EAAIA,MADd;AAEI,MAAA,WAAW,EAAKU,KAAD,IAAW,KAAKb,KAAL,CAAW+B,WAAX,CAAuBlB,KAAvB,CAF9B;AAGI,MAAA,SAAS,EAAKA,KAAD,IAAW,KAAKb,KAAL,CAAWgC,SAAX,CAAqBnB,KAArB,CAH5B;AAII,MAAA,UAAU,EAAKA,KAAD,IAAW,KAAKb,KAAL,CAAWgC,SAAX,CAAqBnB,KAArB,CAJ7B;AAKI,MAAA,WAAW,EAAKA,KAAD,IAAW,KAAKb,KAAL,CAAWiC,WAAX,CAAuBpB,KAAvB,CAL9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AASH;;AAED4B,EAAAA,eAAe,CAACtC,MAAD,EAAQ;AACnB,WACI,oBAAC,oBAAD;AACI,MAAA,MAAM,EAAIA,MADd;AAEI,MAAA,WAAW,EAAKU,KAAD,IAAW,KAAKb,KAAL,CAAW+B,WAAX,CAAuBlB,KAAvB,CAF9B;AAGI,MAAA,SAAS,EAAKA,KAAD,IAAW,KAAKb,KAAL,CAAWgC,SAAX,CAAqBnB,KAArB,CAH5B;AAII,MAAA,UAAU,EAAKA,KAAD,IAAW,KAAKb,KAAL,CAAWgC,SAAX,CAAqBnB,KAArB,CAJ7B;AAKI,MAAA,WAAW,EAAKA,KAAD,IAAW,KAAKb,KAAL,CAAWiC,WAAX,CAAuBpB,KAAvB,CAL9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AASH;;AAEDC,EAAAA,MAAM,GAAE;AAEJ,UAAME,OAAO,GAAG,KAAKhB,KAAL,CAAWgB,OAA3B;AAEG,QAAI0B,aAAa,GAAG5C,EAAE,CAAC6C,MAAH,CAAU,oBAAV,CAApB;AACA,QAAIC,MAAM,GAAG,EAAb;AAEA,UAAMC,UAAU,GAAG,EAAnB;;AAGA,SAAK,IAAIxC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAG,KAAKL,KAAL,CAAWgB,OAAX,CAAmBC,MAArC,EAA6CZ,CAAC,EAA9C,EAAiD;AAC5C,UAAGA,CAAC,IAAG,CAAP,EAAS;AACLwC,QAAAA,UAAU,CAAC3B,IAAX,CACI,KAAKsB,eAAL,CAAqB,KAAKxC,KAAL,CAAWgB,OAAX,CAAmBX,CAAnB,CAArB,CADJ;AAGH,OAJD,MAKI;AACAwC,QAAAA,UAAU,CAAC3B,IAAX,CACI,KAAKsB,eAAL,CAAqB,KAAKxC,KAAL,CAAWgB,OAAX,CAAmBX,CAAnB,CAArB,CADJ,EAEI,KAAKoC,eAAL,CAAqB,KAAKzC,KAAL,CAAWgB,OAAX,CAAmBX,CAAnB,CAArB,CAFJ;AAIH;AACL,KAtBA,CAwBD;;;AACA,QAAG,CAACkB,QAAQ,CAACC,cAAT,CAAwB,uBAAxB,CAAJ,EAAqD;AAEjD;AACA,UAAIsB,WAAW,GAAGhD,EAAE,CAACiD,WAAH,GACTC,MADS,CACF,CAAC,CAAC,CAAF,EAAK,CAAL,CADE,EACO;AADP,OAETC,KAFS,CAEH,CAAG,IAAE,EAAH,GAAO,KAAKrB,KAAd,EAAsB,IAAE,EAAH,GAAO,KAAKA,KAAjC,CAFG,CAAlB;AAIA,UAAIsB,WAAW,GAAGpD,EAAE,CAACiD,WAAH,GACTC,MADS,CACF,CAAC,CAAD,EAAG,CAAC,CAAJ,CADE,EACM;AADN,OAETC,KAFS,CAEH,CAAG,IAAE,EAAH,GAAO,KAAKvB,MAAd,EAAuB,IAAE,EAAH,GAAO,KAAKA,MAAlC,CAFG,CAAlB,CAPiD,CAWjD;;AACA,YAAMyB,UAAU,GAAGL,WAAW,CAACM,KAAZ,GACOC,MADP,CACcC,IAAI,IAAIC,MAAM,CAACC,SAAP,CAAiBF,IAAjB,CADtB,CAAnB;AAGA,UAAIG,WAAW,GAAG3D,EAAE,CAAC4D,UAAH,CAAcZ,WAAd,EAChBa,UADgB,CACLR,UADK,EAEhBS,UAFgB,CAEL9D,EAAE,CAAC+D,MAAH,CAAU,GAAV,CAFK,CAAlB;AAIA,UAAIC,WAAW,GAAGhE,EAAE,CAACiE,QAAH,CAAYb,WAAZ,CAAlB;AAEAR,MAAAA,aAAa,CAACsB,MAAd,CAAqB,MAArB,EACcC,IADd,CACmB,aADnB,EACkC,QADlC,EAEcA,IAFd,CAEmB,GAFnB,EAEuB,KAAKrC,KAAL,GAAW,CAFlC,EAGcqC,IAHd,CAGmB,GAHnB,EAGuB,KAAKvC,MAAL,GAAY,EAHnC,EAIcwC,KAJd,CAIoB,WAJpB,EAIiC,MAJjC,EAKcA,KALd,CAKoB,iBALpB,EAKuC,WALvC,EAMcC,IANd,CAMmB,wBANnB;AAQAzB,MAAAA,aAAa,CAACsB,MAAd,CAAqB,GAArB,EACcC,IADd,CACmB,IADnB,EACwB,uBADxB,EAEcA,IAFd,CAEmB,WAFnB,EAE+B,iBAAiB,KAAKvC,MAAL,GAAY,CAA7B,GAAiC,GAFhE,EAGc0C,IAHd,CAGmBX,WAHnB;AAKAf,MAAAA,aAAa,CAACsB,MAAd,CAAqB,GAArB,EACcC,IADd,CACmB,IADnB,EACwB,uBADxB,EAEcA,IAFd,CAEmB,WAFnB,EAE+B,eAAe,KAAKrC,KAAL,GAAW,CAA1B,GAA8B,KAF7D,EAGcwC,IAHd,CAGmBN,WAHnB;AAIH;;AAED,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIjB,UADJ,CADJ;AAKH;;AA3GqC;;AA8G7C,MAAMwB,gBAAN,SAA+B3E,KAAK,CAACC,SAArC,CAA+C;AAC3C2C,EAAAA,WAAW,CAACtC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAK0B,MAAL,GAAc,CAAd;AACA,SAAKE,KAAL,GAAa,CAAb;AACH;;AAEDW,EAAAA,iBAAiB,GAAE;AACf;AACA,SAAKb,MAAL,GAAcH,QAAQ,CAACC,cAAT,CAAwB,qBAAxB,EAA+CC,qBAA/C,GAAuEC,MAArF;AACA,SAAKE,KAAL,GAAaL,QAAQ,CAACC,cAAT,CAAwB,qBAAxB,EAA+CC,qBAA/C,GAAuEG,KAApF;AACH;;AAEDY,EAAAA,eAAe,CAACrC,MAAD,EAAQ;AACnB,WACI,oBAAC,sBAAD;AACI,MAAA,MAAM,EAAIA,MADd;AAEI,MAAA,WAAW,EAAKU,KAAD,IAAW,KAAKb,KAAL,CAAW+B,WAAX,CAAuBlB,KAAvB,CAF9B;AAGI,MAAA,SAAS,EAAKA,KAAD,IAAW,KAAKb,KAAL,CAAWgC,SAAX,CAAqBnB,KAArB,CAH5B;AAII,MAAA,UAAU,EAAKA,KAAD,IAAW,KAAKb,KAAL,CAAWgC,SAAX,CAAqBnB,KAArB,CAJ7B;AAKI,MAAA,WAAW,EAAKA,KAAD,IAAW,KAAKb,KAAL,CAAWiC,WAAX,CAAuBpB,KAAvB,CAL9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AASH;;AAED4B,EAAAA,eAAe,CAACtC,MAAD,EAAQ;AACnB,WACI,oBAAC,sBAAD;AACI,MAAA,MAAM,EAAIA,MADd;AAEI,MAAA,WAAW,EAAKU,KAAD,IAAW,KAAKb,KAAL,CAAW+B,WAAX,CAAuBlB,KAAvB,CAF9B;AAGI,MAAA,SAAS,EAAKA,KAAD,IAAW,KAAKb,KAAL,CAAWgC,SAAX,CAAqBnB,KAArB,CAH5B;AAII,MAAA,UAAU,EAAKA,KAAD,IAAW,KAAKb,KAAL,CAAWgC,SAAX,CAAqBnB,KAArB,CAJ7B;AAKI,MAAA,WAAW,EAAKA,KAAD,IAAW,KAAKb,KAAL,CAAWiC,WAAX,CAAuBpB,KAAvB,CAL9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AASH;;AAEDC,EAAAA,MAAM,GAAE;AAEJ,UAAME,OAAO,GAAG,KAAKhB,KAAL,CAAWgB,OAA3B;AAEG,QAAIsD,eAAe,GAAGxE,EAAE,CAAC6C,MAAH,CAAU,sBAAV,CAAtB;AACA,QAAIC,MAAM,GAAG,EAAb;AAEA,UAAMC,UAAU,GAAG,EAAnB;;AAIA,SAAK,IAAIxC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAG,KAAKL,KAAL,CAAWgB,OAAX,CAAmBC,MAArC,EAA6CZ,CAAC,EAA9C,EAAiD;AAE5C,UAAGA,CAAC,IAAG,CAAP,EAAS;AACLwC,QAAAA,UAAU,CAAC3B,IAAX,CACI,KAAKsB,eAAL,CAAqB,KAAKxC,KAAL,CAAWgB,OAAX,CAAmBX,CAAnB,CAArB,CADJ;AAGH,OAJD,MAKI;AACAwC,QAAAA,UAAU,CAAC3B,IAAX,CACI,KAAKsB,eAAL,CAAqB,KAAKxC,KAAL,CAAWgB,OAAX,CAAmBX,CAAnB,CAArB,CADJ,EAEI,KAAKoC,eAAL,CAAqB,KAAKzC,KAAL,CAAWgB,OAAX,CAAmBX,CAAnB,CAArB,CAFJ;AAIH;AAEL,KAzBA,CA2BD;;;AACA,QAAG,CAACkB,QAAQ,CAACC,cAAT,CAAwB,yBAAxB,CAAJ,EAAuD;AAEnD;AACA,UAAIsB,WAAW,GAAGhD,EAAE,CAACiD,WAAH,GACTC,MADS,CACF,CAAC,CAAC,CAAF,EAAK,CAAL,CADE,EACO;AADP,OAETC,KAFS,CAEH,CAAG,IAAE,EAAH,GAAO,KAAKrB,KAAd,EAAsB,IAAE,EAAH,GAAO,KAAKA,KAAjC,CAFG,CAAlB;AAIA,UAAIsB,WAAW,GAAGpD,EAAE,CAACiD,WAAH,GACTC,MADS,CACF,CAAC,GAAD,EAAK,CAAC,GAAN,CADE,EACU;AADV,OAETC,KAFS,CAEH,CAAG,IAAE,EAAH,GAAO,KAAKvB,MAAd,EAAuB,IAAE,EAAH,GAAO,KAAKA,MAAlC,CAFG,CAAlB,CAPmD,CAWnD;;AACA,YAAMyB,UAAU,GAAGL,WAAW,CAACM,KAAZ,GACOC,MADP,CACcC,IAAI,IAAIC,MAAM,CAACC,SAAP,CAAiBF,IAAjB,CADtB,CAAnB;AAGA,UAAIG,WAAW,GAAG3D,EAAE,CAAC4D,UAAH,CAAcZ,WAAd,EAChBa,UADgB,CACLR,UADK,EAEhBS,UAFgB,CAEL9D,EAAE,CAAC+D,MAAH,CAAU,GAAV,CAFK,CAAlB;AAIA,UAAIC,WAAW,GAAGhE,EAAE,CAACiE,QAAH,CAAYb,WAAZ,CAAlB;AAEAoB,MAAAA,eAAe,CAACN,MAAhB,CAAuB,MAAvB,EACcC,IADd,CACmB,aADnB,EACkC,QADlC,EAEcA,IAFd,CAEmB,GAFnB,EAEuB,KAAKrC,KAAL,GAAW,CAFlC,EAGcqC,IAHd,CAGmB,GAHnB,EAGuB,KAAKvC,MAAL,GAAY,EAHnC,EAIcwC,KAJd,CAIoB,WAJpB,EAIiC,MAJjC,EAKcA,KALd,CAKoB,iBALpB,EAKuC,WALvC,EAMcC,IANd,CAMmB,oBANnB;AAQAG,MAAAA,eAAe,CAACN,MAAhB,CAAuB,GAAvB,EACcC,IADd,CACmB,IADnB,EACwB,yBADxB,EAEcA,IAFd,CAEmB,WAFnB,EAE+B,iBAAiB,KAAKvC,MAAL,GAAY,CAA7B,GAAiC,GAFhE,EAGc0C,IAHd,CAGmBX,WAHnB;AAKAa,MAAAA,eAAe,CAACN,MAAhB,CAAuB,GAAvB,EACcC,IADd,CACmB,IADnB,EACwB,yBADxB,EAEcA,IAFd,CAEmB,WAFnB,EAE+B,eAAe,KAAKrC,KAAL,GAAW,CAA1B,GAA8B,KAF7D,EAGcwC,IAHd,CAGmBN,WAHnB;AAIH;;AAED,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIjB,UADJ,CADJ;AAKH;;AA9GuC;;AAkH/C,MAAM0B,QAAN,SAAuB7E,KAAK,CAACC,SAA7B,CAAuC;AACnC2C,EAAAA,WAAW,CAACtC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAK0B,MAAL,GAAc,CAAd;AACA,SAAKE,KAAL,GAAa,CAAb;AACH;;AAEDW,EAAAA,iBAAiB,GAAE;AACf;AACA,SAAKb,MAAL,GAAcH,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCC,qBAAvC,GAA+DC,MAA7E;AACA,SAAKE,KAAL,GAAaL,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCC,qBAAvC,GAA+DG,KAA5E;AACH;;AAEDd,EAAAA,MAAM,GAAE;AACJ,UAAM0D,OAAO,GAAG,KAAKxE,KAAL,CAAWgB,OAA3B,CADI,CAGJ;AACA;AACA;;AACA,SAAI,IAAIX,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGmE,OAAO,CAACvD,MAA3B,EAAmCZ,CAAC,EAApC,EAAuC;AAEnC,UAAIoE,KAAK,GAAI,MAAb;AACA,UAAIC,MAAM,GAAG,OAAb;AACAD,MAAAA,KAAK,GAAGA,KAAK,CAACE,MAAN,CAAatE,CAAC,CAACuE,QAAF,CAAW,EAAX,CAAb,CAAR;AACAF,MAAAA,MAAM,GAAGA,MAAM,CAACC,MAAP,CAActE,CAAC,CAACuE,QAAF,CAAW,EAAX,CAAd,CAAT;AAEA,UAAIC,aAAa,GAAG/E,EAAE,CAACgF,IAAH,GACGC,KADH,CACSjF,EAAE,CAACkF,YADZ,CAApB;AAGA,UAAIC,QAAQ,GAAGJ,aAAa,CAACL,OAAO,CAACnE,CAAD,CAAP,CAAW6E,MAAZ,CAA5B,CAVmC,CAYlC;;AACD,UAAIC,MAAM,GAAGrF,EAAE,CAACiD,WAAH,GACAC,MADA,CACO,CAAC,CAAD,EAAI,CAAJ,CADP,EACe;AADf,OAEAC,KAFA,CAEM,CAAG,IAAE,EAAH,GAAO,KAAKrB,KAAd,EAAsB,IAAE,EAAH,GAAO,KAAKA,KAAjC,CAFN,CAAb;AAIA,UAAIwD,MAAM,GAAGtF,EAAE,CAACiD,WAAH,GACAC,MADA,CACO,CAAC,CAAD,EAAG,CAAC,CAAJ,CADP,EACe;AADf,OAEAC,KAFA,CAEM,CAAG,IAAE,EAAH,GAAO,KAAKvB,MAAd,EAAuB,IAAE,EAAH,GAAO,KAAKA,MAAlC,CAFN,CAAb,CAjBmC,CAqBnC;;AACA,UAAI2D,MAAM,GAAGvF,EAAE,CAAC4D,UAAH,GACR4B,KADQ,CACFH,MADE,CAAb;AAGA,UAAII,MAAM,GAAGzF,EAAE,CAACiE,QAAH,GACRuB,KADQ,CACFF,MADE,CAAb,CAzBmC,CA4BnC;;AACA,UAAG7D,QAAQ,CAACC,cAAT,CAAwBiD,KAAxB,CAAH,EAAkC;AAC9B3E,QAAAA,EAAE,CAAC6C,MAAH,CAAU,MAAI+B,MAAd,EAAsBT,IAAtB,CAA2B,GAA3B,EAAgCgB,QAAhC;AACH,OA/BkC,CAiCnC;;;AAEA,UAAG,CAAC1D,QAAQ,CAACC,cAAT,CAAwBiD,KAAxB,CAAJ,EAAmC;AAC/B;AACA,cAAMe,WAAW,GAAG1F,EAAE,CAAC6C,MAAH,CAAU,cAAV,EAA0BqB,MAA1B,CAAiC,KAAjC,EACnBC,IADmB,CACd,IADc,EACTQ,KADS,EAEnBR,IAFmB,CAEd,OAFc,EAEL,MAFK,EAGnBA,IAHmB,CAGd,QAHc,EAGJ,MAHI,EAInBA,IAJmB,CAId,WAJc,EAIF,eAJE,EAKnBA,IALmB,CAKd,OALc,EAKN,oBALM,EAMnBA,IANmB,CAMd,OANc,EAML,yBANK,EAOnBA,IAPmB,CAOd,KAPc,EAOR,OAPQ,EAQnBA,IARmB,CAQd,MARc,EAQP,MARO,CAApB;AAUAuB,QAAAA,WAAW,CAACxB,MAAZ,CAAmB,MAAnB,EACCC,IADD,CACM,aADN,EACqB,QADrB,EAECA,IAFD,CAEM,GAFN,EAEU,KAAKrC,KAAL,GAAW,CAFrB,EAGCqC,IAHD,CAGM,GAHN,EAGU,KAAKvC,MAAL,GAAY,EAHtB,EAICwC,KAJD,CAIO,WAJP,EAIoB,MAJpB,EAKCA,KALD,CAKO,iBALP,EAK0B,WAL1B,EAMCC,IAND,CAMM,eAAe9D,CANrB,EAZ+B,CAoB/B;;AACAmF,QAAAA,WAAW,CAACxB,MAAZ,CAAmB,MAAnB,EACCC,IADD,CACM,IADN,EACWS,MADX,EAECT,IAFD,CAEM,WAFN,EAEkB,eAAgB,IAAE,EAAH,GAAO,KAAKrC,KAA3B,GAAmC,KAFrD,EAGCqC,IAHD,CAGM,GAHN,EAGWgB,QAHX,EAIChB,IAJD,CAIM,QAJN,EAIgB,MAJhB,EAKCA,IALD,CAKM,cALN,EAKsB,CALtB,EAMCA,IAND,CAMM,MANN,EAMc,MANd;AAQAuB,QAAAA,WAAW,CAACxB,MAAZ,CAAmB,GAAnB,EACCC,IADD,CACM,WADN,EACkB,iBAAiB,KAAKvC,MAAL,GAAY,CAA7B,GAAiC,GADnD,EAEC0C,IAFD,CAEMiB,MAFN;AAIAG,QAAAA,WAAW,CAACxB,MAAZ,CAAmB,GAAnB,EACCC,IADD,CACM,WADN,EACkB,eAAgB,IAAE,EAAH,GAAO,KAAKrC,KAA3B,GAAmC,KADrD,EAECwC,IAFD,CAEMmB,MAFN;AAGH;AACJ;;AAED,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AAhGkC;;AAoGvC,MAAME,OAAN,SAAsB/F,KAAK,CAACC,SAA5B,CAAsC;AAClC2C,EAAAA,WAAW,CAACtC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAK0B,MAAL,GAAc,CAAd;AACA,SAAKE,KAAL,GAAa,CAAb;AACH;;AAEDW,EAAAA,iBAAiB,GAAE;AACf;AACA,SAAKb,MAAL,GAAcH,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,qBAAtC,GAA8DC,MAA5E;AACA,SAAKE,KAAL,GAAaL,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,qBAAtC,GAA8DG,KAA3E;AACH;;AAEDd,EAAAA,MAAM,GAAE;AAEJ,QAAI4E,UAAU,GAAG,EAAjB;AACA,QAAI5D,SAAS,GAAG,MAAM,KAAKF,KAA3B;AACA+D,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlE,MAAjB;AACAiE,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhE,KAAjB,EALI,CAOJ;;AACA,SAAI,IAAIiE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG/D,SAAnB,EAA8B+D,CAAC,EAA/B,EAAkC;AAC9BH,MAAAA,UAAU,CAACxE,IAAX,CAAgB,CAAC,CAAD,EAAG,CAAH,CAAhB;AACH,KAVG,CAYJ;;;AACA,SAAK,IAAIb,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAG,KAAKL,KAAL,CAAWgB,OAAX,CAAmBC,MAArC,EAA6CZ,CAAC,EAA9C,EAAiD;AAE7C;AACA,WAAI,IAAIyF,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAG,KAAK9F,KAAL,CAAWgB,OAAX,CAAmBX,CAAnB,EAAsB6E,MAAtB,CAA6BjE,MAA9C,EAAsD6E,CAAC,EAAvD,EAA0D;AAEtD;AACAJ,QAAAA,UAAU,CAACI,CAAD,CAAV,CAAc,CAAd,IAAmB,KAAK9F,KAAL,CAAWgB,OAAX,CAAmBX,CAAnB,EAAsB6E,MAAtB,CAA6BY,CAA7B,EAAgC,CAAhC,CAAnB;AACAJ,QAAAA,UAAU,CAACI,CAAD,CAAV,CAAc,CAAd,KAAoB,KAAK9F,KAAL,CAAWgB,OAAX,CAAmBX,CAAnB,EAAsB6E,MAAtB,CAA6BY,CAA7B,EAAgC,CAAhC,CAApB;AACH;AAEJ,KAvBG,CAyBJ;;;AACA,SAAK,IAAIC,CAAC,GAAE,CAAZ,EAAeA,CAAC,GAAGL,UAAU,CAACzE,MAA9B,EAAsC8E,CAAC,EAAvC,EAA0C;AACtCL,MAAAA,UAAU,CAACK,CAAD,CAAV,CAAc,CAAd,IAAmBL,UAAU,CAACK,CAAD,CAAV,CAAc,CAAd,IAAmB,CAAC,KAAK/F,KAAL,CAAWgB,OAAX,CAAmBC,MAAnB,GAA0B,CAA3B,KAA+B,KAAKS,MAAL,GAAY,CAA3C,CAAtC;AACH;;AAED,QAAImD,aAAa,GAAG/E,EAAE,CAACgF,IAAH,GACjBC,KADiB,CACXjF,EAAE,CAACkF,YADQ,CAApB;AAGA,QAAIC,QAAQ,GAAGJ,aAAa,CAACa,UAAD,CAA5B,CAjCI,CAoCJ;;AACA,QAAIP,MAAM,GAAGrF,EAAE,CAACiD,WAAH,GACZC,MADY,CACL,CAAC,CAAD,EAAI,CAAJ,CADK,EACG;AADH,KAEZC,KAFY,CAEN,CAAG,IAAE,EAAH,GAAO,KAAKrB,KAAd,EAAsB,IAAE,EAAH,GAAO,KAAKA,KAAjC,CAFM,CAAb;AAIA,QAAIwD,MAAM,GAAGtF,EAAE,CAACiD,WAAH,GACZC,MADY,CACL,CAAC,CAAD,EAAG,CAAC,CAAJ,CADK,EACG;AADH,KAEZC,KAFY,CAEN,CAAE,IAAE,EAAH,GAAO,KAAKvB,MAAb,EAAsB,IAAE,EAAH,GAAO,KAAKA,MAAjC,CAFM,CAAb,CAzCI,CA6CJ;;AACA,QAAI2D,MAAM,GAAGvF,EAAE,CAAC4D,UAAH,GACZ4B,KADY,CACNH,MADM,CAAb;AAGA,QAAII,MAAM,GAAGzF,EAAE,CAACiE,QAAH,GACZuB,KADY,CACNF,MADM,CAAb,CAjDI,CAoDJ;AAEA;;AACA,QAAG7D,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAH,EAAuC;AACnC1B,MAAAA,EAAE,CAAC6C,MAAH,CAAU,MAAI,UAAd,EAA0BsB,IAA1B,CAA+B,GAA/B,EAAoCgB,QAApC;AAEH,KA1DG,CA4DJ;;;AACA,QAAG,CAAC1D,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAJ,EAAwC;AACnC1B,MAAAA,EAAE,CAAC6C,MAAH,CAAU,aAAV,EAAyBqB,MAAzB,CAAgC,MAAhC,EACIC,IADJ,CACS,IADT,EACc,UADd,EAEIA,IAFJ,CAES,GAFT,EAEcgB,QAFd,EAGIhB,IAHJ,CAGS,WAHT,EAGqB,eAAgB,IAAE,EAAH,GAAO,KAAKrC,KAA3B,GAAmC,GAHxD,EAIIqC,IAJJ,CAIS,QAJT,EAImB,MAJnB,EAKIA,IALJ,CAKS,cALT,EAKyB,CALzB,EAMIA,IANJ,CAMS,MANT,EAMiB,MANjB;AAQD,YAAM+B,UAAU,GAAGlG,EAAE,CAAC6C,MAAH,CAAU,aAAV,CAAnB;AAEIqD,MAAAA,UAAU,CAAChC,MAAX,CAAkB,MAAlB,EACCC,IADD,CACM,aADN,EACqB,QADrB,EAECA,IAFD,CAEM,GAFN,EAEU,KAAKrC,KAAL,GAAW,CAFrB,EAGCqC,IAHD,CAGM,GAHN,EAGU,KAAKvC,MAAL,GAAY,EAHtB,EAICwC,KAJD,CAIO,WAJP,EAIoB,MAJpB,EAKCA,KALD,CAKO,iBALP,EAK0B,WAL1B,EAMCC,IAND,CAMM,qBANN;AAQA6B,MAAAA,UAAU,CAAChC,MAAX,CAAkB,GAAlB,EACCC,IADD,CACM,WADN,EACmB,iBAAiB,KAAKvC,MAAL,GAAY,CAA7B,GAAiC,GADpD,EAEC0C,IAFD,CAEMiB,MAFN;AAIAW,MAAAA,UAAU,CAAChC,MAAX,CAAkB,GAAlB,EACCC,IADD,CACM,WADN,EACkB,eAAgB,IAAE,EAAH,GAAO,KAAKrC,KAA3B,GAAmC,KADrD,EAECwC,IAFD,CAEMmB,MAFN;AAIP;;AAED,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AA1GiC;;AA6GtC,OAAO,MAAMU,mBAAN,SAAkCvG,KAAK,CAACC,SAAxC,CAAkD;AACrD2C,EAAAA,WAAW,CAACtC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKkG,KAAL,GAAa;AACTlF,MAAAA,OAAO,EAAE;AACL;;;;;;;;;AADK,OADA;AAYTmF,MAAAA,OAAO,EAAC;AAZC,KAAb,CAFc,CAiBd;;AACA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKE,eAAL,GAAuB,KAAKA,eAAL,CAAqBF,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKG,yBAAL,GAAiC,KAAKA,yBAAL,CAA+BH,IAA/B,CAAoC,IAApC,CAAjC;AACA,SAAKI,2BAAL,GAAmC,KAAKA,2BAAL,CAAiCJ,IAAjC,CAAsC,IAAtC,CAAnC;AACH;;AAEDK,EAAAA,SAAS,GAAE;AACP,UAAM1F,OAAO,GAAG,KAAKkF,KAAL,CAAWlF,OAA3B,CADO,CAGP;;AACA,SAAK2F,QAAL,CAAc;AACV3F,MAAAA,OAAO,EAAEA,OAAO,CAAC2D,MAAR,CAAe,CAAC;AAAQ;AAC7BvE,QAAAA,EAAE,EAAEY,OAAO,CAACC,MADS;AAErBT,QAAAA,SAAS,EAAE,CAFU;AAEQ;AAC7BoG,QAAAA,SAAS,EAAE5F,OAAO,CAACC,MAHE;AAGQ;AAC7BP,QAAAA,KAAK,EAAE,CAJc;AAKrBwE,QAAAA,MAAM,EAAE,KAAK2B,cAAL,CAAoB,CAApB,EAAsB7F,OAAO,CAACC,MAA9B,EAAqC,CAArC,CALa;AAMrB6F,QAAAA,QAAQ,EAAE;AANW,OAAD,CAAf;AADC,KAAd;AAYH;;AAEDC,EAAAA,YAAY,CAAC1G,CAAD,EAAG;AACX;AACA,UAAMW,OAAO,GAAG,KAAKkF,KAAL,CAAWlF,OAA3B;AAGA2E,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYvF,CAAZ;AACAsF,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB5E,OAAxB;AACAA,IAAAA,OAAO,CAACgG,MAAR,CAAe3G,CAAf,EAAiB,CAAjB;AACAsF,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB5E,OAAtB;;AAEA,SAAI,IAAI+E,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE,KAAKG,KAAL,CAAWlF,OAAX,CAAmBC,MAArC,EAA6C8E,CAAC,EAA9C,EAAiD;AAC7C/E,MAAAA,OAAO,CAAC+E,CAAD,CAAP,CAAW3F,EAAX,GAAgB2F,CAAhB;AACH,KAbU,CAeX;;;AAEA,QAAItB,KAAK,GAAI,MAAb;AACA,QAAIC,MAAM,GAAG,OAAb;AACAD,IAAAA,KAAK,GAAGA,KAAK,CAACE,MAAN,CAAatE,CAAC,CAACuE,QAAF,CAAW,EAAX,CAAb,CAAR;AACAF,IAAAA,MAAM,GAAGA,MAAM,CAACC,MAAP,CAActE,CAAC,CAACuE,QAAF,CAAW,EAAX,CAAd,CAAT;AAEA9E,IAAAA,EAAE,CAAC6C,MAAH,CAAU,MAAI8B,KAAd,EAAqBwC,MAArB;AAEA,SAAKN,QAAL,CAAc;AACV3F,MAAAA,OAAO,EAAEA;AADC,KAAd;AAGA2E,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKM,KAAL,CAAWlF,OAAvB;AAGH;;AAED6F,EAAAA,cAAc,CAACrG,SAAD,EAAYoG,SAAZ,EAAuBlG,KAAvB,EAA6B;AACvC;AACA,QAAIwG,MAAM,GAAG,EAAb,CAFuC,CAGvC;;AACA,UAAM5F,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,qBAAtC,GAA8DC,MAAhF;AACA,UAAMI,SAAS,GAAG,MAAMP,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,qBAAtC,GAA8DG,KAAtF;AACA+D,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyB9D,SAAzB;AACA,QAAIwD,KAAK,GAAG,CAAC,GAAb;AACA,QAAI6B,QAAQ,GAAG,CAAf;AACA,QAAIC,QAAQ,GAAG,CAAf,CATuC,CAWvC;;AACA,QAAIC,EAAE,GAAGC,IAAI,CAACC,EAAL,IAAWzF,SAAS,GAAC,CAArB,CAAT;AAEA;;;;;;;;;;;;;;AAeA,SAAI,IAAIzB,CAAC,GAAG8G,QAAZ,EAAsB9G,CAAC,GAAEyB,SAAzB,EAAoCzB,CAAC,EAArC,EACA;AACI6G,MAAAA,MAAM,CAAC7G,CAAD,CAAN,GAAY,CAACA,CAAD,EAAIiF,KAAK,GAAC9E,SAAN,GAAgB8G,IAAI,CAACE,GAAL,CAASH,EAAE,GAACT,SAAH,GAAavG,CAAb,GAAkBK,KAAK,IAAI4G,IAAI,CAACC,EAAL,GAAU,GAAd,CAAhC,CAAhB,IAAyEjG,SAAS,GAAC,CAAV,GAAc8F,QAAvF,CAAJ,CAAZ;AACH;;AACDzB,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BsB,MAAM,CAACjG,MAAlC;AACA,WAAOiG,MAAP;AACH;;AAEDO,EAAAA,UAAU,CAACjH,SAAD,EAAW;AACjB,QAAI0G,MAAM,GAAG,EAAb;AACA,UAAM5F,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,qBAAtC,GAA8DC,MAAhF;AACA,UAAMI,SAAS,GAAG,MAAMP,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,qBAAtC,GAA8DG,KAAtF;AACA,QAAI0D,KAAK,GAAG,CAAC,GAAb;AACA,QAAI6B,QAAQ,GAAG,CAAf;AACA,QAAIC,QAAQ,GAAG,CAAf;;AAEA,SAAI,IAAI/G,CAAC,GAAG8G,QAAZ,EAAsB9G,CAAC,GAAEyB,SAAzB,EAAoCzB,CAAC,EAArC,EACA;AACI6G,MAAAA,MAAM,CAAC7G,CAAD,CAAN,GAAY,CAACA,CAAD,EAAIiF,KAAK,GAAC9E,SAAN,IAAmBc,SAAS,GAAC,CAAV,GAAc8F,QAAjC,CAAJ,CAAZ;AACH;;AAED,WAAOF,MAAP;AACH;;AAEDQ,EAAAA,WAAW,GAAE;AACT,UAAM1G,OAAO,GAAG,KAAKkF,KAAL,CAAWlF,OAA3B;;AAEA,SAAI,IAAIX,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAEW,OAAO,CAACC,MAA1B,EAAkCZ,CAAC,EAAnC,EAAsC;AAClCkB,MAAAA,QAAQ,CAACC,cAAT,CAAwB,WAAWR,OAAO,CAACX,CAAD,CAAP,CAAWD,EAAtB,GAA2B,UAAnD,EAA+DuH,KAA/D,GAAuE3G,OAAO,CAACX,CAAD,CAAP,CAAWG,SAAlF;AACAe,MAAAA,QAAQ,CAACC,cAAT,CAAwB,WAAWR,OAAO,CAACX,CAAD,CAAP,CAAWD,EAAtB,GAA2B,WAAnD,EAAgEuH,KAAhE,GAAwE3G,OAAO,CAACX,CAAD,CAAP,CAAWuG,SAAnF;AACH;AACJ;;AAEDgB,EAAAA,YAAY,CAAC/G,KAAD,EAAO;AAGf,UAAMG,OAAO,GAAG,KAAKkF,KAAL,CAAWlF,OAA3B;AACA,UAAM6G,SAAS,GAAGhH,KAAK,CAACiH,MAAN,CAAaC,YAAb,CAA0B,YAA1B,CAAlB;AACA,UAAMC,QAAQ,GAAGnH,KAAK,CAACiH,MAAN,CAAaC,YAAb,CAA0B,WAA1B,CAAjB,CALe,CAK0C;;AACzD,QAAIJ,KAAK,GAAGM,UAAU,CAACpH,KAAK,CAACiH,MAAN,CAAaH,KAAd,CAAtB,CANe,CAQf;;AAEA,QAAIE,SAAS,KAAK,SAAf,IAA8BA,SAAS,KAAK,SAA/C,EAA0D;AACtD,UAAGK,KAAK,CAACP,KAAD,CAAR,EAAgB;AACZA,QAAAA,KAAK,GAAG,CAAR;AACH,OAFD,MAGI;AACA;AACA,YAAGK,QAAQ,IAAI,CAAf,EAAiB;AACbhH,UAAAA,OAAO,CAACgH,QAAD,CAAP,CAAkBxH,SAAlB,GAA8BmH,KAA9B;AACA3G,UAAAA,OAAO,CAACgH,QAAD,CAAP,CAAkB9C,MAAlB,GAA2B,KAAKuC,UAAL,CAAgBzG,OAAO,CAACgH,QAAD,CAAP,CAAkBxH,SAAlC,CAA3B;AACAe,UAAAA,QAAQ,CAACC,cAAT,CAAwB,WAAWwG,QAAX,GAAsB,UAA9C,EAA0DL,KAA1D,GAAkEA,KAAlE;AACH,SAJD,CAKA;AALA,aAMI;AACA3G,YAAAA,OAAO,CAACgH,QAAD,CAAP,CAAkBxH,SAAlB,GAA8BmH,KAA9B;AACA3G,YAAAA,OAAO,CAACgH,QAAD,CAAP,CAAkB9C,MAAlB,GAA2B,KAAK2B,cAAL,CAAoB7F,OAAO,CAACgH,QAAD,CAAP,CAAkBxH,SAAtC,EAAiDQ,OAAO,CAACgH,QAAD,CAAP,CAAkBpB,SAAnE,EAA8E5F,OAAO,CAACgH,QAAD,CAAP,CAAkBtH,KAAhG,CAA3B;AACAa,YAAAA,QAAQ,CAACC,cAAT,CAAwB,WAAWwG,QAAX,GAAsB,UAA9C,EAA0DL,KAA1D,GAAkEA,KAAlE;AACH;AACJ;AACJ,KAlBD,MAmBK,IAAKE,SAAS,KAAK,WAAf,IAAgCA,SAAS,KAAK,WAAlD,EAA+D;AAChElC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY5E,OAAO,CAACgH,QAAD,CAAP,CAAkBxH,SAA9B;AACAmF,MAAAA,OAAO,CAACC,GAAR,CAAY5E,OAAO,CAACgH,QAAD,CAAP,CAAkBtH,KAA9B;;AAEA,UAAGwH,KAAK,CAACP,KAAD,CAAR,EAAgB;AACZA,QAAAA,KAAK,GAAG,CAAR;AACH,OAFD,MAGI;AACA;AACA,YAAGK,QAAQ,IAAI,CAAf,EAAiB;AACbhH,UAAAA,OAAO,CAACgH,QAAD,CAAP,CAAkBtH,KAAlB,GAA0BiH,KAA1B;AACA3G,UAAAA,OAAO,CAACgH,QAAD,CAAP,CAAkB9C,MAAlB,GAA2B,KAAKuC,UAAL,CAAgBzG,OAAO,CAACgH,QAAD,CAAP,CAAkBxH,SAAlC,CAA3B;AACAe,UAAAA,QAAQ,CAACC,cAAT,CAAwB,WAAWwG,QAAX,GAAsB,YAA9C,EAA4DL,KAA5D,GAAoEA,KAApE;AACH,SAJD,CAKC;AALD,aAMI;AACA3G,YAAAA,OAAO,CAACgH,QAAD,CAAP,CAAkBtH,KAAlB,GAA0BiH,KAA1B;AACA3G,YAAAA,OAAO,CAACgH,QAAD,CAAP,CAAkB9C,MAAlB,GAA2B,KAAK2B,cAAL,CAAoB7F,OAAO,CAACgH,QAAD,CAAP,CAAkBxH,SAAtC,EAAiDQ,OAAO,CAACgH,QAAD,CAAP,CAAkBpB,SAAnE,EAA8E5F,OAAO,CAACgH,QAAD,CAAP,CAAkBtH,KAAhG,CAA3B;AACAa,YAAAA,QAAQ,CAACC,cAAT,CAAwB,WAAWwG,QAAX,GAAsB,YAA9C,EAA4DL,KAA5D,GAAoEA,KAApE;AACH;AACJ;AACJ;;AAED,SAAKhB,QAAL,CAAc;AACN3F,MAAAA,OAAO,EAAEA;AADH,KAAd;AAKH;;AAGDoF,EAAAA,eAAe,CAAC+B,CAAD,EAAG;AACdxC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AAEAuC,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMpH,OAAO,GAAG,KAAKkF,KAAL,CAAWlF,OAA3B;AACA,UAAMgH,QAAQ,GAAGG,CAAC,CAACL,MAAF,CAASC,YAAT,CAAsB,WAAtB,CAAjB,CALc,CAKuC;;AAErD/G,IAAAA,OAAO,CAACgH,QAAD,CAAP,CAAkBlB,QAAlB,GAA6B,IAA7B;AAEA,SAAKH,QAAL,CAAc;AACV3F,MAAAA,OAAO,EAAEA;AADC,KAAd;AAIH;;AAEDsF,EAAAA,aAAa,CAAC6B,CAAD,EAAG;AACZxC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AAEA,UAAM5E,OAAO,GAAG,KAAKkF,KAAL,CAAWlF,OAA3B;AACA,UAAMgH,QAAQ,GAAGG,CAAC,CAACL,MAAF,CAASC,YAAT,CAAsB,WAAtB,CAAjB,CAJY,CAIyC;;AACrDpC,IAAAA,OAAO,CAACC,GAAR,CAAYuC,CAAC,CAACE,IAAd;;AACA,QAAGF,CAAC,CAACE,IAAF,IAAU,UAAV,IAAwBrH,OAAO,CAACgH,QAAD,CAAP,CAAkBlB,QAA7C,EAAuD;AACnDnB,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA;AACH;;AAED5E,IAAAA,OAAO,CAACgH,QAAD,CAAP,CAAkBlB,QAAlB,GAA6B,KAA7B;AAEA,SAAKH,QAAL,CAAc;AACV3F,MAAAA,OAAO,EAAEA;AADC,KAAd;AAKH,GAxOoD,CA0OrD;;;AACAuF,EAAAA,eAAe,CAAC4B,CAAD,EAAI;AAEf,UAAMnH,OAAO,GAAG,KAAKkF,KAAL,CAAWlF,OAA3B;AACA,UAAMgH,QAAQ,GAAGG,CAAC,CAACL,MAAF,CAASC,YAAT,CAAsB,WAAtB,CAAjB,CAHe,CAGsC;AAErD;;AACE,QAAI/G,OAAO,CAACgH,QAAD,CAAP,CAAkBlB,QAAtB,EAAgC;AAC5BqB,MAAAA,CAAC,CAACC,cAAF;AAEAzC,MAAAA,OAAO,CAACC,GAAR,CAAYuC,CAAZ;AACAxC,MAAAA,OAAO,CAACC,GAAR,CAAYuC,CAAC,CAACL,MAAd;AACAnC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBuC,CAAC,CAACG,OAAzB;AACA3C,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBuC,CAAC,CAACI,OAAzB,EAN4B,CAO5B;;AACF,UAAKC,IAAI,GAAGL,CAAC,CAACL,MAAF,CAASW,UAAT,CAAoBA,UAApB,CAA+BhH,qBAA/B,EAAZ;AAEAkE,MAAAA,OAAO,CAACC,GAAR,CAAY4C,IAAI,CAACE,IAAjB;AACA/C,MAAAA,OAAO,CAACC,GAAR,CAAY4C,IAAI,CAACG,GAAjB,EAX8B,CAc9B;;AACC3H,MAAAA,OAAO,CAACgH,QAAD,CAAP,CAAkBpB,SAAlB,GAA8B,CAACuB,CAAC,CAACG,OAAF,GAAYE,IAAI,CAACE,IAAjB,GAAwB,GAAzB,IAAgC,GAA9D;AACA1H,MAAAA,OAAO,CAACgH,QAAD,CAAP,CAAkBxH,SAAlB,GAA8B,EAAG2H,CAAC,CAACI,OAAF,GAAYC,IAAI,CAACG,GAAjB,GAAuB,GAA1B,IAAiC,GAA/D;AACA3H,MAAAA,OAAO,CAACgH,QAAD,CAAP,CAAkB9C,MAAlB,GAA2B,KAAK2B,cAAL,CAAoB7F,OAAO,CAACgH,QAAD,CAAP,CAAkBxH,SAAtC,EAAiDQ,OAAO,CAACgH,QAAD,CAAP,CAAkBpB,SAAnE,EAA8E5F,OAAO,CAACgH,QAAD,CAAP,CAAkBtH,KAAhG,CAA3B,CAjB6B,CAoB9B;;AAEAiF,MAAAA,OAAO,CAACC,GAAR,CAAY5E,OAAO,CAACgH,QAAD,CAAP,CAAkBpB,SAA9B;AACAjB,MAAAA,OAAO,CAACC,GAAR,CAAY5E,OAAO,CAACgH,QAAD,CAAP,CAAkBxH,SAA9B;AAEAmF,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AAEA,WAAKe,QAAL,CAAc;AACV3F,QAAAA,OAAO,EAAEA;AADC,OAAd;AAIH;AACJ;;AAEDwF,EAAAA,yBAAyB,CAAC2B,CAAD,EAAI;AAEzB,UAAMnH,OAAO,GAAG,KAAKkF,KAAL,CAAWlF,OAA3B;AACA,UAAMgH,QAAQ,GAAGG,CAAC,CAACL,MAAF,CAASC,YAAT,CAAsB,WAAtB,CAAjB,CAHyB,CAG4B;AAErD;;AACE,QAAI/G,OAAO,CAACgH,QAAD,CAAP,CAAkBlB,QAAtB,EAAgC;AAC5BqB,MAAAA,CAAC,CAACC,cAAF;AAGFzC,MAAAA,OAAO,CAACC,GAAR,CAAYuC,CAAC,CAACL,MAAd;AACA,UAAKU,IAAI,GAAGL,CAAC,CAACL,MAAF,CAASW,UAAT,CAAoBA,UAApB,CAA+BhH,qBAA/B,EAAZ;AAEA,UAAIH,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,mBAAxB,EAA6CC,qBAA7C,GAAqEC,MAArF;AACA,UAAIC,QAAQ,GAAGJ,QAAQ,CAACC,cAAT,CAAwB,mBAAxB,EAA6CC,qBAA7C,GAAqEG,KAApF;AACA,UAAIC,UAAU,GAAG,MAAIP,SAArB;AACA,UAAIQ,SAAS,GAAG,MAAIH,QAApB,CAV8B,CAY9B;;AACCX,MAAAA,OAAO,CAACgH,QAAD,CAAP,CAAkBpB,SAAlB,GAA8B5F,OAAO,CAACgH,QAAD,CAAP,CAAkB5H,EAAhD;AACAY,MAAAA,OAAO,CAACgH,QAAD,CAAP,CAAkBxH,SAAlB,GAA8B,EAAG2H,CAAC,CAACI,OAAF,GAAYC,IAAI,CAACG,GAAjB,GAAuBrH,SAAS,GAAC,CAApC,KAA0CA,SAAS,GAAC,CAApD,CAA9B,CAd6B,CAc4D;;AACzFN,MAAAA,OAAO,CAACgH,QAAD,CAAP,CAAkB9C,MAAlB,GAA2B,KAAK2B,cAAL,CAAoB7F,OAAO,CAACgH,QAAD,CAAP,CAAkBxH,SAAtC,EAAiDQ,OAAO,CAACgH,QAAD,CAAP,CAAkBpB,SAAnE,EAA8E5F,OAAO,CAACgH,QAAD,CAAP,CAAkBtH,KAAhG,CAA3B,CAf6B,CAiB9B;AAEA;;AACA,UAAGsH,QAAQ,IAAI,CAAf,EAAiB;AACbhH,QAAAA,OAAO,CAACgH,QAAD,CAAP,CAAkB9C,MAAlB,GAA2B,KAAKuC,UAAL,CAAgBzG,OAAO,CAACgH,QAAD,CAAP,CAAkBxH,SAAlC,CAA3B;AACH;;AAED,WAAKmG,QAAL,CAAc;AACV3F,QAAAA,OAAO,EAAEA;AADC,OAAd;AAIH;AACJ;;AAEDyF,EAAAA,2BAA2B,CAAC0B,CAAD,EAAI;AAE3B,UAAMnH,OAAO,GAAG,KAAKkF,KAAL,CAAWlF,OAA3B;AACA,UAAMgH,QAAQ,GAAGG,CAAC,CAACL,MAAF,CAASC,YAAT,CAAsB,WAAtB,CAAjB,CAH2B,CAG0B;;AACrDpC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBoC,QAAzB,EAJ2B,CAM3B;;AACE,QAAIhH,OAAO,CAACgH,QAAD,CAAP,CAAkBlB,QAAtB,EAAgC;AAC5BqB,MAAAA,CAAC,CAACC,cAAF;AAGFzC,MAAAA,OAAO,CAACC,GAAR,CAAYuC,CAAC,CAACL,MAAd;AACA,UAAKU,IAAI,GAAGL,CAAC,CAACL,MAAF,CAASW,UAAT,CAAoBA,UAApB,CAA+BhH,qBAA/B,EAAZ;AAEA,UAAIH,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,qBAAxB,EAA+CC,qBAA/C,GAAuEC,MAAvF;AACA,UAAIC,QAAQ,GAAGJ,QAAQ,CAACC,cAAT,CAAwB,qBAAxB,EAA+CC,qBAA/C,GAAuEG,KAAtF;AACA,UAAIC,UAAU,GAAG,MAAIP,SAArB;AACA,UAAIQ,SAAS,GAAG,MAAIH,QAApB,CAV8B,CAY9B;;AACCX,MAAAA,OAAO,CAACgH,QAAD,CAAP,CAAkBpB,SAAlB,GAA8B5F,OAAO,CAACgH,QAAD,CAAP,CAAkB5H,EAAhD;AACAY,MAAAA,OAAO,CAACgH,QAAD,CAAP,CAAkBtH,KAAlB,GAA0BkI,QAAQ,CAAE,EAAGT,CAAC,CAACI,OAAF,GAAYC,IAAI,CAACG,GAAjB,GAAuBrH,SAAS,GAAC,CAApC,KAA0CO,UAAU,GAAC,GAArD,CAAF,CAAlC;AACAb,MAAAA,OAAO,CAACgH,QAAD,CAAP,CAAkB9C,MAAlB,GAA2B,KAAK2B,cAAL,CAAoB7F,OAAO,CAACgH,QAAD,CAAP,CAAkBxH,SAAtC,EAAiDQ,OAAO,CAACgH,QAAD,CAAP,CAAkBpB,SAAnE,EAA8E5F,OAAO,CAACgH,QAAD,CAAP,CAAkBtH,KAAhG,CAA3B,CAf6B,CAiB9B;AAEA;;AACA,UAAGsH,QAAQ,IAAI,CAAf,EAAiB;AACbhH,QAAAA,OAAO,CAACgH,QAAD,CAAP,CAAkB9C,MAAlB,GAA2B,KAAKuC,UAAL,CAAgBzG,OAAO,CAACgH,QAAD,CAAP,CAAkBxH,SAAlC,CAA3B;AACH;;AAED,WAAKmG,QAAL,CAAc;AACV3F,QAAAA,OAAO,EAAEA;AADC,OAAd;AAIH;AACJ;;AAEDF,EAAAA,MAAM,GAAG;AAET,UAAM0D,OAAO,GAAG,KAAK0B,KAAL,CAAWlF,OAA3B;AAEA,WACQ;AAAK,MAAA,SAAS,EAAInB,MAAM,CAACgJ,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAK,MAAA,SAAS,EAAIhJ,MAAM,CAACiJ,SAAzB;AAAoC,MAAA,EAAE,EAAG,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAIjJ,MAAM,CAACkJ,SAAzB;AAAoC,MAAA,EAAE,EAAE,aAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AACI,MAAA,OAAO,EAAIvE,OADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAMI;AAAK,MAAA,SAAS,EAAI3E,MAAM,CAACmJ,QAAzB;AAAmC,MAAA,EAAE,EAAE,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,EAAE,EAAC,YAAR;AAAqB,MAAA,KAAK,EAAC,MAA3B;AAAkC,MAAA,MAAM,EAAC,MAAzC;AACI,MAAA,KAAK,EAAI;AACLC,QAAAA,QAAQ,EAAE,UADL;AAELN,QAAAA,GAAG,EAAE,IAFA;AAGLD,QAAAA,IAAI,EAAE,IAHD;AAILQ,QAAAA,SAAS,EAAE,mBAJN;AAKLC,QAAAA,MAAM,EAAE;AALH,OADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQI,oBAAC,OAAD;AACI,MAAA,OAAO,EAAI3E,OADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,CADJ,CANJ,CAFJ,EAwBI;AAAK,MAAA,SAAS,EAAI3E,MAAM,CAACuJ,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAIvJ,MAAM,CAACwJ,iBAAzB;AAA4C,MAAA,EAAE,EAAE,qBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,EAAE,EAAC,qBAAR;AAA8B,MAAA,KAAK,EAAC,MAApC;AAA2C,MAAA,MAAM,EAAC,MAAlD;AACI,MAAA,KAAK,EAAI;AACLJ,QAAAA,QAAQ,EAAE,UADL;AAELN,QAAAA,GAAG,EAAE,IAFA;AAGLD,QAAAA,IAAI,EAAE,IAHD;AAILQ,QAAAA,SAAS,EAAE,mBAJN;AAKLC,QAAAA,MAAM,EAAE;AALH,OADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUI,oBAAC,gBAAD;AACI,MAAA,OAAO,EAAI3E,OADf;AAEI,MAAA,WAAW,EAAK3D,KAAD,IAAW,KAAKuF,eAAL,CAAqBvF,KAArB,CAF9B;AAGI,MAAA,SAAS,EAAKA,KAAD,IAAW,KAAKyF,aAAL,CAAmBzF,KAAnB,CAH5B;AAII,MAAA,UAAU,EAAKA,KAAD,IAAW,KAAKyF,aAAL,CAAmBzF,KAAnB,CAJ7B;AAKI,MAAA,WAAW,EAAKA,KAAD,IAAW,KAAK4F,2BAAL,CAAiC5F,KAAjC,CAL9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,CADJ,CADJ,EAsBI;AAAK,MAAA,SAAS,EAAIhB,MAAM,CAACyJ,eAAzB;AAA0C,MAAA,EAAE,EAAE,mBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,EAAE,EAAC,mBAAR;AAA4B,MAAA,KAAK,EAAC,MAAlC;AAAyC,MAAA,MAAM,EAAC,MAAhD;AACI,MAAA,KAAK,EAAI;AACLL,QAAAA,QAAQ,EAAE,UADL;AAELN,QAAAA,GAAG,EAAE,IAFA;AAGLD,QAAAA,IAAI,EAAE,IAHD;AAILQ,QAAAA,SAAS,EAAE,mBAJN;AAKLC,QAAAA,MAAM,EAAE;AALH,OADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUI,oBAAC,cAAD;AACI,MAAA,OAAO,EAAI3E,OADf;AAEI,MAAA,WAAW,EAAK3D,KAAD,IAAW,KAAKuF,eAAL,CAAqBvF,KAArB,CAF9B;AAGI,MAAA,SAAS,EAAKA,KAAD,IAAW,KAAKyF,aAAL,CAAmBzF,KAAnB,CAH5B;AAII,MAAA,UAAU,EAAKA,KAAD,IAAW,KAAKyF,aAAL,CAAmBzF,KAAnB,CAJ7B;AAKI,MAAA,WAAW,EAAKA,KAAD,IAAW,KAAK2F,yBAAL,CAA+B3F,KAA/B,CAL9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,CADJ,CAtBJ,CAxBJ,EAoEI;AAAK,MAAA,SAAS,EAAIhB,MAAM,CAAC0J,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,oBAAC,QAAD;AACI,MAAA,OAAO,EAAI/E,OADf;AAEI,MAAA,QAAQ,EAAK3D,KAAD,IAAW,KAAK+G,YAAL,CAAkB/G,KAAlB,CAF3B;AAGI,MAAA,KAAK,EAAI,MAAM,KAAK6F,SAAL,EAHnB;AAII,MAAA,QAAQ,EAAKrG,CAAD,IAAO,KAAK0G,YAAL,CAAkB1G,CAAlB,CAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFR,CApEJ,CADR;AAiFC;;AAnboD","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport styles from './FourierCoefficients.module.css'; \r\nimport * as d3 from \"d3\";\r\n\r\nfunction Dials(props) {\r\n    return(\r\n        <div className={styles.signal_container}>\r\n            <div className={styles.signal_info}>\r\n                <div>ID: {props.signal.id}</div>\r\n                <button id = \"remove-signal\" onClick={(i) => props.onRemove(props.signal.id)}> Remove Signal </button>\r\n            </div>\r\n            <div className={styles.signal_props}>\r\n                <div>Amplitude: {props.signal.amplitude}</div>\r\n            </div>\r\n            <div className = {styles.signal_props}>\r\n                <div>\r\n                    <input \r\n                    id = {\"signal\" + props.signal.id + \"_AmpDial\" }\r\n                    signal_id = {props.signal.id}\r\n                    input_type = {\"AmpDial\"}\r\n                    type =\"range\" \r\n                    min={-5} \r\n                    max ={5} \r\n                    value = {props.signal.amplitude} \r\n                    step={0.1}\r\n                    onChange={props.onChange}\r\n                    /> \r\n                    <input\r\n                    id = {\"signal\" + props.signal.id + \"_AmpText\" }\r\n                    signal_id = {props.signal.id}\r\n                    input_type = {\"AmpText\"}\r\n                    type = \"number\"  \r\n                    min = {-5}\r\n                    max = {5}\r\n                    onChange={props.onChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className={styles.signal_props}>\r\n                <div>Phase: {props.signal.phase}</div>\r\n            </div>\r\n            <div className={styles.signal_props}>\r\n                <div>\r\n                    <input \r\n                        id = {\"signal\" + props.signal.id + \"_PhaseDial\" }\r\n                        signal_id = {props.signal.id}\r\n                        input_type = {\"PhaseDial\"}\r\n                        type =\"range\" \r\n                        min={-180} \r\n                        max ={180} \r\n                        value = {props.signal.phase} \r\n                        step={1}\r\n                        onChange={props.onChange}\r\n                    /> \r\n                    <input\r\n                        id = {\"signal\" + props.signal.id + \"_PhaseText\" }\r\n                        signal_id = {props.signal.id}\r\n                        input_type = {\"PhaseText\"}\r\n                        type = \"number\"  \r\n                        min = {-180}\r\n                        max = {180}\r\n                        onChange={props.onChange}\r\n                    />\r\n                </div>        \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nclass Controls extends React.Component {\r\n\r\n    renderDial(signal){\r\n        return(\r\n            <Dials\r\n                signal = {signal}\r\n                onChange = {(event) => this.props.onChange(event)}\r\n                onRemove = {(i) => this.props.onRemove(i)}\r\n            />\r\n        );\r\n    }\r\n\r\n    render(){\r\n        const signalList = []; \r\n        for (let i=0; i < this.props.signals.length; i++){\r\n            signalList.push(\r\n                <div key={\"signal\" + this.props.signals[i].id}> \r\n                    {this.renderDial(this.props.signals[i])} \r\n                </div>\r\n            )\r\n        }\r\n        return(\r\n            <div className = {styles.dials} >\r\n                <button id = \"add-signal\" align-content = \"center\" onClick={() => this.props.onAdd()}> Add New Signal </button>\r\n                {signalList}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction FourierCirclesMagPos(props) {\r\n    let divHeight = document.getElementById(\"fourierMagPlotsID\").getBoundingClientRect().height;\r\n    let divWidth = document.getElementById(\"fourierMagPlotsID\").getBoundingClientRect().width;\r\n    let plotHeight = 0.8*divHeight;\r\n    let plotWidth = 0.8*divWidth;\r\n\r\n    return(\r\n        <circle\r\n            id = {\"circle_\"+props.signal.id}\r\n            signal_id = {props.signal.id}\r\n            cx = {(props.signal.id)*(plotWidth/8)}\r\n            cy = {(props.signal.amplitude)*(divHeight/8)}\r\n            transform={\"translate(\" + divWidth/2 +\",\" + divHeight/2 +\") scale(1,-1)\"}\r\n            r = {10}\r\n            fill = \"black\"\r\n            stroke = \"black\"\r\n            strokeWidth=\"1\"\r\n            onMouseDown={props.onMouseDown}\r\n            onMouseUp={props.onMouseUp}\r\n            onMouseOut={props.onMouseUp}\r\n            onMouseMove={props.onMouseMove}\r\n        />\r\n    );\r\n}\r\n\r\nfunction FourierCirclesMagNeg(props) {\r\n    let divHeight = document.getElementById(\"fourierMagPlotsID\").getBoundingClientRect().height;\r\n    let divWidth = document.getElementById(\"fourierMagPlotsID\").getBoundingClientRect().width;\r\n    let plotWidth = 0.8*divWidth;\r\n\r\n    return(\r\n        <circle\r\n            id = {\"circle_-\"+props.signal.id}\r\n            signal_id = {props.signal.id}\r\n            cx = {(props.signal.id)*-(plotWidth/8)} // 8 is because our x-axis is divided into 8 sections \r\n            cy = {(props.signal.amplitude)*(divHeight/8)}\r\n            transform={\"translate(\" + divWidth/2 +\",\" + divHeight/2 +\") scale(1,-1)\"}\r\n            r = {10}\r\n            fill = \"black\"\r\n            stroke = \"black\"\r\n            strokeWidth=\"1\"\r\n            onMouseDown={props.onMouseDown}\r\n            onMouseUp={props.onMouseUp}\r\n            onMouseOut={props.onMouseUp}\r\n            onMouseMove={props.onMouseMove}\r\n        />\r\n    );\r\n}\r\n\r\nfunction FourierCirclesPhasePos(props) {\r\n    let divHeight = document.getElementById(\"fourierPhasePlotsID\").getBoundingClientRect().height;\r\n    let divWidth = document.getElementById(\"fourierPhasePlotsID\").getBoundingClientRect().width;\r\n    let plotHeight = 0.8*divHeight;\r\n    let plotWidth = 0.8*divWidth;\r\n\r\n    return(\r\n        <circle\r\n            id = {\"circle_\"+props.signal.id}\r\n            signal_id = {props.signal.id}\r\n            cx = {(props.signal.id)*(plotWidth/8)} // 8 is because our x-axis is divided into 8 sections \r\n            cy = {(props.signal.phase)*(plotHeight/360)}\r\n            transform={\"translate(\" + divWidth/2 +\",\" + divHeight/2 +\") scale(1,-1)\"}\r\n            r = {10}\r\n            fill = \"black\"\r\n            stroke = \"black\"\r\n            strokeWidth=\"1\"\r\n            onMouseDown={props.onMouseDown}\r\n            onMouseUp={props.onMouseUp}\r\n            onMouseOut={props.onMouseUp}\r\n            onMouseMove={props.onMouseMove}\r\n        />\r\n    );\r\n}\r\n\r\nfunction FourierCirclesPhaseNeg(props) {\r\n    let divHeight = document.getElementById(\"fourierPhasePlotsID\").getBoundingClientRect().height;\r\n    let divWidth = document.getElementById(\"fourierPhasePlotsID\").getBoundingClientRect().width;\r\n    let plotHeight = 0.8*divHeight;\r\n    let plotWidth = 0.8*divWidth;\r\n\r\n    return(\r\n        <circle\r\n            id = {\"circle_-\"+props.signal.id}\r\n            signal_id = {props.signal.id}\r\n            cx = {(props.signal.id)*-(plotWidth/8)} // 8 is because our x-axis is divided into 8 sections \r\n            cy = {(props.signal.phase)*(plotHeight/360)}\r\n            transform={\"translate(\" + divWidth/2 +\",\" + divHeight/2 +\") scale(1,-1)\"}\r\n            r = {10}\r\n            fill = \"black\"\r\n            stroke = \"black\"\r\n            strokeWidth=\"1\"\r\n            onMouseDown={props.onMouseDown}\r\n            onMouseUp={props.onMouseUp}\r\n            onMouseOut={props.onMouseUp}\r\n            onMouseMove={props.onMouseMove}\r\n        />\r\n    );\r\n}\r\n\r\nclass FourierMagPlot extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.height = 0;\r\n        this.width = 0;\r\n    }\r\n\r\n    componentDidMount(){\r\n        // Only get dimensions when DOM is loaded\r\n        this.height = document.getElementById(\"fourierMagPlotsID\").getBoundingClientRect().height;\r\n        this.width = document.getElementById(\"fourierMagPlotsID\").getBoundingClientRect().width;\r\n    }\r\n\r\n    renderCirclePos(signal){\r\n        return(\r\n            <FourierCirclesMagPos\r\n                signal = {signal}\r\n                onMouseDown = {(event) => this.props.onMouseDown(event)}\r\n                onMouseUp = {(event) => this.props.onMouseUp(event)}\r\n                onMouseOut = {(event) => this.props.onMouseUp(event)}\r\n                onMouseMove = {(event) => this.props.onMouseMove(event)}\r\n            />\r\n        );\r\n    }\r\n\r\n    renderCircleNeg(signal){\r\n        return(\r\n            <FourierCirclesMagNeg\r\n                signal = {signal}\r\n                onMouseDown = {(event) => this.props.onMouseDown(event)}\r\n                onMouseUp = {(event) => this.props.onMouseUp(event)}\r\n                onMouseOut = {(event) => this.props.onMouseUp(event)}\r\n                onMouseMove = {(event) => this.props.onMouseMove(event)}\r\n            />\r\n        );\r\n    }\r\n\r\n    render(){\r\n\r\n        const signals = this.props.signals;\r\n        \r\n           let FourierMagSvg = d3.select(\"#svgFourierMagPlot\")\r\n           let radius = 10;  \r\n   \r\n           const circleList = []; \r\n   \r\n          \r\n           for (let i=0; i < this.props.signals.length; i++){\r\n                if(i ==0){\r\n                    circleList.push(\r\n                        this.renderCirclePos(this.props.signals[i]) \r\n                    )\r\n                }\r\n                else{\r\n                    circleList.push(\r\n                        this.renderCirclePos(this.props.signals[i]),\r\n                        this.renderCircleNeg(this.props.signals[i])\r\n                    )\r\n                }\r\n           }\r\n           \r\n           // Should probably check both axis if they exist before appending\r\n           if(!document.getElementById(\"x_axis_fourierMagPlot\")){\r\n   \r\n               // Create Axis for Frequency Plot\r\n               let xscale_freq = d3.scaleLinear()\r\n                       .domain([-4, 4]) // This needs to be dynamic\r\n                       .range([ (1/10)*this.width, (9/10)*this.width ]);\r\n   \r\n               let yscale_freq = d3.scaleLinear()\r\n                       .domain([4,-4]) // This needs to be dynamic\r\n                       .range([ (1/10)*this.height, (9/10)*this.height ]);\r\n   \r\n               // Add scales to axis\r\n               const xAxisTicks = xscale_freq.ticks()\r\n                                        .filter(tick => Number.isInteger(tick));\r\n    \r\n               let x_axis_freq = d3.axisBottom(xscale_freq)\r\n                .tickValues(xAxisTicks)\r\n                .tickFormat(d3.format(\"d\"));\r\n   \r\n               let y_axis_freq = d3.axisLeft(yscale_freq);\r\n\r\n               FourierMagSvg.append(\"text\")\r\n                            .attr(\"text-anchor\", \"middle\")  \r\n                            .attr(\"x\",this.width/2)\r\n                            .attr(\"y\",this.height/20)\r\n                            .style(\"font-size\", \"16px\") \r\n                            .style(\"text-decoration\", \"underline\")  \r\n                            .text(\"Fourier Magnitude Plot\");\r\n\r\n               FourierMagSvg.append('g')\r\n                            .attr(\"id\",\"x_axis_fourierMagPlot\")\r\n                            .attr(\"transform\",\"translate(0,\" + this.height/2 + \")\")\r\n                            .call(x_axis_freq)\r\n   \r\n               FourierMagSvg.append('g')\r\n                            .attr(\"id\",\"y_axis_fourierMagPlot\")\r\n                            .attr(\"transform\",\"translate(\" + this.width/2 + \",0)\")\r\n                            .call(y_axis_freq); \r\n           }\r\n   \r\n           return( \r\n               <svg>\r\n                  {circleList}\r\n               </svg>\r\n           );\r\n       }\r\n}\r\n\r\nclass FourierPhasePlot extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.height = 0;\r\n        this.width = 0;\r\n    }\r\n\r\n    componentDidMount(){\r\n        // Only get dimensions when DOM is loaded\r\n        this.height = document.getElementById(\"fourierPhasePlotsID\").getBoundingClientRect().height;\r\n        this.width = document.getElementById(\"fourierPhasePlotsID\").getBoundingClientRect().width;\r\n    }\r\n\r\n    renderCirclePos(signal){\r\n        return(\r\n            <FourierCirclesPhasePos\r\n                signal = {signal}\r\n                onMouseDown = {(event) => this.props.onMouseDown(event)}\r\n                onMouseUp = {(event) => this.props.onMouseUp(event)}\r\n                onMouseOut = {(event) => this.props.onMouseUp(event)}\r\n                onMouseMove = {(event) => this.props.onMouseMove(event)}\r\n            />\r\n        );\r\n    }\r\n\r\n    renderCircleNeg(signal){\r\n        return(\r\n            <FourierCirclesPhaseNeg\r\n                signal = {signal}\r\n                onMouseDown = {(event) => this.props.onMouseDown(event)}\r\n                onMouseUp = {(event) => this.props.onMouseUp(event)}\r\n                onMouseOut = {(event) => this.props.onMouseUp(event)}\r\n                onMouseMove = {(event) => this.props.onMouseMove(event)}\r\n            />\r\n        );\r\n    }\r\n\r\n    render(){\r\n\r\n        const signals = this.props.signals;\r\n        \r\n           let FourierPhaseSvg = d3.select(\"#svgFourierPhasePlot\")\r\n           let radius = 10;  \r\n   \r\n           const circleList = []; \r\n   \r\n          \r\n           \r\n           for (let i=0; i < this.props.signals.length; i++){\r\n\r\n                if(i ==0){\r\n                    circleList.push(\r\n                        this.renderCirclePos(this.props.signals[i]) \r\n                    )\r\n                }\r\n                else{\r\n                    circleList.push(\r\n                        this.renderCirclePos(this.props.signals[i]),\r\n                        this.renderCircleNeg(this.props.signals[i])\r\n                    )\r\n                }\r\n               \r\n           }\r\n           \r\n           // Should probably check both axis if they exist before appending\r\n           if(!document.getElementById(\"x_axis_fourierPhasePlot\")){\r\n   \r\n               // Create Axis for Frequency Plot\r\n               let xscale_freq = d3.scaleLinear()\r\n                       .domain([-4, 4]) // This needs to be dynamic\r\n                       .range([ (1/10)*this.width, (9/10)*this.width ]);\r\n   \r\n               let yscale_freq = d3.scaleLinear()\r\n                       .domain([180,-180]) // This needs to be dynamic\r\n                       .range([ (1/10)*this.height, (9/10)*this.height ]);\r\n   \r\n               // Add scales to axis\r\n               const xAxisTicks = xscale_freq.ticks()\r\n                                        .filter(tick => Number.isInteger(tick));\r\n    \r\n               let x_axis_freq = d3.axisBottom(xscale_freq)\r\n                .tickValues(xAxisTicks)\r\n                .tickFormat(d3.format(\"d\"));\r\n   \r\n               let y_axis_freq = d3.axisLeft(yscale_freq);\r\n               \r\n               FourierPhaseSvg.append(\"text\")\r\n                            .attr(\"text-anchor\", \"middle\")  \r\n                            .attr(\"x\",this.width/2)\r\n                            .attr(\"y\",this.height/20)\r\n                            .style(\"font-size\", \"16px\") \r\n                            .style(\"text-decoration\", \"underline\")  \r\n                            .text(\"Fourier Phase Plot\"); \r\n\r\n               FourierPhaseSvg.append('g')\r\n                            .attr(\"id\",\"x_axis_fourierPhasePlot\")\r\n                            .attr(\"transform\",\"translate(0,\" + this.height/2 + \")\")\r\n                            .call(x_axis_freq)\r\n   \r\n               FourierPhaseSvg.append('g')\r\n                            .attr(\"id\",\"y_axis_fourierPhasePlot\")\r\n                            .attr(\"transform\",\"translate(\" + this.width/2 + \",0)\")\r\n                            .call(y_axis_freq); \r\n           }\r\n   \r\n           return( \r\n               <svg>\r\n                  {circleList}\r\n               </svg>\r\n           );\r\n       }\r\n}\r\n\r\n\r\nclass SinePlot extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.height = 0;\r\n        this.width = 0;\r\n    }\r\n\r\n    componentDidMount(){\r\n        // Only get dimensions when DOM is loaded\r\n        this.height = document.getElementById(\"sinePlotsID\").getBoundingClientRect().height;\r\n        this.width = document.getElementById(\"sinePlotsID\").getBoundingClientRect().width;\r\n    }\r\n\r\n    render(){\r\n        const current = this.props.signals;\r\n    \r\n        // Appending svg\r\n        // Check if the element 'svg_id' exists. If not, create new svg, append and draw it\r\n        // Not sure if this scales well\r\n        for(let i = 0; i < current.length; i++){\r\n\r\n            let svgID  = 'svg_'\r\n            let pathID = 'path_'\r\n            svgID = svgID.concat(i.toString(10))\r\n            pathID = pathID.concat(i.toString(10))\r\n\r\n            let lineGenerator = d3.line()\r\n                                  .curve(d3.curveNatural);\r\n\r\n            let pathData = lineGenerator(current[i].values);\r\n\r\n             // Create scale\r\n            let xscale = d3.scaleLinear()\r\n                        .domain([0, 2]) // This needs to be dynamic\r\n                        .range([ (1/10)*this.width, (9/10)*this.width ]);\r\n\r\n            let yscale = d3.scaleLinear()\r\n                        .domain([4,-4]) // This needs to be dynamic\r\n                        .range([ (1/10)*this.height, (9/10)*this.height ]);\r\n\r\n            // Add scales to axis\r\n            let x_axis = d3.axisBottom()\r\n                .scale(xscale);\r\n\r\n            let y_axis = d3.axisLeft()\r\n                .scale(yscale);\r\n\r\n            // For now, if svgID exists, then just redraw\r\n            if(document.getElementById(svgID)){\r\n                d3.select(\"#\"+pathID).attr(\"d\", pathData)  \r\n            }\r\n            \r\n            // If svgID doesn't exist, then add it to the DOM\r\n\r\n            if(!document.getElementById(svgID)){\r\n                //The SVG Container\r\n                const svgSinePlot = d3.select(\"#sinePlotsID\").append(\"svg\")\r\n                .attr(\"id\",svgID)\r\n                .attr(\"width\", \"40vw\")\r\n                .attr(\"height\", \"45vh\")\r\n                .attr(\"transform\",\"translate(10)\")\r\n                .attr(\"style\",\"position: absolute\")\r\n                .attr(\"style\", \"border: 1px solid black\")\r\n                .attr(\"top\",\"100px\")\r\n                .attr(\"left\",\"50px\")\r\n\r\n                svgSinePlot.append(\"text\")\r\n                .attr(\"text-anchor\", \"middle\")  \r\n                .attr(\"x\",this.width/2)\r\n                .attr(\"y\",this.height/20)\r\n                .style(\"font-size\", \"16px\") \r\n                .style(\"text-decoration\", \"underline\")  \r\n                .text(\"Sine Plot \" + i);\r\n\r\n                //The line SVG Path we draw\r\n                svgSinePlot.append(\"path\")\r\n                .attr(\"id\",pathID)\r\n                .attr(\"transform\",\"translate(\" + (1/10)*this.width + \",0)\")\r\n                .attr(\"d\", pathData)\r\n                .attr(\"stroke\", \"blue\")\r\n                .attr(\"stroke-width\", 2)\r\n                .attr(\"fill\", \"none\")\r\n\r\n                svgSinePlot.append('g')\r\n                .attr(\"transform\",\"translate(0,\" + this.height/2 + \")\")\r\n                .call(x_axis);\r\n                \r\n                svgSinePlot.append('g')\r\n                .attr(\"transform\",\"translate(\" + (1/10)*this.width + \",0)\")\r\n                .call(y_axis);\r\n            }          \r\n        }\r\n\r\n        return(\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nclass SumPlot extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.height = 0;\r\n        this.width = 0;\r\n    }\r\n\r\n    componentDidMount(){\r\n        // Only get dimensions when DOM is loaded\r\n        this.height = document.getElementById(\"svgSumPlot\").getBoundingClientRect().height;\r\n        this.width = document.getElementById(\"svgSumPlot\").getBoundingClientRect().width;\r\n    }\r\n\r\n    render(){\r\n\r\n        let sumSignals = []; \r\n        let plotWidth = 0.8 * this.width;\r\n        console.log(this.height);\r\n        console.log(this.width);\r\n\r\n        // This will break if we change plotWidth elsewhere \r\n        for(let k = 0; k < plotWidth; k++){\r\n            sumSignals.push([0,0]);\r\n        }\r\n\r\n        // Looping through all the signals\r\n        for (let i=0; i < this.props.signals.length; i++){\r\n\r\n            // Looping through the signal values\r\n            for(let j=0; j < this.props.signals[i].values.length; j++){\r\n\r\n                //sumSignals[j] = this.props.signals[i].values[j];\r\n                sumSignals[j][0] = this.props.signals[i].values[j][0];\r\n                sumSignals[j][1] += this.props.signals[i].values[j][1];\r\n            }\r\n            \r\n        }\r\n\r\n        // Should scale this to the svg dimenesions rather than hardcoding it with svgContainerHeight\r\n        for (let n =0; n < sumSignals.length; n++){\r\n            sumSignals[n][1] = sumSignals[n][1] - (this.props.signals.length-1)*(this.height/2)\r\n        }\r\n\r\n        let lineGenerator = d3.line()\r\n          .curve(d3.curveNatural);\r\n\r\n        let pathData = lineGenerator(sumSignals);\r\n\r\n\r\n        // Create scale\r\n        let xscale = d3.scaleLinear()\r\n        .domain([0, 2]) // This needs to be dynamic\r\n        .range([ (1/10)*this.width, (9/10)*this.width ]);\r\n\r\n        let yscale = d3.scaleLinear()\r\n        .domain([4,-4]) // This needs to be dynamic\r\n        .range([(1/10)*this.height, (9/10)*this.height ]);\r\n\r\n        // Add scales to axis\r\n        let x_axis = d3.axisBottom()\r\n        .scale(xscale);\r\n\r\n        let y_axis = d3.axisLeft()\r\n        .scale(yscale);\r\n\r\n        //The svg line Path we draw\r\n\r\n        // If exists, update\r\n        if(document.getElementById(\"path_Sum\")){\r\n            d3.select(\"#\"+\"path_Sum\").attr(\"d\", pathData)  \r\n               \r\n        }\r\n        \r\n        // Draws path if it doesn't exist\r\n        if(!document.getElementById(\"path_Sum\")){\r\n             d3.select(\"#svgSumPlot\").append(\"path\")\r\n                .attr(\"id\",\"path_Sum\")\r\n                .attr(\"d\", pathData)\r\n                .attr(\"transform\",\"translate(\" + (1/10)*this.width + \")\")\r\n                .attr(\"stroke\", \"blue\")\r\n                .attr(\"stroke-width\", 2)\r\n                .attr(\"fill\", \"none\")\r\n\r\n            const svgSumPlot = d3.select(\"#svgSumPlot\")\r\n\r\n                svgSumPlot.append(\"text\")\r\n                .attr(\"text-anchor\", \"middle\")  \r\n                .attr(\"x\",this.width/2)\r\n                .attr(\"y\",this.height/20)\r\n                .style(\"font-size\", \"16px\") \r\n                .style(\"text-decoration\", \"underline\")  \r\n                .text(\"Sum of Signals Plot\");\r\n\r\n                svgSumPlot.append('g')\r\n                .attr(\"transform\", \"translate(0,\" + this.height/2 + \")\")\r\n                .call(x_axis);\r\n\r\n                svgSumPlot.append('g')\r\n                .attr(\"transform\",\"translate(\" + (1/10)*this.width + \",0)\")\r\n                .call(y_axis)\r\n                \r\n        }\r\n\r\n        return(\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport class FourierCoefficients extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            signals: [\r\n                /* Example signal object \r\n                {\r\n                    id: 0,\r\n                    amplitude: 1,\r\n                    frequency: 1,\r\n                    values: this.generateSignal(1,1),\r\n                    dragging: false,    \r\n                },\r\n                */\r\n            ],\r\n            circles:[\r\n            ],\r\n        };\r\n        // This binding is necessary to make `this.` work in the callback   \r\n        this.handleMouseDown = this.handleMouseDown.bind(this);\r\n        this.handleMouseUp = this.handleMouseUp.bind(this);\r\n        this.handleMouseMove = this.handleMouseMove.bind(this);\r\n        this.handleMouseMoveFourierMag = this.handleMouseMoveFourierMag.bind(this);\r\n        this.handleMouseMoveFourierPhase = this.handleMouseMoveFourierPhase.bind(this);\r\n    }\r\n    \r\n    addSignal(){\r\n        const signals = this.state.signals;\r\n\r\n        // Once this.setState has been called, it'll call render() to render straight away\r\n        this.setState({\r\n            signals: signals.concat([{       // Just concatenating array of JSON\r\n                id: signals.length,\r\n                amplitude: 0,                // Should be user input\r\n                frequency: signals.length,   // Should be user input\r\n                phase: 0,\r\n                values: this.generateSignal(0,signals.length,0),\r\n                dragging: false,    \r\n            },]),\r\n        });        \r\n\r\n\r\n    }\r\n\r\n    removeSignal(i){\r\n        // Need to find signal id from the array and delete, then re-update id's\r\n        const signals = this.state.signals;\r\n\r\n\r\n        console.log(\"Hi from removeSignal\");    \r\n        console.log(i)\r\n        console.log(\"Before: \", signals);\r\n        signals.splice(i,1)\r\n        console.log(\"After:\", signals);\r\n\r\n        for(let n = 0; n< this.state.signals.length; n++){\r\n            signals[n].id = n;\r\n        }        \r\n\r\n        // Find the svgId and pathID and delete from DOM\r\n\r\n        let svgID  = 'svg_'\r\n        let pathID = 'path_'\r\n        svgID = svgID.concat(i.toString(10))\r\n        pathID = pathID.concat(i.toString(10))\r\n\r\n        d3.select(\"#\"+svgID).remove();\r\n\r\n        this.setState({\r\n            signals: signals,\r\n        });\r\n        console.log(this.state.signals);\r\n\r\n    \r\n    }\r\n\r\n    generateSignal(amplitude, frequency, phase){\r\n        // Generating path data\r\n        let points = [];\r\n        // This assumes that sumPlot and sinePlots have the same dimensions\r\n        const divHeight = document.getElementById(\"svgSumPlot\").getBoundingClientRect().height;\r\n        const plotWidth = 0.8 * document.getElementById(\"svgSumPlot\").getBoundingClientRect().width;\r\n        console.log(\"Plot Width\",plotWidth)\r\n        let scale = -100;\r\n        let x_offset = 0;\r\n        let y_offset = 0;\r\n\r\n        // let Fs = 80;\r\n        let Ts = Math.PI / (plotWidth/4);\r\n\r\n        /* Calculation Reference\r\n        // Assuming the plot is 800x800\r\n        // 1 period = 1 second\r\n        // 1 period = 400 pixels => Ts = 400 samples per second\r\n        // 1 Hz = 2pi radians\r\n\r\n        // Sampling frequency = samples/second\r\n        // 1 sample per 1/400 second (Ts = 1/400)\r\n        // Fs = 2pi * (1/400)\r\n        // Fs = pi / 200\r\n\r\n        // Frequency is in Hz\r\n        // This is bascially an inverse FFT \r\n        // i is basically our t (1 unit of time)\r\n        */\r\n        for(let i = x_offset; i< plotWidth; i++)\r\n        {\r\n            points[i] = [i, scale*amplitude*Math.sin(Ts*frequency*i + (phase * (Math.PI / 180) )) + (divHeight/2 + y_offset)];\r\n        }\r\n        console.log(\"Plot Length\", points.length)\r\n        return points;\r\n    }\r\n\r\n    generateDC(amplitude){\r\n        let points = [];\r\n        const divHeight = document.getElementById(\"svgSumPlot\").getBoundingClientRect().height;\r\n        const plotWidth = 0.8 * document.getElementById(\"svgSumPlot\").getBoundingClientRect().width;\r\n        let scale = -100;\r\n        let x_offset = 0;\r\n        let y_offset = 0;\r\n\r\n        for(let i = x_offset; i< plotWidth; i++)\r\n        {\r\n            points[i] = [i, scale*amplitude + (divHeight/2 + y_offset)];\r\n        }\r\n\r\n        return points\r\n    }\r\n\r\n    updateDials(){\r\n        const signals = this.state.signals;\r\n\r\n        for(let i = 0; i< signals.length; i++){\r\n            document.getElementById(\"signal\" + signals[i].id + \"_AmpText\").value = signals[i].amplitude;\r\n            document.getElementById(\"signal\" + signals[i].id + \"_FreqText\").value = signals[i].frequency;\r\n        }\r\n    }\r\n\r\n    handleChange(event){\r\n\r\n\r\n        const signals = this.state.signals;\r\n        const inputType = event.target.getAttribute('input_type');\r\n        const signalID = event.target.getAttribute('signal_id'); // Signal ID Number\r\n        let value = parseFloat(event.target.value);   \r\n\r\n        // Text Form can currently exceed the maximum limit of 10, should limit?\r\n\r\n        if((inputType === \"AmpDial\") || (inputType === \"AmpText\")){\r\n            if(isNaN(value)){\r\n                value = 0;\r\n            }\r\n            else{\r\n                // DC Case\r\n                if(signalID == 0){\r\n                    signals[signalID].amplitude = value; \r\n                    signals[signalID].values = this.generateDC(signals[signalID].amplitude);\r\n                    document.getElementById(\"signal\" + signalID + \"_AmpText\").value = value;\r\n                }\r\n                // All Other cases\r\n                else{\r\n                    signals[signalID].amplitude = value;                 \r\n                    signals[signalID].values = this.generateSignal(signals[signalID].amplitude, signals[signalID].frequency, signals[signalID].phase);\r\n                    document.getElementById(\"signal\" + signalID + \"_AmpText\").value = value;\r\n                }     \r\n            }\r\n        }\r\n        else if ((inputType === \"PhaseDial\") || (inputType === \"PhaseText\")){\r\n            console.log(\"HELLO\")\r\n            console.log(signals[signalID].amplitude)\r\n            console.log(signals[signalID].phase)\r\n\r\n            if(isNaN(value)){\r\n                value = 0;\r\n            }\r\n            else{\r\n                // DC Case\r\n                if(signalID == 0){\r\n                    signals[signalID].phase = value; \r\n                    signals[signalID].values = this.generateDC(signals[signalID].amplitude);\r\n                    document.getElementById(\"signal\" + signalID + \"_PhaseText\").value = value;\r\n                }\r\n                 // All Other cases\r\n                else{\r\n                    signals[signalID].phase = value; \r\n                    signals[signalID].values = this.generateSignal(signals[signalID].amplitude, signals[signalID].frequency, signals[signalID].phase);\r\n                    document.getElementById(\"signal\" + signalID + \"_PhaseText\").value = value;\r\n                }\r\n            }\r\n        }     \r\n\r\n        this.setState({\r\n                signals: signals,   \r\n            }   \r\n        );\r\n\r\n    }\r\n\r\n    \r\n    handleMouseDown(e){\r\n        console.log(\"clicked\")\r\n\r\n        e.preventDefault();\r\n        const signals = this.state.signals;\r\n        const signalID = e.target.getAttribute('signal_id'); // Signal ID Number\r\n\r\n        signals[signalID].dragging = true;\r\n\r\n        this.setState({\r\n            signals: signals,   \r\n            }\r\n        );   \r\n    }\r\n\r\n    handleMouseUp(e){\r\n        console.log(\"click released\")\r\n\r\n        const signals = this.state.signals;\r\n        const signalID = e.target.getAttribute('signal_id'); // Signal ID Number\r\n        console.log(e.type)\r\n        if(e.type == 'mouseout' && signals[signalID].dragging) {\r\n            console.log(\"mouse went out\")\r\n            return;\r\n        }\r\n\r\n        signals[signalID].dragging = false;\r\n        \r\n        this.setState({\r\n            signals: signals,   \r\n            }\r\n        );\r\n        \r\n    }\r\n\r\n    // Base Mouse move function. Used in Frequency Domain. Not currently in use in this .js file\r\n    handleMouseMove(e) {\r\n\r\n        const signals = this.state.signals;\r\n        const signalID = e.target.getAttribute('signal_id'); // Signal ID Number\r\n\r\n        //If we are dragging\r\n          if (signals[signalID].dragging) {\r\n              e.preventDefault();\r\n\r\n              console.log(e)\r\n              console.log(e.target)\r\n              console.log(\"clientX:\",e.clientX)\r\n              console.log(\"clientY:\",e.clientY)\r\n              // console.log(e.target.parentNode.parentNode)\r\n            let  rect = e.target.parentNode.parentNode.getBoundingClientRect();  \r\n\r\n            console.log(rect.left);\r\n            console.log(rect.top);\r\n\r\n\r\n            // Maybe should seperate coordinates and freq/amp values\r\n             signals[signalID].frequency = (e.clientX - rect.left - 400) / 100;\r\n             signals[signalID].amplitude = - (e.clientY - rect.top - 400) / 100;\r\n             signals[signalID].values = this.generateSignal(signals[signalID].amplitude, signals[signalID].frequency, signals[signalID].phase);\r\n\r\n\r\n            // We should set position limits\r\n\r\n            console.log(signals[signalID].frequency)\r\n            console.log(signals[signalID].amplitude)\r\n\r\n            console.log(this)\r\n\r\n            this.setState({\r\n                signals: signals,   \r\n                }\r\n            );  \r\n        }\r\n    }\r\n\r\n    handleMouseMoveFourierMag(e) {\r\n\r\n        const signals = this.state.signals;\r\n        const signalID = e.target.getAttribute('signal_id'); // Signal ID Number\r\n\r\n        //If we are dragging\r\n          if (signals[signalID].dragging) {\r\n              e.preventDefault();\r\n\r\n\r\n            console.log(e.target)\r\n            let  rect = e.target.parentNode.parentNode.getBoundingClientRect();  \r\n\r\n            let divHeight = document.getElementById(\"fourierMagPlotsID\").getBoundingClientRect().height;\r\n            let divWidth = document.getElementById(\"fourierMagPlotsID\").getBoundingClientRect().width;\r\n            let plotHeight = 0.8*divHeight;\r\n            let plotWidth = 0.8*divWidth;\r\n\r\n            // Maybe should seperate coordinates and freq/amp values\r\n             signals[signalID].frequency = signals[signalID].id;\r\n             signals[signalID].amplitude = - (e.clientY - rect.top - divHeight/2) / (divHeight/8);    // 800: svg height, 8: max axis size (-4 to 4)\r\n             signals[signalID].values = this.generateSignal(signals[signalID].amplitude, signals[signalID].frequency, signals[signalID].phase);\r\n\r\n            // We should set position limits\r\n\r\n            // Checking if signal is the DC value\r\n            if(signalID == 0){\r\n                signals[signalID].values = this.generateDC(signals[signalID].amplitude);\r\n            }\r\n\r\n            this.setState({\r\n                signals: signals,   \r\n                }\r\n            );  \r\n        }\r\n    }\r\n    \r\n    handleMouseMoveFourierPhase(e) {\r\n\r\n        const signals = this.state.signals;\r\n        const signalID = e.target.getAttribute('signal_id'); // Signal ID Number\r\n        console.log(\"signalID: \",signalID)\r\n\r\n        //If we are dragging\r\n          if (signals[signalID].dragging) {\r\n              e.preventDefault();\r\n\r\n\r\n            console.log(e.target)\r\n            let  rect = e.target.parentNode.parentNode.getBoundingClientRect();  \r\n\r\n            let divHeight = document.getElementById(\"fourierPhasePlotsID\").getBoundingClientRect().height;\r\n            let divWidth = document.getElementById(\"fourierPhasePlotsID\").getBoundingClientRect().width;\r\n            let plotHeight = 0.8*divHeight;\r\n            let plotWidth = 0.8*divWidth;\r\n\r\n            // Maybe should seperate coordinates and freq/amp values\r\n             signals[signalID].frequency = signals[signalID].id;\r\n             signals[signalID].phase = parseInt( - (e.clientY - rect.top - divHeight/2) / (plotHeight/360));\r\n             signals[signalID].values = this.generateSignal(signals[signalID].amplitude, signals[signalID].frequency, signals[signalID].phase);\r\n\r\n            // We should set position limits\r\n\r\n            // Checking if signal is the DC value\r\n            if(signalID == 0){\r\n                signals[signalID].values = this.generateDC(signals[signalID].amplitude);\r\n            }\r\n\r\n            this.setState({\r\n                signals: signals,   \r\n                }\r\n            );  \r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n    const current = this.state.signals;\r\n\r\n    return (\r\n            <div className = {styles.container}>\r\n\r\n                <div className = {styles.timePlots} id = \"timePlotsID\">\r\n                    <div className = {styles.sinePlots} id =\"sinePlotsID\">\r\n                        <SinePlot\r\n                            signals = {current}\r\n                        />\r\n                    </div>\r\n                    <div className = {styles.sumPlots} id =\"sumPlotsID\">\r\n                        <svg id=\"svgSumPlot\" width=\"40vw\" height=\"45vh\" \r\n                            style = {{\r\n                                position: \"relative\", \r\n                                top: \"0%\",\r\n                                left: \"0%\",\r\n                                transform: \"translate(0%, 0%)\",\r\n                                border: '1px solid black'\r\n                                }}> \r\n                            <SumPlot\r\n                                signals = {current}\r\n                            />\r\n                        </svg>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className = {styles.otherPlots}>\r\n                    <div className = {styles.fourierPhasePlots} id =\"fourierPhasePlotsID\">\r\n                        <svg id=\"svgFourierPhasePlot\" width=\"40vw\" height=\"45vh\"  \r\n                            style = {{\r\n                                position: \"relative\", \r\n                                top: \"0%\",\r\n                                left: \"0%\",\r\n                                transform: \"translate(0%, 0%)\",\r\n                                border: '1px solid black',\r\n                                \r\n                                }}> \r\n                        \r\n                            <FourierPhasePlot\r\n                                signals = {current}\r\n                                onMouseDown = {(event) => this.handleMouseDown(event)}\r\n                                onMouseUp = {(event) => this.handleMouseUp(event)}\r\n                                onMouseOut = {(event) => this.handleMouseUp(event)}\r\n                                onMouseMove = {(event) => this.handleMouseMoveFourierPhase(event)}\r\n                            />\r\n                        </svg>\r\n                    </div>\r\n\r\n                    <div className = {styles.fourierMagPlots} id =\"fourierMagPlotsID\">\r\n                        <svg id=\"svgFourierMagPlot\" width=\"40vw\" height=\"45vh\"  \r\n                            style = {{\r\n                                position: \"relative\", \r\n                                top: \"0%\",\r\n                                left: \"0%\",\r\n                                transform: \"translate(0%, 0%)\",\r\n                                border: '1px solid black',\r\n                                \r\n                                }}> \r\n                        \r\n                            <FourierMagPlot\r\n                                signals = {current}\r\n                                onMouseDown = {(event) => this.handleMouseDown(event)}\r\n                                onMouseUp = {(event) => this.handleMouseUp(event)}\r\n                                onMouseOut = {(event) => this.handleMouseUp(event)}\r\n                                onMouseMove = {(event) => this.handleMouseMoveFourierMag(event)}\r\n                            />\r\n                        </svg>\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div className = {styles.controls}>\r\n                    \r\n                        <Controls\r\n                            signals = {current}\r\n                            onChange = {(event) => this.handleChange(event)}\r\n                            onAdd = {() => this.addSignal()}\r\n                            onRemove = {(i) => this.removeSignal(i)}\r\n                        />\r\n                    \r\n                </div>\r\n            </div>\r\n      );\r\n    }\r\n  }"]},"metadata":{},"sourceType":"module"}